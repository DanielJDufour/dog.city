{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/rbush/index.js","webpack:///./node_modules/quickselect/quickselect.js","webpack:///./node_modules/ol/util.js","webpack:///./node_modules/ol/AssertionError.js","webpack:///./node_modules/ol/CollectionEventType.js","webpack:///./node_modules/ol/ObjectEventType.js","webpack:///./node_modules/ol/obj.js","webpack:///./node_modules/ol/events.js","webpack:///./node_modules/ol/Disposable.js","webpack:///./node_modules/ol/functions.js","webpack:///./node_modules/ol/events/Event.js","webpack:///./node_modules/ol/events/Target.js","webpack:///./node_modules/ol/events/EventType.js","webpack:///./node_modules/ol/Observable.js","webpack:///./node_modules/ol/Object.js","webpack:///./node_modules/ol/Collection.js","webpack:///./node_modules/ol/MapEvent.js","webpack:///./node_modules/ol/MapBrowserEvent.js","webpack:///./node_modules/ol/has.js","webpack:///./node_modules/ol/MapBrowserEventType.js","webpack:///./node_modules/ol/MapBrowserPointerEvent.js","webpack:///./node_modules/ol/pointer/EventType.js","webpack:///./node_modules/ol/pointer/EventSource.js","webpack:///./node_modules/ol/pointer/MouseSource.js","webpack:///./node_modules/ol/pointer/MsSource.js","webpack:///./node_modules/ol/pointer/NativeSource.js","webpack:///./node_modules/ol/pointer/PointerEvent.js","webpack:///./node_modules/ol/array.js","webpack:///./node_modules/ol/pointer/TouchSource.js","webpack:///./node_modules/ol/pointer/PointerEventHandler.js","webpack:///./node_modules/ol/MapBrowserEventHandler.js","webpack:///./node_modules/ol/MapEventType.js","webpack:///./node_modules/ol/MapProperty.js","webpack:///./node_modules/ol/render/EventType.js","webpack:///./node_modules/ol/TileState.js","webpack:///./node_modules/ol/asserts.js","webpack:///./node_modules/ol/structs/PriorityQueue.js","webpack:///./node_modules/ol/TileQueue.js","webpack:///./node_modules/ol/tilegrid/common.js","webpack:///./node_modules/ol/math.js","webpack:///./node_modules/ol/centerconstraint.js","webpack:///./node_modules/ol/rotationconstraint.js","webpack:///./node_modules/ol/ViewHint.js","webpack:///./node_modules/ol/ViewProperty.js","webpack:///./node_modules/ol/coordinate.js","webpack:///./node_modules/ol/easing.js","webpack:///./node_modules/ol/extent/Corner.js","webpack:///./node_modules/ol/extent/Relationship.js","webpack:///./node_modules/ol/extent.js","webpack:///./node_modules/ol/geom/GeometryType.js","webpack:///./node_modules/ol/geom/GeometryLayout.js","webpack:///./node_modules/ol/geom/flat/transform.js","webpack:///./node_modules/ol/sphere.js","webpack:///./node_modules/ol/proj/Units.js","webpack:///./node_modules/ol/proj/Projection.js","webpack:///./node_modules/ol/proj/epsg3857.js","webpack:///./node_modules/ol/proj/epsg4326.js","webpack:///./node_modules/ol/proj/projections.js","webpack:///./node_modules/ol/proj/transforms.js","webpack:///./node_modules/ol/proj.js","webpack:///./node_modules/ol/transform.js","webpack:///./node_modules/ol/geom/Geometry.js","webpack:///./node_modules/ol/geom/SimpleGeometry.js","webpack:///./node_modules/ol/geom/flat/area.js","webpack:///./node_modules/ol/geom/flat/closest.js","webpack:///./node_modules/ol/geom/flat/deflate.js","webpack:///./node_modules/ol/geom/flat/inflate.js","webpack:///./node_modules/ol/geom/flat/simplify.js","webpack:///./node_modules/ol/geom/LinearRing.js","webpack:///./node_modules/ol/geom/Point.js","webpack:///./node_modules/ol/geom/flat/contains.js","webpack:///./node_modules/ol/geom/flat/interiorpoint.js","webpack:///./node_modules/ol/geom/flat/intersectsextent.js","webpack:///./node_modules/ol/geom/flat/segments.js","webpack:///./node_modules/ol/geom/flat/reverse.js","webpack:///./node_modules/ol/geom/flat/orient.js","webpack:///./node_modules/ol/geom/Polygon.js","webpack:///./node_modules/ol/View.js","webpack:///./node_modules/ol/resolutionconstraint.js","webpack:///./node_modules/ol/dom.js","webpack:///./node_modules/ol/layer/Property.js","webpack:///./node_modules/ol/layer/Base.js","webpack:///./node_modules/ol/source/State.js","webpack:///./node_modules/ol/layer/Group.js","webpack:///./node_modules/ol/size.js","webpack:///./node_modules/ol/PluggableMap.js","webpack:///./node_modules/ol/control/Control.js","webpack:///./node_modules/ol/css.js","webpack:///./node_modules/ol/layer/Layer.js","webpack:///./node_modules/ol/control/Attribution.js","webpack:///./node_modules/ol/control/Rotate.js","webpack:///./node_modules/ol/control/Zoom.js","webpack:///./node_modules/ol/Kinetic.js","webpack:///./node_modules/ol/interaction/Property.js","webpack:///./node_modules/ol/interaction/Interaction.js","webpack:///./node_modules/ol/interaction/DoubleClickZoom.js","webpack:///./node_modules/ol/events/condition.js","webpack:///./node_modules/ol/interaction/Pointer.js","webpack:///./node_modules/ol/interaction/DragPan.js","webpack:///./node_modules/ol/interaction/DragRotate.js","webpack:///./node_modules/ol/render/Box.js","webpack:///./node_modules/ol/interaction/DragBox.js","webpack:///./node_modules/ol/interaction/DragZoom.js","webpack:///./node_modules/ol/events/KeyCode.js","webpack:///./node_modules/ol/interaction/KeyboardPan.js","webpack:///./node_modules/ol/interaction/KeyboardZoom.js","webpack:///./node_modules/ol/interaction/MouseWheelZoom.js","webpack:///./node_modules/ol/interaction/PinchRotate.js","webpack:///./node_modules/ol/interaction/PinchZoom.js","webpack:///./node_modules/ol/reproj/common.js","webpack:///./node_modules/ol/ImageState.js","webpack:///./node_modules/ol/ImageCanvas.js","webpack:///./node_modules/ol/ImageBase.js","webpack:///./node_modules/ol/LayerType.js","webpack:///./node_modules/ol/layer/VectorRenderType.js","webpack:///./node_modules/ol/render/Event.js","webpack:///./node_modules/ol/structs/LRUCache.js","webpack:///./node_modules/ol/render/canvas.js","webpack:///./node_modules/ol/color.js","webpack:///./node_modules/ol/colorlike.js","webpack:///./node_modules/ol/render/VectorContext.js","webpack:///./node_modules/ol/render/canvas/Immediate.js","webpack:///./node_modules/ol/style/IconImageCache.js","webpack:///./node_modules/ol/renderer/Map.js","webpack:///./node_modules/ol/renderer/canvas/Map.js","webpack:///./node_modules/ol/renderer/canvas/Layer.js","webpack:///./node_modules/ol/renderer/Layer.js","webpack:///./node_modules/ol/renderer/canvas/IntermediateCanvas.js","webpack:///./node_modules/ol/renderer/canvas/ImageLayer.js","webpack:///./node_modules/ol/TileRange.js","webpack:///./node_modules/ol/renderer/canvas/TileLayer.js","webpack:///./node_modules/ol/render/ReplayGroup.js","webpack:///./node_modules/ol/render/ReplayType.js","webpack:///./node_modules/ol/geom/flat/length.js","webpack:///./node_modules/ol/geom/flat/textpath.js","webpack:///./node_modules/ol/render/canvas/Instruction.js","webpack:///./node_modules/ol/render/replay.js","webpack:///./node_modules/ol/render/canvas/Replay.js","webpack:///./node_modules/ol/render/canvas/ImageReplay.js","webpack:///./node_modules/ol/render/canvas/LineStringReplay.js","webpack:///./node_modules/ol/render/canvas/PolygonReplay.js","webpack:///./node_modules/ol/geom/flat/straightchunk.js","webpack:///./node_modules/ol/style/TextPlacement.js","webpack:///./node_modules/ol/render/canvas/TextReplay.js","webpack:///./node_modules/ol/render/canvas/ReplayGroup.js","webpack:///./node_modules/ol/renderer/vector.js","webpack:///./node_modules/ol/renderer/canvas/VectorLayer.js","webpack:///./node_modules/ol/layer/VectorTileRenderType.js","webpack:///./node_modules/ol/renderer/canvas/VectorTileLayer.js","webpack:///./node_modules/ol/Map.js","webpack:///./node_modules/ol/control/util.js","webpack:///./node_modules/ol/interaction.js","webpack:///./node_modules/ol/layer/TileProperty.js","webpack:///./node_modules/ol/layer/Tile.js","webpack:///./node_modules/ol/Tile.js","webpack:///./node_modules/ol/ImageTile.js","webpack:///./node_modules/ol/tilecoord.js","webpack:///./node_modules/ol/TileCache.js","webpack:///./node_modules/ol/reproj.js","webpack:///./node_modules/ol/reproj/Triangulation.js","webpack:///./node_modules/ol/reproj/Tile.js","webpack:///./node_modules/ol/tileurlfunction.js","webpack:///./node_modules/ol/source/Source.js","webpack:///./node_modules/ol/tilegrid/TileGrid.js","webpack:///./node_modules/ol/tilegrid.js","webpack:///./node_modules/ol/source/Tile.js","webpack:///./node_modules/ol/source/TileEventType.js","webpack:///./node_modules/ol/source/TileImage.js","webpack:///./node_modules/ol/source/XYZ.js","webpack:///./node_modules/ol/source/UrlTile.js","webpack:///./node_modules/ol/source/OSM.js","webpack:///./node_modules/ol/source/Stamen.js","webpack:///./main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","rbush","default","quickselect","maxEntries","format","this","_maxEntries","Math","max","_minEntries","ceil","_initFormat","clear","findItem","item","items","equalsFn","indexOf","length","calcBBox","node","toBBox","distBBox","children","k","destNode","createNode","minX","Infinity","minY","maxX","maxY","child","extend","leaf","a","b","min","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","contains","intersects","height","multiSelect","arr","left","right","compare","mid","stack","pop","push","all","_all","data","search","bbox","result","len","childBBox","nodesToSearch","collides","load","insert","_build","slice","_splitRoot","tmpNode","_insert","remove","parent","index","goingUp","path","indexes","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","N","M","log","pow","j","right2","right3","N2","N1","sqrt","_chooseSubtree","level","targetNode","area","enlargement","minArea","minEnlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","bbox1","bbox2","overlap","minOverlap","_allDistMargin","sort","leftBBox","rightBBox","margin","siblings","compareArr","Function","join","swap","tmp","defaultCompare","quickselectStep","z","exp","sd","newLeft","floor","newRight","factory","util_abstract","Error","uidCounter_","getUid","obj","ol_uid","String","VERSION","ol_AssertionError","AssertionError","code","message","split","__proto__","constructor","CollectionEventType","ADD","REMOVE","ObjectEventType","obj_assign","assign","target","var_sources","arguments$1","arguments","TypeError","output","ii","source","obj_clear","obj_isEmpty","findListener","listeners","listener","opt_this","opt_setDeleteIndex","listenerObj","bindTo","deleteIndex","getListeners","type","listenerMap","getListenerMap","undefined","opt_create","ol_lm","removeListeners","removeEventListener","boundListener","keys","removeListenerMap","listen","opt_once","callOnce","addEventListener","evt","unlistenByKey","bindListener","listenOnce","unlisten","Disposable_Disposable","disposed_","dispose","disposeInternal","ol_Disposable","TRUE","FALSE","VOID","Event","propagationStopped","stopPropagation","preventDefault","events_Event","events_Target","Disposable","Target","pendingRemovals_","dispatching_","listeners_","dispatchEvent","event","propagate","pendingRemovals","unlistenAll","hasListener","opt_type","EventType","CHANGE","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","ERROR","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","ol_Observable","EventTarget","Observable","revision_","changed","getRevision","on","Array","isArray","once","un","ObjectEvent","oldValue","changeEventTypeCache","getChangeEventType","ol_Object","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","notify","eventType","set","opt_silent","values","unset","Property","CollectionEvent","opt_element","element","ol_Collection","Collection","opt_array","opt_options","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","forEach","f","array","getArray","insertAt","elem","removeAt","prev","setAt","opt_except","ol_MapEvent","MapEvent","map","opt_frameState","frameState","ol_MapBrowserEvent","MapBrowserEvent","browserEvent","opt_dragging","originalEvent","pixel","getEventPixel","coordinate","getCoordinateFromPixel","dragging","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","window","devicePixelRatio","CANVAS_LINE_DASH","has","document","createElement","getContext","setLineDash","e","TOUCH","POINTER","MSPOINTER","MapBrowserEventType","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","ol_MapBrowserPointerEvent","MapBrowserPointerEvent","pointerEvent","pointer_EventType","EventSource_EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","pointer_EventSource","POINTER_ID","POINTER_TYPE","mousedown","inEvent","isEventSimulatedFromTouch_","toString","pointerMap","cancel","prepareEvent","down","mousemove","move","mouseup","button","up","cleanupMouse","mouseover","enterOver","mouseout","leaveOut","cloneEvent","pd","pointerId","isPrimary","pointerType","pointer_MouseSource","EventSource","MouseSource","lastTouches","lts","x","clientX","y","clientY","dx","abs","dy","POINTER_TYPES","msPointerDown","prepareEvent_","msPointerMove","msPointerUp","cleanup","msPointerOut","msPointerOver","msPointerCancel","msLostPointerCapture","makeEvent","msGotPointerCapture","pointer_MsSource","MsSource","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSGotPointerCapture","MSLostPointerCapture","pointerDown","fireNativeEvent","pointerMove","pointerUp","pointerOut","pointerOver","pointerCancel","lostPointerCapture","gotPointerCapture","pointer_NativeSource","NativeSource","pointerdown","pointermove","pointerup","pointerout","pointerover","pointercancel","gotpointercapture","lostpointercapture","HAS_BUTTONS","PointerEvent","_Event","opt_eventDict","eventDict","buttons","which","getButtons","pressure","getPressure","bubbles","cancelable","view","detail","screenX","screenY","ctrlKey","altKey","shiftKey","metaKey","relatedTarget","width","tiltX","tiltY","hwTimestamp","ev","MouseEvent","pointer_PointerEvent","numberSafeCompareFunction","linearFindNearest","direction","reverseSubArray","begin","end","extension","equals","arr1","arr2","len1","touchstart","vacuumTouches_","setPrimaryTouch_","changedTouches","dedupSynthMouse_","clickCount_","processTouches_","overDown_","touchmove","moveOverOut_","touchend","upOut_","touchcancel","cancelOut_","pointer_TouchSource","TouchSource","mouseSource","firstTouchId_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","count","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","setTimeout","resetClickCountHandler_","clearTimeout","touchToPointer_","radiusX","radiusY","force","inFunction","touches","pointer","findTouch_","touchList","searchId","Number","out","i$1","outTarget","over","enter","outEvent","leave","cleanUpPointer_","lt","CLONE_PROPS","pointer_PointerEventHandler","PointerEventHandler","element_","eventMap_","eventSourceList_","registerSources","registerSource","register_","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","events","eventName","eventCopy","fireEvent","contains_","container","contained","inType","wrapMouseEvent","ol_MapBrowserEventHandler","MapBrowserEventHandler","moveTolerance","map_","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","updateActivePointers_","handlePointerUp_","isMouseActionButton_","handlePointerMove_","isMoving_","MapEventType","MapProperty","LAYERGROUP","SIZE","TARGET","VIEW","render_EventType","TileState","IDLE","LOADING","LOADED","EMPTY","ABORT","assert","assertion","errorCode","PriorityQueue_PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","ol_TileQueue","PriorityQueue","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","handleTileChange","getTilesLoading","tile","state","getState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","clamp","cosh","squaredSegmentDistance","x1","y1","x2","y2","math_squaredDistance","toRadians","angleInDegrees","PI","modulo","lerp","none","center","disable","rotation","delta","rotationconstraint_none","ViewHint","ViewProperty","add","coordinate_rotate","angle","cosAngle","cos","sinAngle","sin","coordinate_scale","scale","easeIn","easeOut","inAndOut","linear","Corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","Relationship","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","buffer","opt_extent","extent_clone","closestSquaredDistanceXY","containsCoordinate","extent_containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","createOrUpdate","createOrUpdateEmpty","extent_equals","extent_extend","extendCoordinates","extendFlatCoordinates","flatCoordinates","offset","stride","extendXY","extent_getArea","extent_isEmpty","getWidth","getHeight","getBottomLeft","getBottomRight","extent_getCenter","getCorner","corner","getTopLeft","getTopRight","getForViewAndSize","resolution","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x3","y0","y3","getIntersection","intersection","extent_intersects","GeometryType","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","GeometryLayout","XY","XYZ","XYM","XYZM","transform2D","transform","opt_dest","dest","DEFAULT_RADIUS","getDistance","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","METERS_PER_UNIT","proj_Units","Projection_Projection","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","proj_Projection","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","epsg3857_EPSG3857Projection","Projection","EPSG3857Projection","units","point","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","halfSize","tan","epsg3857_toEPSG4326","atan","epsg4326_EXTENT","epsg4326_METERS_PER_UNIT","epsg4326_EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","epsg4326_PROJECTIONS","projections_cache","projections2","forwardTransform","inverseTransform","transforms","transforms_add","destination","transformFn","sourceCode","destinationCode","cloneTransform","identityTransform","addProjection","projection","projections_add","proj_get","projectionLike","opt_units","pointResolution","toEPSG4326","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","transforms_get","proj_getTransform","proj_transform","tmp_","transform_reset","transform_set","multiply","transform1","transform2","a1","b1","d1","e1","f1","a2","b2","d2","e2","f2","setFromArray","ol_transform_scale","ol_transform_translate","transform_compose","dx1","dy1","sx","sy","dx2","dy2","tmpTransform","getStrideForLayout","layout","geom_SimpleGeometry","Geometry","SimpleGeometry","computeExtent","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","getSimplifiedGeometry","squaredTolerance","simplifiedGeometryRevision","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","applyTransform","rotate","anchor","anchorX","anchorY","deltaX","deltaY","transform_rotate","opt_sy","opt_anchor","transform_scale","translate","transform_translate","extentRevision_","clone","closestPointXY","closestPoint","minSquaredDistance","containsXY","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","returnOrUpdate","simplify","tolerance","getType","intersectsExtent","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","area_linearRing","twiceArea","area_linearRings","ends","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","assignClosestArrayPoint","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","jj","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","last","first","maxSquaredDistance","snap","round","quantize","quantizeArray","simplifiedEnds","geom_LinearRing","LinearRing","maxDelta_","maxDeltaRevision_","getArea","geom_Point","Point","deflateCoordinate","linearRingContainsExtent","callback","val","forEachCorner","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","isNaN","intersectsLineString","coordinatesExtent","ret","point1","point2","start","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRingArray","intersectsLinearRing","reverse_coordinates","linearRingIsClockwise","edge","linearRingIsOriented","opt_right","isClockwise","orientLinearRings","Polygon_Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","geom_Polygon","fromExtent","DEFAULT_MIN_ZOOM","animationCallback","returnValue","isNoopAnimation","animation","sourceCenter","targetCenter","coordinate1","coordinate2","coordinate_equals","sourceResolution","targetResolution","sourceRotation","targetRotation","ol_View","View","hints_","animations_","updateAnimationKey_","updateAnimations_","projection_","applyOptions_","properties","resolutionConstraintInfo","resolutionConstraint","maxResolution","minResolution","minZoom","maxZoom","zoomFactor","resolutions","power","createSnapToResolutions","defaultMaxResolution","defaultMinResolution","opt_maxLevel","oldLevel","newLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","opt_tolerance","theta","createRotationConstraint","constraints_","zoom","constrainResolution","getResolution","options_","getUpdatedOptions_","newOptions","getZoom","getCenter","getRotation","animate","var_args","animationCount","isDef","setCenter","setZoom","setRotation","Date","now","series","complete","duration","easing","setHint","getAnimating","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","calculateCenterZoom","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","getSizeFromViewport_","selector","querySelector","metrics","getComputedStyle","parseInt","constrainCenter","opt_delta","opt_direction","getConstraints","getHints","opt_hints","calculateExtent","opt_size","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","getProjection","getResolutions","getResolutionForExtent","xResolution","yResolution","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","pixelRatio","pixelResolution","nearest","getResolutionForZoom","fit","geometryOrExtent","geometry","padding","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","constrainedResolution","centerRotX","centerRotY","setResolution","centerOn","position","centerX","centerY","hint","createCanvasContext2D","opt_width","opt_height","canvas","replaceNode","oldNode","parentNode","replaceChild","removeNode","removeChild","layer_Property","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","SOURCE","Base","BaseLayer","opacity","visible","zIndex","state_","getLayerState","layer","managed","getOpacity","sourceState","getSourceState","getVisible","getZIndex","getLayersArray","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","State","UNDEFINED","READY","Group_Property","LAYERS","Group","LayerGroup","baseOptions","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","id","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","states","pos","ownLayerState","layerState","toSize","ol_PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","createOptionsInternal","maxTilesLoading_","maxTilesLoading","loadTilesWhileAnimating_","loadTilesWhileAnimating","loadTilesWhileInteracting_","loadTilesWhileInteracting","pixelRatio_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","className","style","overflow","msTouchAction","touchAction","overlayContainer_","appendChild","overlayContainerStopEvent_","overlayEvents","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyHandlerKeys_","handleBrowserEvent","overlays_","overlayIdIndex_","renderer_","createRenderer","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","setMap","interaction","addOverlayInternal_","getId","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","hitTolerance","layerFilter","forEachFeatureAtCoordinate","getFeaturesAtPixel","features","feature","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","viewportPosition","getBoundingClientRect","eventPosition","top","getTarget","getTargetElement","pixelToCoordinateTransform","getOverlayById","getPixelFromCoordinate","coordinateToPixelTransform","getRenderer","getSize","getView","getOverlayContainer","getOverlayContainerStopEvent","tileSourceKey","tileCenter","tileResolution","wantedTiles","focus","mapBrowserEvent","interactionsArray","getActive","handleEvent","handlePostRender","tileQueue","hints","viewHints","getLoading","getSource","loading","dispatchRenderEvent","postRenderFunctions","render","targetElement","updateSize","removeLayerRenderers","handleViewPropertyChanged_","setAttribute","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","time","viewState","previousFrameState","hasArea","layerStatesArray","layerStates","skippedFeatureUids","usedTiles","renderFrame","setLayerGroup","setSize","setView","skipFeature","computedStyle","offsetWidth","parseFloat","offsetHeight","unskipFeature","cache","control_Control","Control","target_","listenerKeys","getMap","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","getFontFamilies","font","family","fontFamily","visibleAtResolution","layer_Layer","Layer","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","handleSourcePropertyChange_","setSource","handleSourceChange_","renderEvent","Attribution_render","mapEvent","updateElement_","control_Attribution","Attribution","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","tipLabel","collapseLabel","collapseLabel_","textContent","label","label_","activeLabel","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","display","lastChild","removeChildren","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate_render","rotation_","autoHide_","msTransform","webkitTransform","control_Rotate","Rotate","callResetNorth_","resetNorth","duration_","autoHide","resetNorth_","control_Zoom","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","newResolution","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","update","lastIndex","firstIndex","getAngle","ol_Kinetic","interaction_Property","Interaction_rotate","opt_duration","rotateWithoutConstraints","currentRotation","zoomByDelta","zoomWithoutConstraints","interaction_Interaction","Interaction","setActive","active","DoubleClickZoom_handleEvent","stopEvent","delta_","interaction_DoubleClickZoom","DoubleClickZoom","altShiftKeysOnly","condition_focus","activeElement","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","Pointer_centroid","pointerEvents","Pointer","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","getValues","interaction_DragPan","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","condition","noKinetic_","centroid","distance","centerpx","interaction_DragRotate","DragRotate","lastAngle_","Box","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","setPixels","createOrUpdateGeometry","getGeometry","DragBoxEventType","DragBoxEvent","onBoxEnd","out_","mapExtent","boxPixelExtent","scaleFromCenter","interaction_DragZoom","DragBox","DragZoom","box_","minArea_","onBoxEnd_","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","KeyCode","UP","DOWN","KeyboardPan_handleEvent","keyCode","mapUnitsDelta","pixelDelta_","pan","interaction_KeyboardPan","KeyboardPan","defaultCondition_","pixelDelta","KeyboardZoom_handleEvent","charCode","charCodeAt","interaction_KeyboardZoom","KeyboardZoom","Mode","interaction_MouseWheelZoom","MouseWheelZoom","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","trackpadZoomBuffer_","decrementInteractingHint_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","rebound","timeLeft","handleWheelZoom_","setMouseAnchor","interaction_PinchRotate","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","interaction_PinchZoom","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","ERROR_THRESHOLD","ImageState","ol_ImageCanvas","ImageBase","ImageCanvas","opt_loader","loader_","canvas_","error_","getError","handleLoad_","err","getImage","getPixelRatio","LayerType","IMAGE","TILE","VECTOR_TILE","VECTOR","VectorRenderType","render_Event","RenderEvent","opt_vectorContext","opt_context","opt_glContext","vectorContext","context","glContext","structs_LRUCache","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","replace","prune","defaultFillStyle","defaultLineDash","defaultStrokeStyle","defaultPadding","labelCache","checkedFonts","measureContext","textHeights","checkFont","interval","referenceWidth","retries","checked","referenceFonts","text","isAvailable","getMeasureContext","weight","fontWeight","available","referenceFont","measureText","check","done","clearInterval","fontSpec","fontFamilies","setInterval","span","heights","measureTextHeight","body","measureTextWidth","rotateAtOffset","offsetX","offsetY","resetTransform","drawImage","image","originX","originY","w","h","alpha","globalAlpha","setTransform","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","color_toString","cacheSize","normalize","g","asColorLike","VectorContext_VectorContext","drawCustom","renderer","drawGeometry","setStyle","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","fillStyle","strokeStyle","setImageStyle","imageStyle","opt_declutterGroup","setTextStyle","textStyle","render_VectorContext","Immediate","VectorContext","CanvasImmediateRenderer","viewRotation","context_","transform_","viewRotation_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","image_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","lineTo","closePath","drawRings_","simpleGeometry","transformGeom2D","beginPath","arc","fill","stroke","getFill","getStroke","getText","getGeometryFunction","geometries","getGeometriesArray","flatMidpoint","getFlatMidpoint","geometryExtent","flatMidpoints","getFlatMidpoints","flatInteriorPoint","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","lineCap","lineDash","lineDashOffset","lineJoin","lineWidth","miterLimit","textState","contextTextState","textAlign","textBaseline","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","imageAnchor","getAnchor","imageImage","imageOrigin","getOrigin","imageSize","getRotateWithView","getScale","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","IconImageCache","cache_","cacheSize_","maxCacheSize_","src","crossOrigin","expire","iconImage","maxCacheSize","shared","expireIconCache","sortByZIndex","state1","state2","layerRendererConstructors","canvas_Map","MapRenderer","CanvasMapRenderer","insertBefore","childNodes","getTransform","composeEvent","clearRect","calculateMatrices2D","compareFnc","stableSort","save","viewResolution","layerRenderer","getLayerRenderer","prepareFrame","composeFrame","restore","scheduleRemoveUnusedLayerRenderers","scheduleExpireIconCache","thisArg","thisArg2","numLayers","forEachLayerAtCoordinate","registerLayerRenderers","constructors","ctor","layerRenderers_","layerRendererListeners_","layerRendererConstructors_","mat","det","invert","removeLayerRendererByKey_","translatedCoordinate","projectionExtent","worldWidth","getWrapX","layerKey","candidate","handleLayerRendererChange_","getLayerRendererByKey","getLayerRenderers","removeUnusedLayerRenderers_","canvas_Layer","LayerRenderer","CanvasLayerRenderer","renderedResolution","clip","topLeft","topRight","bottomRight","bottomLeft","dispatchComposeEvent_","opt_transform","getLayer","postCompose","preCompose","layer_","createLoadedTileFinder","tiles","tileRange","forEachLoadedTile","tileCoord","handleImageChange_","renderIfReadyAndVisible","loadImage","imageState","scheduleExpireCache","tileSource","postRenderFunction","expireCache","updateUsedTiles","zKey","manageTilePyramid","currentZ","preload","opt_tileCallback","getTileRangeForExtentAndZ","getTile","getTileCoordCenter","useTile","IntermediateCanvas","IntermediateCanvasRenderer","coordinateToCanvasPixelTransform","hitCanvasContext_","clipped","imageTransform","getImageTransform","dw","dh","imageData","getImageData","ImageLayer_CanvasImageLayerRenderer","CanvasImageLayerRenderer","imageLayer","imageTransform_","skippedFeatures_","vectorRenderer_","viewCenter","imageSource","vectorRenderer","renderedExtent","skippedFeatures","imageFrameState","newSkippedFeatures","replayGroupChanged","compose","imageExtent","imageResolution","imagePixelRatio","getRenderMode","mapRenderer","ImageLayer","TileRange","TileRange_createOrUpdate","containsTileRange","ol_TileRange","TileLayer_CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","opt_noContext","oversampling_","renderedExtent_","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","zDirection","isDrawableTile_","tileState","useInterimTilesOnError","getUseInterimTilesOnError","getPreload","setState","getInterimTile","sourceRevision","getTileGridForProjection","getZForResolution","oversampling","getTileRangeExtent","tilePixelRatio","getTilePixelRatio","tilesToDrawByZ","findLoadedTiles","animatingOrInteracting","tmpTileRange","uid","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","tilePixelSize","getTilePixelSize","currentScale","currentTilePixelSize","tileExtent","tileGutter","tilesToDraw","zs","tileCoordKey","getGutterForProjection","getTileCoordExtent","getTileCoord","drawTileImage","gutter","transition","getTileImage","getOpaque","alphaChanged","endTransition","canvas_TileLayer","ReplayGroup_ReplayGroup","getReplay","replayType","addDeclutter","group","render_ReplayGroup","ReplayType","DEFAULT","TEXT","lineStringLength","drawTextOnPath","measure","startM","maxAngle","previousAngle","reverse","numChars","segmentM","chunk","chunkLength","char","charAt","charLength","charM","segmentPos","interpolate","unshift","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","Instruction_fillInstruction","Instruction_strokeInstruction","beginPathInstruction","closePathInstruction","canvas_Instruction","ORDER","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","bottom","Replay_tmpExtent","Replay_tmpTransform","Replay","CanvasReplay","maxExtent","overlaps","declutterTree","maxLineWidth","alignFill_","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","coordinateCache_","renderedTransform_","hitDetectionInstructions","replayTextBackground_","p1","p2","p3","p4","fillInstruction","strokeInstruction","fill_","setStrokeStyle_","replayImage_","declutterGroup","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastCoord","nextCoord","skipped","drawCustomCoordinates_","replayEnds","replayEnd","beginGeometry","replayEndss","replayBegin","myEnds","endGeometry","finish","origin","repeatSize","instruction","renderDeclutter_","groupCount","box","declutterData","replay_","skippedFeaturesHash","featureCallback","opt_hitExtent","dd","prevX","prevY","roundX","roundY","skipFeatures","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","batchSize","fn","rotateWithView","backgroundFill","backgroundStroke","baseline","fillKey","strokeKey","strokeWidth","textKey","pathLength","textLength","textStates","parts","cc","chars","part","replay","replayHitDetection","opt_featureCallback","reverseHitDetectionInstructions","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","ImageReplay","CanvasImageReplay","declutterGroup_","hitDetectionImage_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","rotateWithView_","scale_","width_","drawCoordinates_","myBegin","hitDetectionImage","getHitDetectionImage","LineStringReplay","CanvasLineStringReplay","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","PolygonReplay_CanvasPolygonReplay","CanvasPolygonReplay","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","matchingChunk","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","TextPlacement","BATCH_CONSTRUCTORS","Circle","Default","Image","LineString","Text","CanvasTextReplay","labels_","fillStates","strokeStates","textKey_","fillKey_","strokeKey_","widths_","geometryType","placement","flatEnd","flatOffset","oo","range","drawChars_","interiorPoints","drawTextImage_","align","lines","numLines","widths","currentWidth","measureTextWidths","lineHeight","renderWidth","leftRight","getOverflow","getMaxAngle","getPlacement","getBackgroundFill","getBackgroundStroke","getPadding","ReplayGroup_CanvasReplayGroup","ReplayGroup","CanvasReplayGroup","opt_renderBuffer","declutterTree_","tolerance_","maxExtent_","overlaps_","resolution_","renderBuffer_","replaysByZIndex_","hitDetectionContext_","hitDetectionTransform_","declutter","flatClipCoords","getClipCoords","hasReplays","replays","candidates","replayKey","declutterReplays","hitExtent","contextSize","declutteredFeatures","mask","circleArrayCache","arraySize","error","fillCircleArrayRowToMiddle","getCircleArray","zIndexKey","Constructor","getReplays","opt_replayTypes","opt_declutterReplays","replayTypes","0","canvas_ReplayGroup","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","replayGroup","getImageState","imageReplay","textReplay","lineStringReplay","polygonReplay","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","unlistenImageChange","listenImageChange","renderGeometry","getGeometries","renderFeatureInternal","VectorLayer_CanvasVectorLayerRenderer","CanvasVectorLayerRenderer","vectorLayer","getDeclutter","rbush_default","dirty_","renderedRevision_","renderedResolution_","renderedRenderOrder_","replayGroup_","handleFontsChanged_","vectorSource","clipExtent","replayContext","drawOffsetX","drawOffsetY","transparentLayer","hasRenderListeners","drawWidth","drawHeight","drawSize","world","mainContextAlpha","handleStyleImageChange_","animating","interacting","updateWhileAnimating","getUpdateWhileAnimating","updateWhileInteracting","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","getRenderBuffer","vectorLayerRenderOrder","getRenderOrder","getOverlaps","loadFeatures","styles","styleFunction","getStyleFunction","dirty","forEachFeatureInExtent","VectorLayer","VectorTileRenderType","HYBRID","IMAGE_REPLAYS","hybrid","VECTOR_REPLAYS","vector","VectorTileLayer_CanvasVectorTileLayerRenderer","CanvasVectorTileLayerRenderer","renderedLayerRevision_","tmpTransform_","renderMode","createReplayGroup_","renderTileImage_","layerRevision","this$1","revision","renderOrder","replayState","getReplayState","renderedRenderOrder","sourceTileGrid","getTileGrid","loop","tt","sourceTile","tileKeys","sourceTileCoord","sourceTileExtent","sharedExtent","bufferedExtent","tileProjection","reproject","setProjection","getFeatures","setReplayGroup","found","getReplayGroup","getReplayTransform_","renderResolution","clips","worldOffset","currentClip","zz","replayData","replayDeclutter","renderedTileRevision","wrappedTileCoord","pixelScale","VectorTileLayer","ol_Map","Map","zoomOptions","rotateOptions","attribution","attributionOptions","defaults","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","interaction_defaults","TileProperty","Tile_TileLayer","TileLayer","setPreload","setUseInterimTilesOnError","layer_Tile","ol_Tile","Tile","interimTile","transition_","transitionStarts_","refreshInterimChain","getBlankImage","ctx","fillRect","ol_ImageTile","ImageTile","tileLoadFunction","crossOrigin_","src_","imageListenerKeys_","tileLoadFunction_","unlistenImage_","handleImageError_","handleImageLoad_","naturalWidth","naturalHeight","tilecoord_createOrUpdate","opt_tileCoord","getKeyZXY","tilecoord_getKey","ol_TileCache","TileCache","pruneExceptNewestZ","fromKey","enlargeClipPoint","centroidX","centroidY","dX","dY","reproj_render","sourceExtent","targetExtent","triangulation","sources","opt_renderEdges","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","u1","v1","u2","v2","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","p0","Triangulation_Triangulation","targetProj","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","reproj_Triangulation","reproj_Tile","ReprojTile","targetTileGrid","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","targetMetersPerUnit","sourceMetersPerUnit","compensationFactor","calculateSourceResolution","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","unlistenSources_","reproject_","getTileSize","leftToLoad","sourceListenKey","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","getFullTileRange","createFromTemplates","templates","tileUrlFunctions","hash","createFromTileUrlFunctions","nullTileUrlFunction","adaptAttributions","attributionLike","source_Source","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","refresh","setAttributions","tmpTileCoord","TileGrid_TileGrid","opt_strict","every","currentVal","res","origins","origin_","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordForCoordAndZ","getTileCoordResolution","fullTileRanges","tilegrid_TileGrid","getForProjection","opt_maxZoom","opt_tileSize","opt_corner","resolutionsFromExtent","createForExtent","extentFromProjection","createForProjection","half","Tile_TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","loaded","setKey","thisProj","ratio","getTileCoordForTileUrlFunction","opt_projection","worldsAway","withinExtentAndZ","TileSourceEvent","TileEventType","defaultTileLoadFunction","imageTile","source_XYZ","TileImage","xyzOptions","gridOptions","createXYZ","reprojectionErrorThreshold","tileUrlFunction","url","urls","UrlTile","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","renderReprojectionEdges_","usedTileCache","getGutter","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","generateTileUrlFunction_","setUrls","setUrl","setTileUrlFunction","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","setTileLoadFunction","match","exec","startCharCode","stopCharCode","fromCharCode","stop","expandUrl","ATTRIBUTION","ATTRIBUTIONS","LayerConfig","terrain","terrain-background","terrain-labels","terrain-lines","toner-background","toner","toner-hybrid","toner-labels","toner-lines","toner-lite","watercolor","ProviderConfig","source_Stamen","Stamen","provider","providerConfig","layerConfig"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ ((function() {\n    throw new Error('Unimplemented abstract method.');\n  })());\n}\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n *\n *     function ParentClass(a, b) { }\n *     ParentClass.prototype.foo = function(a) { }\n *\n *     function ChildClass(a, b, c) {\n *       // Call parent constructor\n *       ParentClass.call(this, a, b);\n *     }\n *     inherits(ChildClass, ParentClass);\n *\n *     var child = new ChildClass('a', 'b', 'see');\n *     child.foo(); // This works.\n *\n * @param {!Function} childCtor Child constructor.\n * @param {!Function} parentCtor Parent constructor.\n * @function module:ol.inherits\n * @deprecated\n * @api\n */\nexport function inherits(childCtor, parentCtor) {\n  childCtor.prototype = Object.create(parentCtor.prototype);\n  childCtor.prototype.constructor = childCtor;\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @function module:ol.getUid\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '5.3.2';\n\n//# sourceMappingURL=util.js.map","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /*@__PURE__*/(function (Error) {\n  function AssertionError(code) {\n    var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    var message = 'Assertion failed. See https://openlayers.org/en/' + path +\n    '/doc/errors/#' + code + ' for details.';\n\n    Error.call(this, message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n\n  if ( Error ) AssertionError.__proto__ = Error;\n  AssertionError.prototype = Object.create( Error && Error.prototype );\n  AssertionError.prototype.constructor = AssertionError;\n\n  return AssertionError;\n}(Error));\n\nexport default AssertionError;\n\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove'\n};\n\n//# sourceMappingURL=CollectionEventType.js.map","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange'\n};\n\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/obj\n */\n\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\n  var arguments$1 = arguments;\n\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  for (var i = 1, ii = arguments.length; i < ii; ++i) {\n    var source = arguments$1[i];\n    if (source !== undefined && source !== null) {\n      for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n};\n\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (var property in object) {\n    delete object[property];\n  }\n}\n\n\n/**\n * Get an array of property values from an object.\n * @param {Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport function getValues(object) {\n  var values = [];\n  for (var property in object) {\n    values.push(object[property]);\n  }\n  return values;\n}\n\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  var property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n\n//# sourceMappingURL=obj.js.map","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n\n/**\n * @param {EventsKey} listenerObj Listener object.\n * @return {ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n  var boundListener = function(evt) {\n    var listener = listenerObj.listener;\n    var bindTo = listenerObj.bindTo || listenerObj.target;\n    if (listenerObj.callOnce) {\n      unlistenByKey(listenerObj);\n    }\n    return listener.call(bindTo, evt);\n  };\n  listenerObj.boundListener = boundListener;\n  return boundListener;\n}\n\n\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n  var listenerObj;\n  for (var i = 0, ii = listeners.length; i < ii; ++i) {\n    listenerObj = listeners[i];\n    if (listenerObj.listener === listener &&\n        listenerObj.bindTo === opt_this) {\n      if (opt_setDeleteIndex) {\n        listenerObj.deleteIndex = i;\n      }\n      return listenerObj;\n    }\n  }\n  return undefined;\n}\n\n\n/**\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array<EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n  var listenerMap = getListenerMap(target);\n  return listenerMap ? listenerMap[type] : undefined;\n}\n\n\n/**\n * Get the lookup of listeners.\n * @param {Object} target Target.\n * @param {boolean=} opt_create If a map should be created if it doesn't exist.\n * @return {!Object<string, Array<EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target, opt_create) {\n  var listenerMap = target.ol_lm;\n  if (!listenerMap && opt_create) {\n    listenerMap = target.ol_lm = {};\n  }\n  return listenerMap;\n}\n\n\n/**\n * Remove the listener map from a target.\n * @param {Object} target Target.\n */\nfunction removeListenerMap(target) {\n  delete target.ol_lm;\n}\n\n\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n      /** @type {import(\"./events/Target.js\").default} */ (target).\n        removeEventListener(type, listeners[i].boundListener);\n      clear(listeners[i]);\n    }\n    listeners.length = 0;\n    var listenerMap = getListenerMap(target);\n    if (listenerMap) {\n      delete listenerMap[type];\n      if (Object.keys(listenerMap).length === 0) {\n        removeListenerMap(target);\n      }\n    }\n  }\n}\n\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  var listenerMap = getListenerMap(target, true);\n  var listeners = listenerMap[type];\n  if (!listeners) {\n    listeners = listenerMap[type] = [];\n  }\n  var listenerObj = findListener(listeners, listener, opt_this, false);\n  if (listenerObj) {\n    if (!opt_once) {\n      // Turn one-off listener into a permanent one.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = /** @type {EventsKey} */ ({\n      bindTo: opt_this,\n      callOnce: !!opt_once,\n      listener: listener,\n      target: target,\n      type: type\n    });\n    /** @type {import(\"./events/Target.js\").default} */ (target).\n      addEventListener(type, bindListener(listenerObj));\n    listeners.push(listenerObj);\n  }\n\n  return listenerObj;\n}\n\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n\n/**\n * Unregisters an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    var listenerObj = findListener(listeners, listener, opt_this, true);\n    if (listenerObj) {\n      unlistenByKey(listenerObj);\n    }\n  }\n}\n\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    /** @type {import(\"./events/Target.js\").default} */ (key.target).\n      removeEventListener(key.type, key.boundListener);\n    var listeners = getListeners(key.target, key.type);\n    if (listeners) {\n      var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n      if (i !== -1) {\n        listeners.splice(i, 1);\n      }\n      if (listeners.length === 0) {\n        removeListeners(key.target, key.type);\n      }\n    }\n    clear(key);\n  }\n}\n\n\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n  var listenerMap = getListenerMap(target);\n  if (listenerMap) {\n    for (var type in listenerMap) {\n      removeListeners(target, type);\n    }\n  }\n}\n\n//# sourceMappingURL=events.js.map","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = function Disposable() {\n  /**\n   * The object has already been disposed.\n   * @type {boolean}\n   * @private\n   */\n  this.disposed_ = false;\n};\n\n/**\n * Clean up.\n */\nDisposable.prototype.dispose = function dispose () {\n  if (!this.disposed_) {\n    this.disposed_ = true;\n    this.disposeInternal();\n  }\n};\n\n/**\n * Extension point for disposable objects.\n * @protected\n */\nDisposable.prototype.disposeInternal = function disposeInternal () {};\n\nexport default Disposable;\n\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/functions\n */\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar Event = function Event(type) {\n\n  /**\n   * @type {boolean}\n   */\n  this.propagationStopped;\n\n  /**\n   * The event type.\n   * @type {string}\n   * @api\n   */\n  this.type = type;\n\n  /**\n   * The event target.\n   * @type {Object}\n   * @api\n   */\n  this.target = null;\n};\n\n/**\n * Stop event propagation.\n * @api\n */\nEvent.prototype.preventDefault = function preventDefault () {\n  this.propagationStopped = true;\n};\n\n/**\n * Stop event propagation.\n * @api\n */\nEvent.prototype.stopPropagation = function stopPropagation () {\n  this.propagationStopped = true;\n};\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default Event;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {unlistenAll} from '../events.js';\nimport {VOID} from '../functions.js';\nimport Event from './Event.js';\n\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /*@__PURE__*/(function (Disposable) {\n  function Target() {\n\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.pendingRemovals_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.dispatching_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\n     */\n    this.listeners_ = {};\n\n  }\n\n  if ( Disposable ) Target.__proto__ = Disposable;\n  Target.prototype = Object.create( Disposable && Disposable.prototype );\n  Target.prototype.constructor = Target;\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  Target.prototype.addEventListener = function addEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (!listeners) {\n      listeners = this.listeners_[type] = [];\n    }\n    if (listeners.indexOf(listener) === -1) {\n      listeners.push(listener);\n    }\n  };\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {{type: string,\n   *     target: (EventTargetLike|undefined),\n   *     propagationStopped: (boolean|undefined)}|\n   *     import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  Target.prototype.dispatchEvent = function dispatchEvent (event) {\n    var evt = typeof event === 'string' ? new Event(event) : event;\n    var type = evt.type;\n    evt.target = this;\n    var listeners = this.listeners_[type];\n    var propagate;\n    if (listeners) {\n      if (!(type in this.dispatching_)) {\n        this.dispatching_[type] = 0;\n        this.pendingRemovals_[type] = 0;\n      }\n      ++this.dispatching_[type];\n      for (var i = 0, ii = listeners.length; i < ii; ++i) {\n        if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --this.dispatching_[type];\n      if (this.dispatching_[type] === 0) {\n        var pendingRemovals = this.pendingRemovals_[type];\n        delete this.pendingRemovals_[type];\n        while (pendingRemovals--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete this.dispatching_[type];\n      }\n      return propagate;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Target.prototype.disposeInternal = function disposeInternal () {\n    unlistenAll(this);\n  };\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\n   */\n  Target.prototype.getListeners = function getListeners (type) {\n    return this.listeners_[type];\n  };\n\n  /**\n   * @param {string=} opt_type Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  Target.prototype.hasListener = function hasListener (opt_type) {\n    return opt_type ?\n      opt_type in this.listeners_ :\n      Object.keys(this.listeners_).length > 0;\n  };\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  Target.prototype.removeEventListener = function removeEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (listeners) {\n      var index = listeners.indexOf(listener);\n      if (type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  };\n\n  return Target;\n}(Disposable));\n\n\nexport default Target;\n\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~Event#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  ERROR: 'error',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  MOUSEDOWN: 'mousedown',\n  MOUSEMOVE: 'mousemove',\n  MOUSEOUT: 'mouseout',\n  MOUSEUP: 'mouseup',\n  MOUSEWHEEL: 'mousewheel',\n  MSPOINTERDOWN: 'MSPointerDown',\n  RESIZE: 'resize',\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  WHEEL: 'wheel'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/Observable\n */\nimport {listen, unlistenByKey, unlisten, listenOnce} from './events.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").Event\n * @api\n */\nvar Observable = /*@__PURE__*/(function (EventTarget) {\n  function Observable() {\n\n    EventTarget.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n\n  }\n\n  if ( EventTarget ) Observable.__proto__ = EventTarget;\n  Observable.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Observable.prototype.constructor = Observable;\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  Observable.prototype.changed = function changed () {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  Observable.prototype.getRevision = function getRevision () {\n    return this.revision_;\n  };\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.on = function on (type, listener) {\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.once = function once (type, listener) {\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listenOnce(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listenOnce(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  Observable.prototype.un = function un (type, listener) {\n    if (Array.isArray(type)) {\n      for (var i = 0, ii = type.length; i < ii; ++i) {\n        unlisten(this, type[i], listener);\n      }\n      return;\n    } else {\n      unlisten(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  return Observable;\n}(EventTarget));\n\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (var i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\n\nexport default Observable;\n\n//# sourceMappingURL=Observable.js.map","/**\n * @module ol/Object\n */\nimport {getUid} from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {assign} from './obj.js';\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport var ObjectEvent = /*@__PURE__*/(function (Event) {\n  function ObjectEvent(type, key, oldValue) {\n    Event.call(this, type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n\n  }\n\n  if ( Event ) ObjectEvent.__proto__ = Event;\n  ObjectEvent.prototype = Object.create( Event && Event.prototype );\n  ObjectEvent.prototype.constructor = ObjectEvent;\n\n  return ObjectEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /*@__PURE__*/(function (Observable) {\n  function BaseObject(opt_values) {\n    Observable.call(this);\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {!Object<string, *>}\n     */\n    this.values_ = {};\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  if ( Observable ) BaseObject.__proto__ = Observable;\n  BaseObject.prototype = Object.create( Observable && Observable.prototype );\n  BaseObject.prototype.constructor = BaseObject;\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  BaseObject.prototype.get = function get (key) {\n    var value;\n    if (this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  };\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  BaseObject.prototype.getKeys = function getKeys () {\n    return Object.keys(this.values_);\n  };\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  BaseObject.prototype.getProperties = function getProperties () {\n    return assign({}, this.values_);\n  };\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  BaseObject.prototype.notify = function notify (key, oldValue) {\n    var eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  };\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.set = function set (key, value, opt_silent) {\n    if (opt_silent) {\n      this.values_[key] = value;\n    } else {\n      var oldValue = this.values_[key];\n      this.values_[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.setProperties = function setProperties (values, opt_silent) {\n    for (var key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  };\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean=} opt_silent Unset without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.unset = function unset (key, opt_silent) {\n    if (key in this.values_) {\n      var oldValue = this.values_[key];\n      delete this.values_[key];\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  return BaseObject;\n}(Observable));\n\n\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key) ?\n    changeEventTypeCache[key] :\n    (changeEventTypeCache[key] = 'change:' + key);\n}\n\n\nexport default BaseObject;\n\n//# sourceMappingURL=Object.js.map","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LENGTH: 'length'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport var CollectionEvent = /*@__PURE__*/(function (Event) {\n  function CollectionEvent(type, opt_element) {\n    Event.call(this, type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n  }\n\n  if ( Event ) CollectionEvent.__proto__ = Event;\n  CollectionEvent.prototype = Object.create( Event && Event.prototype );\n  CollectionEvent.prototype.constructor = CollectionEvent;\n\n  return CollectionEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /*@__PURE__*/(function (BaseObject) {\n  function Collection(opt_array, opt_options) {\n\n    BaseObject.call(this);\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n\n  }\n\n  if ( BaseObject ) Collection.__proto__ = BaseObject;\n  Collection.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Collection.prototype.constructor = Collection;\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  Collection.prototype.clear = function clear () {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  };\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  Collection.prototype.extend = function extend (arr) {\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  };\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  Collection.prototype.forEach = function forEach (f) {\n    var array = this.array_;\n    for (var i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  };\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  Collection.prototype.getArray = function getArray () {\n    return this.array_;\n  };\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  Collection.prototype.item = function item (index) {\n    return this.array_[index];\n  };\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  Collection.prototype.getLength = function getLength () {\n    return this.get(Property.LENGTH);\n  };\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.insertAt = function insertAt (index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem));\n  };\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  Collection.prototype.pop = function pop () {\n    return this.removeAt(this.getLength() - 1);\n  };\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  Collection.prototype.push = function push (elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    var n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  };\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  Collection.prototype.remove = function remove (elem) {\n    var arr = this.array_;\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  Collection.prototype.removeAt = function removeAt (index) {\n    var prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev));\n    return prev;\n  };\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.setAt = function setAt (index, elem) {\n    var n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      var prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev));\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem));\n    } else {\n      for (var j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  };\n\n  /**\n   * @private\n   */\n  Collection.prototype.updateLength_ = function updateLength_ () {\n    this.set(Property.LENGTH, this.array_.length);\n  };\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number=} opt_except Optional index to ignore.\n   */\n  Collection.prototype.assertUnique_ = function assertUnique_ (elem, opt_except) {\n    for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  };\n\n  return Collection;\n}(BaseObject));\n\n\nexport default Collection;\n\n//# sourceMappingURL=Collection.js.map","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /*@__PURE__*/(function (Event) {\n  function MapEvent(type, map, opt_frameState) {\n\n    Event.call(this, type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n\n  }\n\n  if ( Event ) MapEvent.__proto__ = Event;\n  MapEvent.prototype = Object.create( Event && Event.prototype );\n  MapEvent.prototype.constructor = MapEvent;\n\n  return MapEvent;\n}(Event));\n\nexport default MapEvent;\n\n//# sourceMappingURL=MapEvent.js.map","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n */\nvar MapBrowserEvent = /*@__PURE__*/(function (MapEvent) {\n  function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\n\n    MapEvent.call(this, type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {Event}\n     * @api\n     */\n    this.originalEvent = browserEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {import(\"./pixel.js\").Pixel}\n     * @api\n     */\n    this.pixel = map.getEventPixel(browserEvent);\n\n    /**\n     * The coordinate in view projection corresponding to the original browser event.\n     * @type {import(\"./coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = map.getCoordinateFromPixel(this.pixel);\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n\n  }\n\n  if ( MapEvent ) MapBrowserEvent.__proto__ = MapEvent;\n  MapBrowserEvent.prototype = Object.create( MapEvent && MapEvent.prototype );\n  MapBrowserEvent.prototype.constructor = MapBrowserEvent;\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.preventDefault = function preventDefault () {\n    MapEvent.prototype.preventDefault.call(this);\n    this.originalEvent.preventDefault();\n  };\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.stopPropagation = function stopPropagation () {\n    MapEvent.prototype.stopPropagation.call(this);\n    this.originalEvent.stopPropagation();\n  };\n\n  return MapBrowserEvent;\n}(MapEvent));\n\n\nexport default MapBrowserEvent;\n\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/has\n */\n\nvar ua = typeof navigator !== 'undefined' ?\n  navigator.userAgent.toLowerCase() : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n\n\n/**\n * True if the browser's Canvas implementation implements {get,set}LineDash.\n * @type {boolean}\n */\nexport var CANVAS_LINE_DASH = function() {\n  var has = false;\n  try {\n    has = !!document.createElement('canvas').getContext('2d').setLineDash;\n  } catch (e) {\n    // pass\n  }\n  return has;\n}();\n\n\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport var GEOLOCATION = 'geolocation' in navigator;\n\n\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport var TOUCH = 'ontouchstart' in window;\n\n\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport var POINTER = 'PointerEvent' in window;\n\n\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport var MSPOINTER = !!(navigator.msPointerEnabled);\n\n\nexport {HAS as WEBGL} from './webgl.js';\n\n//# sourceMappingURL=has.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=MapBrowserEventType.js.map","/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\n\nvar MapBrowserPointerEvent = /*@__PURE__*/(function (MapBrowserEvent) {\n  function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\n\n    MapBrowserEvent.call(this, type, map, pointerEvent.originalEvent, opt_dragging, opt_frameState);\n\n    /**\n     * @const\n     * @type {import(\"./pointer/PointerEvent.js\").default}\n     */\n    this.pointerEvent = pointerEvent;\n\n  }\n\n  if ( MapBrowserEvent ) MapBrowserPointerEvent.__proto__ = MapBrowserEvent;\n  MapBrowserPointerEvent.prototype = Object.create( MapBrowserEvent && MapBrowserEvent.prototype );\n  MapBrowserPointerEvent.prototype.constructor = MapBrowserPointerEvent;\n\n  return MapBrowserPointerEvent;\n}(MapBrowserEvent));\n\nexport default MapBrowserPointerEvent;\n\n//# sourceMappingURL=MapBrowserPointerEvent.js.map","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/pointer/EventSource\n */\n\nvar EventSource = function EventSource(dispatcher, mapping) {\n\n  /**\n   * @type {import(\"./PointerEventHandler.js\").default}\n   */\n  this.dispatcher = dispatcher;\n\n  /**\n   * @private\n   * @const\n   * @type {!Object<string, function(Event)>}\n   */\n  this.mapping_ = mapping;\n};\n\n/**\n * List of events supported by this source.\n * @return {Array<string>} Event names\n */\nEventSource.prototype.getEvents = function getEvents () {\n  return Object.keys(this.mapping_);\n};\n\n/**\n * Returns the handler that should handle a given event type.\n * @param {string} eventType The event type.\n * @return {function(Event)} Handler\n */\nEventSource.prototype.getHandlerForEvent = function getHandlerForEvent (eventType) {\n  return this.mapping_[eventType];\n};\n\nexport default EventSource;\n\n//# sourceMappingURL=EventSource.js.map","/**\n * @module ol/pointer/MouseSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n\n/**\n * @type {number}\n */\nexport var POINTER_ID = 1;\n\n\n/**\n * @type {string}\n */\nexport var POINTER_TYPE = 'mouse';\n\n\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nvar DEDUP_DIST = 25;\n\n/**\n * Handler for `mousedown`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousedown(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    // TODO(dfreedman) workaround for some elements not sending mouseup\n    // http://crbug/149091\n    if (POINTER_ID.toString() in this.pointerMap) {\n      this.cancel(inEvent);\n    }\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.pointerMap[POINTER_ID.toString()] = inEvent;\n    this.dispatcher.down(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mousemove`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousemove(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.move(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseup`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseup(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var p = this.pointerMap[POINTER_ID.toString()];\n\n    if (p && p.button === inEvent.button) {\n      var e = prepareEvent(inEvent, this.dispatcher);\n      this.dispatcher.up(e, inEvent);\n      this.cleanupMouse();\n    }\n  }\n}\n\n/**\n * Handler for `mouseover`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseover(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.enterOver(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseout`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseout(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.leaveOut(e, inEvent);\n  }\n}\n\n\nvar MouseSource = /*@__PURE__*/(function (EventSource) {\n  function MouseSource(dispatcher) {\n    var mapping = {\n      'mousedown': mousedown,\n      'mousemove': mousemove,\n      'mouseup': mouseup,\n      'mouseover': mouseover,\n      'mouseout': mouseout\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {Array<import(\"../pixel.js\").Pixel>}\n     */\n    this.lastTouches = [];\n  }\n\n  if ( EventSource ) MouseSource.__proto__ = EventSource;\n  MouseSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MouseSource.prototype.constructor = MouseSource;\n\n  /**\n   * Detect if a mouse event was simulated from a touch by\n   * checking if previously there was a touch event at the\n   * same position.\n   *\n   * FIXME - Known problem with the native Android browser on\n   * Samsung GT-I9100 (Android 4.1.2):\n   * In case the page is scrolled, this function does not work\n   * correctly when a canvas is used (WebGL or canvas renderer).\n   * Mouse listeners on canvas elements (for this browser), create\n   * two mouse events: One 'good' and one 'bad' one (on other browsers or\n   * when a div is used, there is only one event). For the 'bad' one,\n   * clientX/clientY and also pageX/pageY are wrong when the page\n   * is scrolled. Because of that, this function can not detect if\n   * the events were simulated from a touch event. As result, a\n   * pointer event at a wrong position is dispatched, which confuses\n   * the map interactions.\n   * It is unclear, how one can get the correct position for the event\n   * or detect that the positions are invalid.\n   *\n   * @private\n   * @param {MouseEvent} inEvent The in event.\n   * @return {boolean} True, if the event was generated by a touch.\n   */\n  MouseSource.prototype.isEventSimulatedFromTouch_ = function isEventSimulatedFromTouch_ (inEvent) {\n    var lts = this.lastTouches;\n    var x = inEvent.clientX;\n    var y = inEvent.clientY;\n    for (var i = 0, l = lts.length, t = (void 0); i < l && (t = lts[i]); i++) {\n      // simulated mouse events will be swallowed near a primary touchend\n      var dx = Math.abs(x - t[0]);\n      var dy = Math.abs(y - t[1]);\n      if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Dispatches a `pointercancel` event.\n   *\n   * @param {Event} inEvent The in event.\n   */\n  MouseSource.prototype.cancel = function cancel (inEvent) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.cancel(e, inEvent);\n    this.cleanupMouse();\n  };\n\n  /**\n   * Remove the mouse from the list of active pointers.\n   */\n  MouseSource.prototype.cleanupMouse = function cleanupMouse () {\n    delete this.pointerMap[POINTER_ID.toString()];\n  };\n\n  return MouseSource;\n}(EventSource));\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nexport function prepareEvent(inEvent, dispatcher) {\n  var e = dispatcher.cloneEvent(inEvent, inEvent);\n\n  // forward mouse preventDefault\n  var pd = e.preventDefault;\n  e.preventDefault = function() {\n    inEvent.preventDefault();\n    pd();\n  };\n\n  e.pointerId = POINTER_ID;\n  e.isPrimary = true;\n  e.pointerType = POINTER_TYPE;\n\n  return e;\n}\n\n\nexport default MouseSource;\n\n//# sourceMappingURL=MouseSource.js.map","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar POINTER_TYPES = [\n  '',\n  'unavailable',\n  'touch',\n  'pen',\n  'mouse'\n];\n\n/**\n * Handler for `msPointerDown`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerDown(inEvent) {\n  this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.down(e, inEvent);\n}\n\n/**\n * Handler for `msPointerMove`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerMove(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.move(e, inEvent);\n}\n\n/**\n * Handler for `msPointerUp`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerUp(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.up(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msPointerOut`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOut(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.leaveOut(e, inEvent);\n}\n\n/**\n * Handler for `msPointerOver`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOver(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.enterOver(e, inEvent);\n}\n\n/**\n * Handler for `msPointerCancel`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerCancel(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msLostPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msGotPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\nvar MsSource = /*@__PURE__*/(function (EventSource) {\n  function MsSource(dispatcher) {\n    var mapping = {\n      'MSPointerDown': msPointerDown,\n      'MSPointerMove': msPointerMove,\n      'MSPointerUp': msPointerUp,\n      'MSPointerOut': msPointerOut,\n      'MSPointerOver': msPointerOver,\n      'MSPointerCancel': msPointerCancel,\n      'MSGotPointerCapture': msGotPointerCapture,\n      'MSLostPointerCapture': msLostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, MSPointerEvent|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n  }\n\n  if ( EventSource ) MsSource.__proto__ = EventSource;\n  MsSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MsSource.prototype.constructor = MsSource;\n\n  /**\n   * Creates a copy of the original event that will be used\n   * for the fake pointer event.\n   *\n   * @private\n   * @param {MSPointerEvent} inEvent The in event.\n   * @return {Object} The copied event.\n   */\n  MsSource.prototype.prepareEvent_ = function prepareEvent_ (inEvent) {\n    /** @type {MSPointerEvent|Object} */\n    var e = inEvent;\n    if (typeof inEvent.pointerType === 'number') {\n      e = this.dispatcher.cloneEvent(inEvent, inEvent);\n      e.pointerType = POINTER_TYPES[inEvent.pointerType];\n    }\n\n    return e;\n  };\n\n  /**\n   * Remove this pointer from the list of active pointers.\n   * @param {number} pointerId Pointer identifier.\n   */\n  MsSource.prototype.cleanup = function cleanup (pointerId) {\n    delete this.pointerMap[pointerId.toString()];\n  };\n\n  return MsSource;\n}(EventSource));\n\nexport default MsSource;\n\n//# sourceMappingURL=MsSource.js.map","/**\n * @module ol/pointer/NativeSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n/**\n * Handler for `pointerdown`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerDown(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointermove`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerMove(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerup`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerUp(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerout`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOut(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerover`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOver(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointercancel`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerCancel(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `lostpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction lostPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `gotpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction gotPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\nvar NativeSource = /*@__PURE__*/(function (EventSource) {\n  function NativeSource(dispatcher) {\n    var mapping = {\n      'pointerdown': pointerDown,\n      'pointermove': pointerMove,\n      'pointerup': pointerUp,\n      'pointerout': pointerOut,\n      'pointerover': pointerOver,\n      'pointercancel': pointerCancel,\n      'gotpointercapture': gotPointerCapture,\n      'lostpointercapture': lostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n  }\n\n  if ( EventSource ) NativeSource.__proto__ = EventSource;\n  NativeSource.prototype = Object.create( EventSource && EventSource.prototype );\n  NativeSource.prototype.constructor = NativeSource;\n\n  return NativeSource;\n}(EventSource));\n\nexport default NativeSource;\n\n//# sourceMappingURL=NativeSource.js.map","/**\n * @module ol/pointer/PointerEvent\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport _Event from '../events/Event.js';\n\n\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nvar HAS_BUTTONS = false;\n\n\nvar PointerEvent = /*@__PURE__*/(function (_Event) {\n  function PointerEvent(type, originalEvent, opt_eventDict) {\n    _Event.call(this, type);\n\n    /**\n     * @const\n     * @type {Event}\n     */\n    this.originalEvent = originalEvent;\n\n    var eventDict = opt_eventDict ? opt_eventDict : {};\n\n    /**\n     * @type {number}\n     */\n    this.buttons = getButtons(eventDict);\n\n    /**\n     * @type {number}\n     */\n    this.pressure = getPressure(eventDict, this.buttons);\n\n    // MouseEvent related properties\n\n    /**\n     * @type {boolean}\n     */\n    this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n\n    /**\n     * @type {Object}\n     */\n    this.view = 'view' in eventDict ? eventDict['view'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n\n    /**\n     * @type {number}\n     */\n    this.button = 'button' in eventDict ? eventDict['button'] : 0;\n\n    /**\n     * @type {Node}\n     */\n    this.relatedTarget = 'relatedTarget' in eventDict ?\n      eventDict['relatedTarget'] : null;\n\n    // PointerEvent related properties\n\n    /**\n     * @const\n     * @type {number}\n     */\n    this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.width = 'width' in eventDict ? eventDict['width'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.height = 'height' in eventDict ? eventDict['height'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n\n    /**\n     * @type {string}\n     */\n    this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n\n    /**\n     * @type {number}\n     */\n    this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n\n    // keep the semantics of preventDefault\n    if (originalEvent.preventDefault) {\n      this.preventDefault = function() {\n        originalEvent.preventDefault();\n      };\n    }\n  }\n\n  if ( _Event ) PointerEvent.__proto__ = _Event;\n  PointerEvent.prototype = Object.create( _Event && _Event.prototype );\n  PointerEvent.prototype.constructor = PointerEvent;\n\n  return PointerEvent;\n}(_Event));\n\n\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @return {number} Button indicator.\n */\nfunction getButtons(eventDict) {\n  // According to the w3c spec,\n  // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n  // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n  // left mouse button depressed.\n  //\n  // As of now, the only way to distinguish between the two states of\n  // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n  // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n  // no mouse button is held.\n  //\n  // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n  // but initMouseEvent does not expose an argument with which to set\n  // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n  // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n  // of app developers.\n  //\n  // The only way to propagate the correct state of MouseEvent.which and\n  // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n  // is to call initMouseEvent with a buttonArg value of -1.\n  //\n  // This is fixed with DOM Level 4's use of buttons\n  var buttons;\n  if (eventDict.buttons || HAS_BUTTONS) {\n    buttons = eventDict.buttons;\n  } else {\n    switch (eventDict.which) {\n      case 1: buttons = 1; break;\n      case 2: buttons = 4; break;\n      case 3: buttons = 2; break;\n      default: buttons = 0;\n    }\n  }\n  return buttons;\n}\n\n\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @param {number} buttons Button indicator.\n * @return {number} The pressure.\n */\nfunction getPressure(eventDict, buttons) {\n  // Spec requires that pointers without pressure specified use 0.5 for down\n  // state and 0 for up state.\n  var pressure = 0;\n  if (eventDict.pressure) {\n    pressure = eventDict.pressure;\n  } else {\n    pressure = buttons ? 0.5 : 0;\n  }\n  return pressure;\n}\n\n\n/**\n * Checks if the `buttons` property is supported.\n */\n(function() {\n  try {\n    var ev = new MouseEvent('click', {buttons: 1});\n    HAS_BUTTONS = ev.buttons === 1;\n  } catch (e) {\n    // pass\n  }\n})();\n\nexport default PointerEvent;\n\n//# sourceMappingURL=PointerEvent.js.map","/**\n * @module ol/array\n */\n\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  var mid, cmp;\n  var comparator = opt_comparator || numberSafeCompareFunction;\n  var low = 0;\n  var high = haystack.length;\n  var found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) { /* Too low. */\n      low = mid + 1;\n\n    } else { /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  var n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    var i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    var tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  var extension = Array.isArray(data) ? data : [data];\n  var length = extension.length;\n  for (var i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  var i = arr.indexOf(obj);\n  var found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  var length = arr.length >>> 0;\n  var value;\n\n  for (var i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  var len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (var i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  var length = arr.length;\n  var tmp = Array(arr.length);\n  var i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function(a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  var index;\n  var found = !arr.every(function(el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  var compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function(currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    var res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || opt_strict && res === 0);\n  });\n}\n\n//# sourceMappingURL=array.js.map","/**\n * @module ol/pointer/TouchSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {remove} from '../array.js';\nimport EventSource from './EventSource.js';\nimport {POINTER_ID} from './MouseSource.js';\n\n\n/**\n * @type {number}\n */\nvar CLICK_COUNT_TIMEOUT = 200;\n\n/**\n * @type {string}\n */\nvar POINTER_TYPE = 'touch';\n\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchstart(inEvent) {\n  this.vacuumTouches_(inEvent);\n  this.setPrimaryTouch_(inEvent.changedTouches[0]);\n  this.dedupSynthMouse_(inEvent);\n  this.clickCount_++;\n  this.processTouches_(inEvent, this.overDown_);\n}\n\n/**\n * Handler for `touchmove`.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchmove(inEvent) {\n  this.processTouches_(inEvent, this.moveOverOut_);\n}\n\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The event.\n */\nfunction touchend(inEvent) {\n  this.dedupSynthMouse_(inEvent);\n  this.processTouches_(inEvent, this.upOut_);\n}\n\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchcancel(inEvent) {\n  this.processTouches_(inEvent, this.cancelOut_);\n}\n\n\nvar TouchSource = /*@__PURE__*/(function (EventSource) {\n  function TouchSource(dispatcher, mouseSource) {\n    var mapping = {\n      'touchstart': touchstart,\n      'touchmove': touchmove,\n      'touchend': touchend,\n      'touchcancel': touchcancel\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {import(\"./MouseSource.js\").default}\n     */\n    this.mouseSource = mouseSource;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.firstTouchId_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.clickCount_ = 0;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.resetId_;\n\n    /**\n     * Mouse event timeout: This should be long enough to\n     * ignore compat mouse events made by touch.\n     * @private\n     * @type {number}\n     */\n    this.dedupTimeout_ = 2500;\n  }\n\n  if ( EventSource ) TouchSource.__proto__ = EventSource;\n  TouchSource.prototype = Object.create( EventSource && EventSource.prototype );\n  TouchSource.prototype.constructor = TouchSource;\n\n  /**\n   * @private\n   * @param {Touch} inTouch The in touch.\n   * @return {boolean} True, if this is the primary touch.\n   */\n  TouchSource.prototype.isPrimaryTouch_ = function isPrimaryTouch_ (inTouch) {\n    return this.firstTouchId_ === inTouch.identifier;\n  };\n\n  /**\n   * Set primary touch if there are no pointers, or the only pointer is the mouse.\n   * @param {Touch} inTouch The in touch.\n   * @private\n   */\n  TouchSource.prototype.setPrimaryTouch_ = function setPrimaryTouch_ (inTouch) {\n    var count = Object.keys(this.pointerMap).length;\n    if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n      this.firstTouchId_ = inTouch.identifier;\n      this.cancelResetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.removePrimaryPointer_ = function removePrimaryPointer_ (inPointer) {\n    if (inPointer.isPrimary) {\n      this.firstTouchId_ = undefined;\n      this.resetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCount_ = function resetClickCount_ () {\n    this.resetId_ = setTimeout(\n      this.resetClickCountHandler_.bind(this),\n      CLICK_COUNT_TIMEOUT);\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCountHandler_ = function resetClickCountHandler_ () {\n    this.clickCount_ = 0;\n    this.resetId_ = undefined;\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.cancelResetClickCount_ = function cancelResetClickCount_ () {\n    if (this.resetId_ !== undefined) {\n      clearTimeout(this.resetId_);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent Browser event\n   * @param {Touch} inTouch Touch event\n   * @return {PointerEvent} A pointer object.\n   */\n  TouchSource.prototype.touchToPointer_ = function touchToPointer_ (browserEvent, inTouch) {\n    var e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n    // Spec specifies that pointerId 1 is reserved for Mouse.\n    // Touch identifiers can start at 0.\n    // Add 2 to the touch identifier for compatibility.\n    e.pointerId = inTouch.identifier + 2;\n    // TODO: check if this is necessary?\n    //e.target = findTarget(e);\n    e.bubbles = true;\n    e.cancelable = true;\n    e.detail = this.clickCount_;\n    e.button = 0;\n    e.buttons = 1;\n    e.width = inTouch.radiusX || 0;\n    e.height = inTouch.radiusY || 0;\n    e.pressure = inTouch.force || 0.5;\n    e.isPrimary = this.isPrimaryTouch_(inTouch);\n    e.pointerType = POINTER_TYPE;\n\n    // make sure that the properties that are different for\n    // each `Touch` object are not copied from the BrowserEvent object\n    e.clientX = inTouch.clientX;\n    e.clientY = inTouch.clientY;\n    e.screenX = inTouch.screenX;\n    e.screenY = inTouch.screenY;\n\n    return e;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} inEvent Touch event\n   * @param {function(TouchEvent, PointerEvent)} inFunction In function.\n   */\n  TouchSource.prototype.processTouches_ = function processTouches_ (inEvent, inFunction) {\n    var touches = Array.prototype.slice.call(inEvent.changedTouches);\n    var count = touches.length;\n    function preventDefault() {\n      inEvent.preventDefault();\n    }\n    for (var i = 0; i < count; ++i) {\n      var pointer = this.touchToPointer_(inEvent, touches[i]);\n      // forward touch preventDefaults\n      pointer.preventDefault = preventDefault;\n      inFunction.call(this, inEvent, pointer);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchList} touchList The touch list.\n   * @param {number} searchId Search identifier.\n   * @return {boolean} True, if the `Touch` with the given id is in the list.\n   */\n  TouchSource.prototype.findTouch_ = function findTouch_ (touchList, searchId) {\n    var l = touchList.length;\n    for (var i = 0; i < l; i++) {\n      var touch = touchList[i];\n      if (touch.identifier === searchId) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * In some instances, a touchstart can happen without a touchend. This\n   * leaves the pointermap in a broken state.\n   * Therefore, on every touchstart, we remove the touches that did not fire a\n   * touchend event.\n   * To keep state globally consistent, we fire a pointercancel for\n   * this \"abandoned\" touch\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.vacuumTouches_ = function vacuumTouches_ (inEvent) {\n    var touchList = inEvent.touches;\n    // pointerMap.getCount() should be < touchList.length here,\n    // as the touchstart has not been processed yet.\n    var keys = Object.keys(this.pointerMap);\n    var count = keys.length;\n    if (count >= touchList.length) {\n      var d = [];\n      for (var i = 0; i < count; ++i) {\n        var key = Number(keys[i]);\n        var value = this.pointerMap[key];\n        // Never remove pointerId == 1, which is mouse.\n        // Touch identifiers are 2 smaller than their pointerId, which is the\n        // index in pointermap.\n        if (key != POINTER_ID && !this.findTouch_(touchList, key - 2)) {\n          d.push(value.out);\n        }\n      }\n      for (var i$1 = 0; i$1 < d.length; ++i$1) {\n        this.cancelOut_(inEvent, d[i$1]);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.overDown_ = function overDown_ (browserEvent, inPointer) {\n    this.pointerMap[inPointer.pointerId] = {\n      target: inPointer.target,\n      out: inPointer,\n      outTarget: inPointer.target\n    };\n    this.dispatcher.over(inPointer, browserEvent);\n    this.dispatcher.enter(inPointer, browserEvent);\n    this.dispatcher.down(inPointer, browserEvent);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.moveOverOut_ = function moveOverOut_ (browserEvent, inPointer) {\n    var event = inPointer;\n    var pointer = this.pointerMap[event.pointerId];\n    // a finger drifted off the screen, ignore it\n    if (!pointer) {\n      return;\n    }\n    var outEvent = pointer.out;\n    var outTarget = pointer.outTarget;\n    this.dispatcher.move(event, browserEvent);\n    if (outEvent && outTarget !== event.target) {\n      outEvent.relatedTarget = event.target;\n      /** @type {Object} */ (event).relatedTarget = outTarget;\n      // recover from retargeting by shadow\n      outEvent.target = outTarget;\n      if (event.target) {\n        this.dispatcher.leaveOut(outEvent, browserEvent);\n        this.dispatcher.enterOver(event, browserEvent);\n      } else {\n        // clean up case when finger leaves the screen\n        /** @type {Object} */ (event).target = outTarget;\n        /** @type {Object} */ (event).relatedTarget = null;\n        this.cancelOut_(browserEvent, event);\n      }\n    }\n    pointer.out = event;\n    pointer.outTarget = event.target;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent An event.\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.upOut_ = function upOut_ (browserEvent, inPointer) {\n    this.dispatcher.up(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.cancelOut_ = function cancelOut_ (browserEvent, inPointer) {\n    this.dispatcher.cancel(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.cleanUpPointer_ = function cleanUpPointer_ (inPointer) {\n    delete this.pointerMap[inPointer.pointerId];\n    this.removePrimaryPointer_(inPointer);\n  };\n\n  /**\n   * Prevent synth mouse events from creating pointer events.\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.dedupSynthMouse_ = function dedupSynthMouse_ (inEvent) {\n    var lts = this.mouseSource.lastTouches;\n    var t = inEvent.changedTouches[0];\n    // only the primary finger will synth mouse events\n    if (this.isPrimaryTouch_(t)) {\n      // remember x/y of last touch\n      var lt = [t.clientX, t.clientY];\n      lts.push(lt);\n\n      setTimeout(function() {\n        // remove touch after timeout\n        remove(lts, lt);\n      }, this.dedupTimeout_);\n    }\n  };\n\n  return TouchSource;\n}(EventSource));\n\nexport default TouchSource;\n\n//# sourceMappingURL=TouchSource.js.map","/**\n * @module ol/pointer/PointerEventHandler\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {listen, unlisten} from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport {POINTER, MSPOINTER, TOUCH} from '../has.js';\nimport PointerEventType from './EventType.js';\nimport MouseSource, {prepareEvent as prepareMouseEvent} from './MouseSource.js';\nimport MsSource from './MsSource.js';\nimport NativeSource from './NativeSource.js';\nimport PointerEvent from './PointerEvent.js';\nimport TouchSource from './TouchSource.js';\n\n\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array<Array>}\n */\nvar CLONE_PROPS = [\n  // MouseEvent\n  ['bubbles', false],\n  ['cancelable', false],\n  ['view', null],\n  ['detail', null],\n  ['screenX', 0],\n  ['screenY', 0],\n  ['clientX', 0],\n  ['clientY', 0],\n  ['ctrlKey', false],\n  ['altKey', false],\n  ['shiftKey', false],\n  ['metaKey', false],\n  ['button', 0],\n  ['relatedTarget', null],\n  // DOM Level 3\n  ['buttons', 0],\n  // PointerEvent\n  ['pointerId', 0],\n  ['width', 0],\n  ['height', 0],\n  ['pressure', 0],\n  ['tiltX', 0],\n  ['tiltY', 0],\n  ['pointerType', ''],\n  ['hwTimestamp', 0],\n  ['isPrimary', false],\n  // event instance\n  ['type', ''],\n  ['target', null],\n  ['currentTarget', null],\n  ['which', 0]\n];\n\n\nvar PointerEventHandler = /*@__PURE__*/(function (EventTarget) {\n  function PointerEventHandler(element) {\n    EventTarget.call(this);\n\n    /**\n     * @const\n     * @private\n     * @type {Element|HTMLDocument}\n     */\n    this.element_ = element;\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = {};\n\n    /**\n     * @type {Object<string, function(Event)>}\n     * @private\n     */\n    this.eventMap_ = {};\n\n    /**\n     * @type {Array<import(\"./EventSource.js\").default>}\n     * @private\n     */\n    this.eventSourceList_ = [];\n\n    this.registerSources();\n  }\n\n  if ( EventTarget ) PointerEventHandler.__proto__ = EventTarget;\n  PointerEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  PointerEventHandler.prototype.constructor = PointerEventHandler;\n\n  /**\n   * Set up the event sources (mouse, touch and native pointers)\n   * that generate pointer events.\n   */\n  PointerEventHandler.prototype.registerSources = function registerSources () {\n    if (POINTER) {\n      this.registerSource('native', new NativeSource(this));\n    } else if (MSPOINTER) {\n      this.registerSource('ms', new MsSource(this));\n    } else {\n      var mouseSource = new MouseSource(this);\n      this.registerSource('mouse', mouseSource);\n\n      if (TOUCH) {\n        this.registerSource('touch', new TouchSource(this, mouseSource));\n      }\n    }\n\n    // register events on the viewport element\n    this.register_();\n  };\n\n  /**\n   * Add a new event source that will generate pointer events.\n   *\n   * @param {string} name A name for the event source\n   * @param {import(\"./EventSource.js\").default} source The source event.\n   */\n  PointerEventHandler.prototype.registerSource = function registerSource (name, source) {\n    var s = source;\n    var newEvents = s.getEvents();\n\n    if (newEvents) {\n      newEvents.forEach(function(e) {\n        var handler = s.getHandlerForEvent(e);\n\n        if (handler) {\n          this.eventMap_[e] = handler.bind(s);\n        }\n      }.bind(this));\n      this.eventSourceList_.push(s);\n    }\n  };\n\n  /**\n   * Set up the events for all registered event sources.\n   * @private\n   */\n  PointerEventHandler.prototype.register_ = function register_ () {\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this.eventSourceList_[i];\n      this.addEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Remove all registered events.\n   * @private\n   */\n  PointerEventHandler.prototype.unregister_ = function unregister_ () {\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this.eventSourceList_[i];\n      this.removeEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Calls the right handler for a new event.\n   * @private\n   * @param {Event} inEvent Browser event.\n   */\n  PointerEventHandler.prototype.eventHandler_ = function eventHandler_ (inEvent) {\n    var type = inEvent.type;\n    var handler = this.eventMap_[type];\n    if (handler) {\n      handler(inEvent);\n    }\n  };\n\n  /**\n   * Setup listeners for the given events.\n   * @private\n   * @param {Array<string>} events List of events.\n   */\n  PointerEventHandler.prototype.addEvents_ = function addEvents_ (events) {\n    events.forEach(function(eventName) {\n      listen(this.element_, eventName, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Unregister listeners for the given events.\n   * @private\n   * @param {Array<string>} events List of events.\n   */\n  PointerEventHandler.prototype.removeEvents_ = function removeEvents_ (events) {\n    events.forEach(function(e) {\n      unlisten(this.element_, e, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Returns a snapshot of inEvent, with writable properties.\n   *\n   * @param {Event} event Browser event.\n   * @param {Event|Touch} inEvent An event that contains\n   *    properties to copy.\n   * @return {Object} An object containing shallow copies of\n   *    `inEvent`'s properties.\n   */\n  PointerEventHandler.prototype.cloneEvent = function cloneEvent (event, inEvent) {\n    var eventCopy = {};\n    for (var i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n      var p = CLONE_PROPS[i][0];\n      eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n    }\n\n    return eventCopy;\n  };\n\n  // EVENTS\n\n\n  /**\n   * Triggers a 'pointerdown' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.down = function down (data, event) {\n    this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n  };\n\n  /**\n   * Triggers a 'pointermove' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.move = function move (data, event) {\n    this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerup' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.up = function up (data, event) {\n    this.fireEvent(PointerEventType.POINTERUP, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerenter' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enter = function enter (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERENTER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerleave' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leave = function leave (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerover' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.over = function over (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROVER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerout' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.out = function out (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROUT, data, event);\n  };\n\n  /**\n   * Triggers a 'pointercancel' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.cancel = function cancel (data, event) {\n    this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n  };\n\n  /**\n   * Triggers a combination of 'pointerout' and 'pointerleave' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leaveOut = function leaveOut (data, event) {\n    this.out(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.leave(data, event);\n    }\n  };\n\n  /**\n   * Triggers a combination of 'pointerover' and 'pointerevents' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enterOver = function enterOver (data, event) {\n    this.over(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.enter(data, event);\n    }\n  };\n\n  /**\n   * @private\n   * @param {Element} container The container element.\n   * @param {Element} contained The contained element.\n   * @return {boolean} Returns true if the container element\n   *   contains the other element.\n   */\n  PointerEventHandler.prototype.contains_ = function contains_ (container, contained) {\n    if (!container || !contained) {\n      return false;\n    }\n    return container.contains(contained);\n  };\n\n  // EVENT CREATION AND TRACKING\n  /**\n   * Creates a new Event of type `inType`, based on the information in\n   * `data`.\n   *\n   * @param {string} inType A string representing the type of event to create.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   * @return {PointerEvent} A PointerEvent of type `inType`.\n   */\n  PointerEventHandler.prototype.makeEvent = function makeEvent (inType, data, event) {\n    return new PointerEvent(inType, event, data);\n  };\n\n  /**\n   * Make and dispatch an event in one call.\n   * @param {string} inType A string representing the type of event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.fireEvent = function fireEvent (inType, data, event) {\n    var e = this.makeEvent(inType, data, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Creates a pointer event from a native pointer event\n   * and dispatches this event.\n   * @param {Event} event A platform event with a target.\n   */\n  PointerEventHandler.prototype.fireNativeEvent = function fireNativeEvent (event) {\n    var e = this.makeEvent(event.type, event, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Wrap a native mouse event into a pointer event.\n   * This proxy method is required for the legacy IE support.\n   * @param {string} eventType The pointer event type.\n   * @param {Event} event The event.\n   * @return {PointerEvent} The wrapped event.\n   */\n  PointerEventHandler.prototype.wrapMouseEvent = function wrapMouseEvent (eventType, event) {\n    var pointerEvent = this.makeEvent(\n      eventType, prepareMouseEvent(event, this), event);\n    return pointerEvent;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PointerEventHandler.prototype.disposeInternal = function disposeInternal () {\n    this.unregister_();\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return PointerEventHandler;\n}(EventTarget));\n\nexport default PointerEventHandler;\n\n//# sourceMappingURL=PointerEventHandler.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport EventTarget from './events/Target.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\n\nvar MapBrowserEventHandler = /*@__PURE__*/(function (EventTarget) {\n  function MapBrowserEventHandler(map, moveTolerance) {\n\n    EventTarget.call(this);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance ?\n      moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {import(\"./pointer/PointerEvent.js\").default}\n     * @private\n     */\n    this.down_ = null;\n\n    var element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * Event handler which generates pointer events for\n     * the viewport element.\n     *\n     * @type {PointerEventHandler}\n     * @private\n     */\n    this.pointerEventHandler_ = new PointerEventHandler(element);\n\n    /**\n     * Event handler which generates pointer events for\n     * the document (used when dragging).\n     *\n     * @type {PointerEventHandler}\n     * @private\n     */\n    this.documentPointerEventHandler_ = null;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_, this);\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_, this);\n\n  }\n\n  if ( EventTarget ) MapBrowserEventHandler.__proto__ = EventTarget;\n  MapBrowserEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  MapBrowserEventHandler.prototype.constructor = MapBrowserEventHandler;\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.emulateClick_ = function emulateClick_ (pointerEvent) {\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.CLICK, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(function() {\n        this.clickTimeoutId_ = undefined;\n        var newEvent = new MapBrowserPointerEvent(\n          MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n      }.bind(this), 250);\n    }\n  };\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.updateActivePointers_ = function updateActivePointers_ (pointerEvent) {\n    var event = pointerEvent;\n\n    if (event.type == MapBrowserEventType.POINTERUP ||\n        event.type == MapBrowserEventType.POINTERCANCEL) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerUp_ = function handlePointerUp_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.stopPropagation() or event.preventDefault().\n    if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMouseActionButton_ = function isMouseActionButton_ (pointerEvent) {\n    return pointerEvent.button === 0;\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerDown_ = function handlePointerDown_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    this.down_ = pointerEvent;\n\n    if (this.dragListenerKeys_.length === 0) {\n      /* Set up a pointer event handler on the `document`,\n       * which is required when the pointer is moved outside\n       * the viewport when dragging.\n       */\n      this.documentPointerEventHandler_ =\n          new PointerEventHandler(document);\n\n      this.dragListenerKeys_.push(\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_, this),\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERUP,\n          this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(this.pointerEventHandler_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_, this)\n      );\n    }\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerMove_ = function handlePointerMove_ (pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      var newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent,\n        this.dragging_);\n      this.dispatchEvent(newEvent);\n    }\n\n    // Some native android browser triggers mousemove events during small period\n    // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n    // https://code.google.com/p/android/issues/detail?id=19827\n    // ex: Galaxy Tab P3110 + Android 4.1.1\n    pointerEvent.preventDefault();\n  };\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserPointerEvent matches the PointerEvent type.\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.relayEvent_ = function relayEvent_ (pointerEvent) {\n    var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(new MapBrowserPointerEvent(\n      pointerEvent.type, this.map_, pointerEvent, dragging));\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMoving_ = function isMoving_ (pointerEvent) {\n    return this.dragging_ ||\n        Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n        Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MapBrowserEventHandler.prototype.disposeInternal = function disposeInternal () {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    if (this.documentPointerEventHandler_) {\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n    if (this.pointerEventHandler_) {\n      this.pointerEventHandler_.dispose();\n      this.pointerEventHandler_ = null;\n    }\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return MapBrowserEventHandler;\n}(EventTarget));\n\n\nexport default MapBrowserEventHandler;\n\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend'\n\n};\n\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view'\n};\n\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#render\n   * @api\n   */\n  RENDER: 'render',\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n  ABORT: 5\n};\n\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = function PriorityQueue(priorityFunction, keyFunction) {\n\n  /**\n   * @type {function(T): number}\n   * @private\n   */\n  this.priorityFunction_ = priorityFunction;\n\n  /**\n   * @type {function(T): string}\n   * @private\n   */\n  this.keyFunction_ = keyFunction;\n\n  /**\n   * @type {Array<T>}\n   * @private\n   */\n  this.elements_ = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  this.priorities_ = [];\n\n  /**\n   * @type {!Object<string, boolean>}\n   * @private\n   */\n  this.queuedElements_ = {};\n\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.clear = function clear$1 () {\n  this.elements_.length = 0;\n  this.priorities_.length = 0;\n  clear(this.queuedElements_);\n};\n\n\n/**\n * Remove and return the highest-priority element. O(log N).\n * @return {T} Element.\n */\nPriorityQueue.prototype.dequeue = function dequeue () {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[0];\n  if (elements.length == 1) {\n    elements.length = 0;\n    priorities.length = 0;\n  } else {\n    elements[0] = elements.pop();\n    priorities[0] = priorities.pop();\n    this.siftUp_(0);\n  }\n  var elementKey = this.keyFunction_(element);\n  delete this.queuedElements_[elementKey];\n  return element;\n};\n\n\n/**\n * Enqueue an element. O(log N).\n * @param {T} element Element.\n * @return {boolean} The element was added to the queue.\n */\nPriorityQueue.prototype.enqueue = function enqueue (element) {\n  assert(!(this.keyFunction_(element) in this.queuedElements_),\n    31); // Tried to enqueue an `element` that was already added to the queue\n  var priority = this.priorityFunction_(element);\n  if (priority != DROP) {\n    this.elements_.push(element);\n    this.priorities_.push(priority);\n    this.queuedElements_[this.keyFunction_(element)] = true;\n    this.siftDown_(0, this.elements_.length - 1);\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @return {number} Count.\n */\nPriorityQueue.prototype.getCount = function getCount () {\n  return this.elements_.length;\n};\n\n\n/**\n * Gets the index of the left child of the node at the given index.\n * @param {number} index The index of the node to get the left child for.\n * @return {number} The index of the left child.\n * @private\n */\nPriorityQueue.prototype.getLeftChildIndex_ = function getLeftChildIndex_ (index) {\n  return index * 2 + 1;\n};\n\n\n/**\n * Gets the index of the right child of the node at the given index.\n * @param {number} index The index of the node to get the right child for.\n * @return {number} The index of the right child.\n * @private\n */\nPriorityQueue.prototype.getRightChildIndex_ = function getRightChildIndex_ (index) {\n  return index * 2 + 2;\n};\n\n\n/**\n * Gets the index of the parent of the node at the given index.\n * @param {number} index The index of the node to get the parent for.\n * @return {number} The index of the parent.\n * @private\n */\nPriorityQueue.prototype.getParentIndex_ = function getParentIndex_ (index) {\n  return (index - 1) >> 1;\n};\n\n\n/**\n * Make this a heap. O(N).\n * @private\n */\nPriorityQueue.prototype.heapify_ = function heapify_ () {\n  var i;\n  for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n    this.siftUp_(i);\n  }\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nPriorityQueue.prototype.isEmpty = function isEmpty () {\n  return this.elements_.length === 0;\n};\n\n\n/**\n * @param {string} key Key.\n * @return {boolean} Is key queued.\n */\nPriorityQueue.prototype.isKeyQueued = function isKeyQueued (key) {\n  return key in this.queuedElements_;\n};\n\n\n/**\n * @param {T} element Element.\n * @return {boolean} Is queued.\n */\nPriorityQueue.prototype.isQueued = function isQueued (element) {\n  return this.isKeyQueued(this.keyFunction_(element));\n};\n\n\n/**\n * @param {number} index The index of the node to move down.\n * @private\n */\nPriorityQueue.prototype.siftUp_ = function siftUp_ (index) {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var count = elements.length;\n  var element = elements[index];\n  var priority = priorities[index];\n  var startIndex = index;\n\n  while (index < (count >> 1)) {\n    var lIndex = this.getLeftChildIndex_(index);\n    var rIndex = this.getRightChildIndex_(index);\n\n    var smallerChildIndex = rIndex < count &&\n        priorities[rIndex] < priorities[lIndex] ?\n      rIndex : lIndex;\n\n    elements[index] = elements[smallerChildIndex];\n    priorities[index] = priorities[smallerChildIndex];\n    index = smallerChildIndex;\n  }\n\n  elements[index] = element;\n  priorities[index] = priority;\n  this.siftDown_(startIndex, index);\n};\n\n\n/**\n * @param {number} startIndex The index of the root.\n * @param {number} index The index of the node to move up.\n * @private\n */\nPriorityQueue.prototype.siftDown_ = function siftDown_ (startIndex, index) {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[index];\n  var priority = priorities[index];\n\n  while (index > startIndex) {\n    var parentIndex = this.getParentIndex_(index);\n    if (priorities[parentIndex] > priority) {\n      elements[index] = elements[parentIndex];\n      priorities[index] = priorities[parentIndex];\n      index = parentIndex;\n    } else {\n      break;\n    }\n  }\n  elements[index] = element;\n  priorities[index] = priority;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.reprioritize = function reprioritize () {\n  var priorityFunction = this.priorityFunction_;\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var index = 0;\n  var n = elements.length;\n  var element, i, priority;\n  for (i = 0; i < n; ++i) {\n    element = elements[i];\n    priority = priorityFunction(element);\n    if (priority == DROP) {\n      delete this.queuedElements_[this.keyFunction_(element)];\n    } else {\n      priorities[index] = priority;\n      elements[index++] = element;\n    }\n  }\n  elements.length = index;\n  priorities.length = index;\n  this.heapify_();\n};\n\n\nexport default PriorityQueue;\n\n//# sourceMappingURL=PriorityQueue.js.map","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport {listen, unlisten} from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\n\nvar TileQueue = /*@__PURE__*/(function (PriorityQueue) {\n  function TileQueue(tilePriorityFunction, tileChangeCallback) {\n\n    PriorityQueue.call(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      this, function(element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function(element) {\n        return (/** @type {import(\"./Tile.js\").default} */ (element[0]).getKey());\n      });\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n\n  }\n\n  if ( PriorityQueue ) TileQueue.__proto__ = PriorityQueue;\n  TileQueue.prototype = Object.create( PriorityQueue && PriorityQueue.prototype );\n  TileQueue.prototype.constructor = TileQueue;\n\n  /**\n   * @inheritDoc\n   */\n  TileQueue.prototype.enqueue = function enqueue (element) {\n    var added = PriorityQueue.prototype.enqueue.call(this, element);\n    if (added) {\n      var tile = element[0];\n      listen(tile, EventType.CHANGE, this.handleTileChange, this);\n    }\n    return added;\n  };\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  TileQueue.prototype.getTilesLoading = function getTilesLoading () {\n    return this.tilesLoading_;\n  };\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  TileQueue.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    var state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR ||\n        state === TileState.EMPTY || state === TileState.ABORT) {\n      unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n      var tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  };\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  TileQueue.prototype.loadMoreTiles = function loadMoreTiles (maxTotalLoading, maxNewLoads) {\n    var newLoads = 0;\n    var abortedTiles = false;\n    var state, tile, tileKey;\n    while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n           this.getCount() > 0) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.ABORT) {\n        abortedTiles = true;\n      } else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n    if (newLoads === 0 && abortedTiles) {\n      // Do not stop the render loop when all wanted tiles were aborted due to\n      // a small, saturated tile cache.\n      this.tileChangeCallback_();\n    }\n  };\n\n  return TileQueue;\n}(PriorityQueue));\n\n\nexport default TileQueue;\n\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/math\n */\nimport {assert} from './asserts.js';\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function() {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  var cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function(x) {\n      var y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n}());\n\n\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n  assert(0 < x, 29); // `x` must be greater than `0`\n  return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  var n = mat.length;\n\n  for (var i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    var maxRow = i;\n    var maxEl = Math.abs(mat[i][i]);\n    for (var r = i + 1; r < n; r++) {\n      var absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    var tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (var j = i + 1; j < n; j++) {\n      var coef = -mat[j][i] / mat[i][i];\n      for (var k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  var x = new Array(n);\n  for (var l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (var m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return angleInRadians * 180 / Math.PI;\n}\n\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return angleInDegrees * Math.PI / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  var r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n//# sourceMappingURL=math.js.map","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined)): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @return {Type} The constraint.\n */\nexport function createExtent(extent) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function(center) {\n      if (center) {\n        return [\n          clamp(center[0], extent[0], extent[2]),\n          clamp(center[1], extent[1], extent[3])\n        ];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number): (number|undefined)} Type\n */\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation, delta) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation, delta) {\n  if (rotation !== undefined) {\n    return rotation + delta;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  var theta = 2 * Math.PI / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        rotation = Math.floor((rotation + delta) / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    });\n}\n\n\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  var tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        if (Math.abs(rotation + delta) <= tolerance) {\n          return 0;\n        } else {\n          return rotation + delta;\n        }\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1\n};\n\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation'\n};\n\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/coordinate\n */\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += delta[0];\n  coordinate[1] += delta[1];\n  return coordinate;\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  var r = circle.getRadius();\n  var center = circle.getCenter();\n  var x0 = center[0];\n  var y0 = center[1];\n  var x1 = coordinate[0];\n  var y1 = coordinate[1];\n\n  var dx = x1 - x0;\n  var dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  var d = Math.sqrt(dx * dx + dy * dy);\n\n  var x = x0 + r * dx / d;\n  var y = y0 + r * dy / d;\n\n  return [x, y];\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  var x0 = coordinate[0];\n  var y0 = coordinate[1];\n  var start = segment[0];\n  var end = segment[1];\n  var x1 = start[0];\n  var y1 = start[1];\n  var x2 = end[0];\n  var y2 = end[1];\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  var along = (dx === 0 && dy === 0) ? 0 :\n    ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n  var x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function(coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  var x = Math.abs(3600 * normalizedDegrees);\n  var dflPrecision = opt_fractionDigits || 0;\n  var precision = Math.pow(10, dflPrecision);\n\n  var deg = Math.floor(x / 3600);\n  var min = Math.floor((x - deg * 3600) / 60);\n  var sec = x - (deg * 3600) - (min * 60);\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) + '\\u2033' +\n    (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  var equals = true;\n  for (var i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  var cosAngle = Math.cos(angle);\n  var sinAngle = Math.sin(angle);\n  var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  var dx = coord1[0] - coord2[0];\n  var dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate,\n    closestOnSegment(coordinate, segment));\n}\n\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n        degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/easing\n */\n\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16\n};\n\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/extent\n */\nimport {assert} from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  var extent = createEmpty();\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  var minX = Math.min.apply(null, xs);\n  var minY = Math.min.apply(null, ys);\n  var maxX = Math.max.apply(null, xs);\n  var maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value\n    ];\n  }\n}\n\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  var dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var x = coordinate[0];\n  var y = coordinate[1];\n  var relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(\n    Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (var i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(this:T, import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @param {T=} opt_this Value to use as `this` when executing `callback`.\n * @return {S|boolean} Value.\n * @template S, T\n */\nexport function forEachCorner(extent, callback, opt_this) {\n  var val;\n  val = callback.call(opt_this, getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  var area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  var coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  var minX = Math.min(extent1[0], extent2[0]);\n  var minY = Math.min(extent1[1], extent2[1]);\n  var maxX = Math.max(extent1[2], extent2[2]);\n  var maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n  var dx = resolution * size[0] / 2;\n  var dy = resolution * size[1] / 2;\n  var cosRotation = Math.cos(rotation);\n  var sinRotation = Math.sin(rotation);\n  var xCos = dx * cosRotation;\n  var xSin = dx * sinRotation;\n  var yCos = dy * cosRotation;\n  var ySin = dy * sinRotation;\n  var x = center[0];\n  var y = center[1];\n  var x0 = x - xCos + ySin;\n  var x1 = x - xCos - ySin;\n  var x2 = x + xCos - ySin;\n  var x3 = x + xCos + ySin;\n  var y0 = y - xSin - yCos;\n  var y1 = y - xSin + yCos;\n  var y2 = y + xSin + yCos;\n  var y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\n    opt_extent);\n}\n\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  var intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  var intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return extent1[0] <= extent2[2] &&\n      extent1[2] >= extent2[0] &&\n      extent1[1] <= extent2[3] &&\n      extent1[3] >= extent2[1];\n}\n\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  var intersects = false;\n  var startRel = coordinateRelationship(extent, start);\n  var endRel = coordinateRelationship(extent, end);\n  if (startRel === Relationship.INTERSECTING ||\n      endRel === Relationship.INTERSECTING) {\n    intersects = true;\n  } else {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var startX = start[0];\n    var startY = start[1];\n    var endX = end[0];\n    var endY = end[1];\n    var slope = (endY - startY) / (endX - startX);\n    var x, y;\n    if (!!(endRel & Relationship.ABOVE) &&\n        !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - ((endY - maxY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.RIGHT) &&\n        !(startRel & Relationship.RIGHT)) {\n      // potentially intersects right\n      y = endY - ((endX - maxX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n    if (!intersects && !!(endRel & Relationship.BELOW) &&\n        !(startRel & Relationship.BELOW)) {\n      // potentially intersects bottom\n      x = endX - ((endY - minY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.LEFT) &&\n        !(startRel & Relationship.LEFT)) {\n      // potentially intersects left\n      y = endY - ((endX - minX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n\n  }\n  return intersects;\n}\n\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n  var coordinates = [\n    extent[0], extent[1],\n    extent[0], extent[3],\n    extent[2], extent[1],\n    extent[2], extent[3]\n  ];\n  transformFn(coordinates, coordinates, 2);\n  var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n  var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle'\n};\n\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM'\n};\n\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/geom/flat/transform\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var x = flatCoordinates[j];\n    var y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n\n/**\n * @module ol/sphere\n */\nimport {toRadians, toDegrees} from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lat2 = toRadians(c2[1]);\n  var deltaLatBy2 = (lat2 - lat1) / 2;\n  var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n      Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n      Math.cos(lat1) * Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  var length = 0;\n  for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var length = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  var area = 0;\n  var len = coordinates.length;\n  var x1 = coordinates[len - 1][0];\n  var y1 = coordinates[len - 1][1];\n  for (var i = 0; i < len; i++) {\n    var x2 = coordinates[i][0];\n    var y2 = coordinates[i][1];\n    area += toRadians(x2 - x1) *\n        (2 + Math.sin(toRadians(y1)) +\n        Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return area * radius * radius / 2.0;\n}\n\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var area = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lon1 = toRadians(c1[0]);\n  var dByR = distance / radius;\n  var lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n  var lon = lon1 + Math.atan2(\n    Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n    Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n  return [toDegrees(lon), toDegrees(lat)];\n}\n\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n  DEGREES: 'degrees',\n  FEET: 'ft',\n  METERS: 'm',\n  PIXELS: 'pixels',\n  TILE_PIXELS: 'tile-pixels',\n  USFEET: 'us-ft'\n};\n\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = function Projection(options) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this.code_ = options.code;\n\n  /**\n   * Units of projected coordinates. When set to `TILE_PIXELS`, a\n   * `this.extent_` and `this.worldExtent_` must be configured properly for each\n   * tile.\n   * @private\n   * @type {import(\"./Units.js\").default}\n   */\n  this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n  /**\n   * Validity extent of the projection in projected coordinates. For projections\n   * with `TILE_PIXELS` units, this is the extent of the tile in\n   * tile pixel space.\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.extent_ = options.extent !== undefined ? options.extent : null;\n\n  /**\n   * Extent of the world in EPSG:4326. For projections with\n   * `TILE_PIXELS` units, this is the extent of the tile in\n   * projected coordinate space.\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.worldExtent_ = options.worldExtent !== undefined ?\n    options.worldExtent : null;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.axisOrientation_ = options.axisOrientation !== undefined ?\n    options.axisOrientation : 'enu';\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.global_ = options.global !== undefined ? options.global : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.canWrapX_ = !!(this.global_ && this.extent_);\n\n  /**\n   * @private\n   * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n   */\n  this.getPointResolutionFunc_ = options.getPointResolution;\n\n  /**\n   * @private\n   * @type {import(\"../tilegrid/TileGrid.js\").default}\n   */\n  this.defaultTileGrid_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.metersPerUnit_ = options.metersPerUnit;\n};\n\n/**\n * @return {boolean} The projection is suitable for wrapping the x-axis\n */\nProjection.prototype.canWrapX = function canWrapX () {\n  return this.canWrapX_;\n};\n\n/**\n * Get the code for this projection, e.g. 'EPSG:4326'.\n * @return {string} Code.\n * @api\n */\nProjection.prototype.getCode = function getCode () {\n  return this.code_;\n};\n\n/**\n * Get the validity extent for this projection.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nProjection.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the units of this projection.\n * @return {import(\"./Units.js\").default} Units.\n * @api\n */\nProjection.prototype.getUnits = function getUnits () {\n  return this.units_;\n};\n\n/**\n * Get the amount of meters per unit of this projection.If the projection is\n * not configured with `metersPerUnit` or a units identifier, the return is\n * `undefined`.\n * @return {number|undefined} Meters.\n * @api\n */\nProjection.prototype.getMetersPerUnit = function getMetersPerUnit () {\n  return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n};\n\n/**\n * Get the world extent for this projection.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nProjection.prototype.getWorldExtent = function getWorldExtent () {\n  return this.worldExtent_;\n};\n\n/**\n * Get the axis orientation of this projection.\n * Example values are:\n * enu - the default easting, northing, elevation.\n * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n *   or south orientated transverse mercator.\n * wnu - westing, northing, up - some planetary coordinate systems have\n *   \"west positive\" coordinate systems\n * @return {string} Axis orientation.\n * @api\n */\nProjection.prototype.getAxisOrientation = function getAxisOrientation () {\n  return this.axisOrientation_;\n};\n\n/**\n * Is this projection a global projection which spans the whole world?\n * @return {boolean} Whether the projection is global.\n * @api\n */\nProjection.prototype.isGlobal = function isGlobal () {\n  return this.global_;\n};\n\n/**\n * Set if the projection is a global projection which spans the whole world\n * @param {boolean} global Whether the projection is global.\n * @api\n */\nProjection.prototype.setGlobal = function setGlobal (global) {\n  this.global_ = global;\n  this.canWrapX_ = !!(global && this.extent_);\n};\n\n/**\n * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n */\nProjection.prototype.getDefaultTileGrid = function getDefaultTileGrid () {\n  return this.defaultTileGrid_;\n};\n\n/**\n * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n */\nProjection.prototype.setDefaultTileGrid = function setDefaultTileGrid (tileGrid) {\n  this.defaultTileGrid_ = tileGrid;\n};\n\n/**\n * Set the validity extent for this projection.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @api\n */\nProjection.prototype.setExtent = function setExtent (extent) {\n  this.extent_ = extent;\n  this.canWrapX_ = !!(this.global_ && extent);\n};\n\n/**\n * Set the world extent for this projection.\n * @param {import(\"../extent.js\").Extent} worldExtent World extent\n *   [minlon, minlat, maxlon, maxlat].\n * @api\n */\nProjection.prototype.setWorldExtent = function setWorldExtent (worldExtent) {\n  this.worldExtent_ = worldExtent;\n};\n\n/**\n * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n * for this projection.\n * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n * @api\n */\nProjection.prototype.setGetPointResolution = function setGetPointResolution (func) {\n  this.getPointResolutionFunc_ = func;\n};\n\n/**\n * Get the custom point resolution function for this projection (if set).\n * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n * resolution function (if set).\n */\nProjection.prototype.getPointResolutionFunc = function getPointResolutionFunc () {\n  return this.getPointResolutionFunc_;\n};\n\nexport default Projection;\n\n//# sourceMappingURL=Projection.js.map","/**\n * @module ol/proj/epsg3857\n */\nimport {cosh} from '../math.js';\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [\n  -HALF_SIZE, -HALF_SIZE,\n  HALF_SIZE, HALF_SIZE\n];\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /*@__PURE__*/(function (Projection) {\n  function EPSG3857Projection(code) {\n    Projection.call(this, {\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function(resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      }\n    });\n\n  }\n\n  if ( Projection ) EPSG3857Projection.__proto__ = Projection;\n  EPSG3857Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG3857Projection.prototype.constructor = EPSG3857Projection;\n\n  return EPSG3857Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  var halfSize = HALF_SIZE;\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = halfSize * input[i] / 180;\n    var y = RADIUS *\n        Math.log(Math.tan(Math.PI * (input[i + 1] + 90) / 360));\n    if (y > halfSize) {\n      y = halfSize;\n    } else if (y < -halfSize) {\n      y = -halfSize;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = 180 * input[i] / HALF_SIZE;\n    output[i + 1] = 360 * Math.atan(\n      Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n  }\n  return output;\n}\n\n//# sourceMappingURL=epsg3857.js.map","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /*@__PURE__*/(function (Projection) {\n  function EPSG4326Projection(code, opt_axisOrientation) {\n    Projection.call(this, {\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT\n    });\n\n  }\n\n  if ( Projection ) EPSG4326Projection.__proto__ = Projection;\n  EPSG4326Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG4326Projection.prototype.constructor = EPSG4326Projection;\n\n  return EPSG4326Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return cache[code] || null;\n}\n\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  var transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  var transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {getDistance} from './sphere.js';\nimport {applyTransform} from './extent.js';\nimport {modulo} from './math.js';\nimport {toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport {add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc} from './proj/transforms.js';\n\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  var output;\n  if (opt_output !== undefined) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  projections.add(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string' ?\n    projections.get(/** @type {string} */ (projectionLike)) :\n    (/** @type {Projection} */ (projectionLike) || null);\n}\n\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  var pointResolution;\n  var getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n  } else {\n    var units = projection.getUnits();\n    if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      var toEPSG4326 = getTransformFromProjections(projection, get('EPSG:4326'));\n      var vertices = [\n        point[0] - resolution / 2, point[1],\n        point[0] + resolution / 2, point[1],\n        point[0], point[1] - resolution / 2,\n        point[0], point[1] + resolution / 2\n      ];\n      vertices = toEPSG4326(vertices, vertices, 2);\n      var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n      var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n      pointResolution = (width + height) / 2;\n      var metersPerUnit = opt_units ?\n        METERS_PER_UNIT[opt_units] :\n        projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function(source) {\n    projections.forEach(function(destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n  projections1.forEach(function(projection1) {\n    projections2.forEach(function(projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  projections.clear();\n  clearTransformFuncs();\n}\n\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return (\n      /** @type {Projection} */ (projection)\n    );\n  }\n}\n\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function(input, opt_output, opt_dimension) {\n      var length = input.length;\n      var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      var output = opt_output !== undefined ? opt_output : new Array(length);\n      for (var i = 0; i < length; i += dimension) {\n        var point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (var j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    });\n}\n\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  var sourceProj = get(source);\n  var destProj = get(destination);\n  addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n  addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(coordinate, 'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  var lonLat = transform(coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n  var lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  var equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    var transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n  var sourceCode = sourceProjection.getCode();\n  var destinationCode = destinationProjection.getCode();\n  var transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  var sourceProjection = get(source);\n  var destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc);\n}\n\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n  var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n  return transformFunc(point);\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\n\naddCommon();\n\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n */\n\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  var a1 = transform1[0];\n  var b1 = transform1[1];\n  var c1 = transform1[2];\n  var d1 = transform1[3];\n  var e1 = transform1[4];\n  var f1 = transform1[5];\n  var a2 = transform2[0];\n  var b2 = transform2[1];\n  var c2 = transform2[2];\n  var d2 = transform2[3];\n  var e2 = transform2[4];\n  var f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  var sin = Math.sin(angle);\n  var cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n\n/**\n * Invert the given transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Inverse of the transform.\n */\nexport function invert(transform) {\n  var det = determinant(transform);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  var a = transform[0];\n  var b = transform[1];\n  var c = transform[2];\n  var d = transform[3];\n  var e = transform[4];\n  var f = transform[5];\n\n  transform[0] = d / det;\n  transform[1] = -b / det;\n  transform[2] = -c / det;\n  transform[3] = a / det;\n  transform[4] = (c * f - d * e) / det;\n  transform[5] = -(a * f - b * e) / det;\n\n  return transform;\n}\n\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/geom/Geometry\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {createEmpty, getHeight, returnOrUpdate} from '../extent.js';\nimport {transform2D} from './flat/transform.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport Units from '../proj/Units.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /*@__PURE__*/(function (BaseObject) {\n  function Geometry() {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {Object<string, Geometry>}\n     */\n    this.simplifiedGeometryCache = {};\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n  }\n\n  if ( BaseObject ) Geometry.__proto__ = BaseObject;\n  Geometry.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Geometry.prototype.constructor = Geometry;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  Geometry.prototype.clone = function clone () {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  Geometry.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  };\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  Geometry.prototype.containsXY = function containsXY (x, y) {\n    return false;\n  };\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  Geometry.prototype.getClosestPoint = function getClosestPoint (point, opt_closestPoint) {\n    var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  };\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  Geometry.prototype.intersectsCoordinate = function intersectsCoordinate (coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  Geometry.prototype.computeExtent = function computeExtent (extent) {\n    return abstract();\n  };\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  Geometry.prototype.getExtent = function getExtent (opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      this.extent_ = this.computeExtent(this.extent_);\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  };\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  Geometry.prototype.rotate = function rotate (angle, anchor) {\n    abstract();\n  };\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n   *     sx).\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  Geometry.prototype.scale = function scale (sx, opt_sy, opt_anchor) {\n    abstract();\n  };\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the the {@link\n   * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n   * Douglas Peucker} algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  Geometry.prototype.simplify = function simplify (tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  };\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  Geometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    return abstract();\n  };\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  Geometry.prototype.getType = function getType () {\n    return abstract();\n  };\n\n  /**\n   * Apply a transform function to each coordinate of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n   */\n  Geometry.prototype.applyTransform = function applyTransform (transformFn) {\n    abstract();\n  };\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  Geometry.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return abstract();\n  };\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  Geometry.prototype.translate = function translate (deltaX, deltaY) {\n    abstract();\n  };\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  Geometry.prototype.transform = function transform (source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    var sourceProj = getProjection(source);\n    var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\n      function(inCoordinates, outCoordinates, stride) {\n        var pixelExtent = sourceProj.getExtent();\n        var projectedExtent = sourceProj.getWorldExtent();\n        var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n        composeTransform(tmpTransform,\n          projectedExtent[0], projectedExtent[3],\n          scale, -scale, 0,\n          0, 0);\n        transform2D(inCoordinates, 0, inCoordinates.length, stride,\n          tmpTransform, outCoordinates);\n        return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n      } :\n      getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  };\n\n  return Geometry;\n}(BaseObject));\n\n\nexport default Geometry;\n\n//# sourceMappingURL=Geometry.js.map","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {rotate, scale, translate, transform2D} from './flat/transform.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /*@__PURE__*/(function (Geometry) {\n  function SimpleGeometry() {\n\n    Geometry.call(this);\n\n    /**\n     * @protected\n     * @type {GeometryLayout}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n\n  }\n\n  if ( Geometry ) SimpleGeometry.__proto__ = Geometry;\n  SimpleGeometry.prototype = Object.create( Geometry && Geometry.prototype );\n  SimpleGeometry.prototype.constructor = SimpleGeometry;\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromFlatCoordinates(this.flatCoordinates,\n      0, this.flatCoordinates.length, this.stride, extent);\n  };\n\n  /**\n   * @abstract\n   * @return {Array} Coordinates.\n   */\n  SimpleGeometry.prototype.getCoordinates = function getCoordinates () {\n    return abstract();\n  };\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  SimpleGeometry.prototype.getFirstCoordinate = function getFirstCoordinate () {\n    return this.flatCoordinates.slice(0, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  SimpleGeometry.prototype.getFlatCoordinates = function getFlatCoordinates () {\n    return this.flatCoordinates;\n  };\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  SimpleGeometry.prototype.getLastCoordinate = function getLastCoordinate () {\n    return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n  };\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {GeometryLayout} Layout.\n   * @api\n   */\n  SimpleGeometry.prototype.getLayout = function getLayout () {\n    return this.layout;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    var key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      var simplifiedGeometry =\n          this.getSimplifiedGeometryInternal(squaredTolerance);\n      var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n      if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n        this.simplifiedGeometryCache[key] = simplifiedGeometry;\n        return simplifiedGeometry;\n      } else {\n        // Simplification did not actually remove any coordinates.  We now know\n        // that any calls to getSimplifiedGeometry with a squaredTolerance less\n        // than or equal to the current squaredTolerance will also not have any\n        // effect.  This allows us to short circuit simplification (saving CPU\n        // cycles) and prevents the cache of simplified geometries from filling\n        // up with useless identical copies of this geometry (saving memory).\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  };\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    return this;\n  };\n\n  /**\n   * @return {number} Stride.\n   */\n  SimpleGeometry.prototype.getStride = function getStride () {\n    return this.stride;\n  };\n\n  /**\n   * @param {GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  SimpleGeometry.prototype.setFlatCoordinates = function setFlatCoordinates (layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  };\n\n  /**\n   * @abstract\n   * @param {!Array} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   */\n  SimpleGeometry.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    abstract();\n  };\n\n  /**\n   * @param {GeometryLayout|undefined} layout Layout.\n   * @param {Array} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  SimpleGeometry.prototype.setLayout = function setLayout (layout, coordinates, nesting) {\n    /** @type {number} */\n    var stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (var i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.applyTransform = function applyTransform (transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.rotate = function rotate$1 (angle, anchor) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      rotate(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, angle, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.scale = function scale$1 (sx, opt_sy, opt_anchor) {\n    var sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    var anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      scale(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, sx, sy, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.translate = function translate$1 (deltaX, deltaY) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      translate(\n        flatCoordinates, 0, flatCoordinates.length, stride,\n        deltaX, deltaY, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  return SimpleGeometry;\n}(Geometry));\n\n\n/**\n * @param {number} stride Stride.\n * @return {GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  var layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return (\n    /** @type {GeometryLayout} */ (layout)\n  );\n}\n\n\n/**\n * @param {GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  var stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  var flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    var stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      transform, opt_dest);\n  }\n}\n\nexport default SimpleGeometry;\n\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/geom/flat/area\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  var twiceArea = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  var area = 0;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var area = 0;\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n\n//# sourceMappingURL=area.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n  var x1 = flatCoordinates[offset1];\n  var y1 = flatCoordinates[offset1 + 1];\n  var dx = flatCoordinates[offset2] - x1;\n  var dy = flatCoordinates[offset2 + 1] - y1;\n  var offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i], t);\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (var i$1 = 0; i$1 < stride; ++i$1) {\n    closestPoint[i$1] = flatCoordinates[offset + i$1];\n  }\n  closestPoint.length = stride;\n}\n\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    max = maxSquaredDelta(\n      flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    max = arrayMaxSquaredDelta(\n      flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  var i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  var index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index += stride * Math.max(\n        ((Math.sqrt(squaredDistance) -\n            Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates, offset, end, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset,\n  endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates, offset, ends, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/deflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    var coordinate = coordinates[i];\n    for (var j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n  var ends = opt_ends ? opt_ends : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n    var end = deflateCoordinates(\n      flatCoordinates, offset, coordinatess[j], stride);\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n  var endss = opt_endss ? opt_endss : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    var ends = deflateCoordinatesArray(\n      flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/inflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n  var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n  var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  var i = 0;\n  for (var j = 0, jj = ends.length; j < jj; ++j) {\n    var end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates, offset, end, stride, coordinatess[i]);\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n  var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  var i = 0;\n  for (var j = 0, jj = endss.length; j < jj; ++j) {\n    var ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates, offset, ends, stride, coordinatesss[i]);\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredSegmentDistance, squaredDistance} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end,\n  stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n  var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n    opt_simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(flatCoordinates, offset, end,\n      stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0);\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates, offset, end, stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0);\n  return simplifiedFlatCoordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  var n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  var markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  var stack = [offset, end - stride];\n  var index = 0;\n  while (stack.length > 0) {\n    var last = stack.pop();\n    var first = stack.pop();\n    var maxSquaredDistance = 0;\n    var x1 = flatCoordinates[first];\n    var y1 = flatCoordinates[first + 1];\n    var x2 = flatCoordinates[last];\n    var y2 = flatCoordinates[last + 1];\n    for (var i = first + stride; i < last; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      var squaredDistance = squaredSegmentDistance(\n        x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (var i$1 = 0; i$1 < n; ++i$1) {\n    if (markers[i$1]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset,\n  ends, stride, squaredTolerance, simplifiedFlatCoordinates,\n  simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates, offset, end, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates, offset, endss, stride, squaredTolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates, offset, ends, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  var x2 = x1;\n  var y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride,\n  tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  var x1 = snap(flatCoordinates[offset], tolerance);\n  var y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  var x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    var x3 = snap(flatCoordinates[offset], tolerance);\n    var y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    var dx1 = x2 - x1;\n    var dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    var dx2 = x3 - x1;\n    var dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if ((dx1 * dy2 == dy1 * dx2) &&\n        ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n        ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates, offset, ends, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates, offset, end, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates, offset, endss, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates, offset, ends, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n//# sourceMappingURL=simplify.js.map","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /*@__PURE__*/(function (SimpleGeometry) {\n  function LinearRing(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LinearRing.__proto__ = SimpleGeometry;\n  LinearRing.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LinearRing.prototype.constructor = LinearRing;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.clone = function clone () {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  LinearRing.prototype.getArea = function getArea () {\n    return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LinearRing.prototype.getType = function getType () {\n    return GeometryType.LINEAR_RING;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return false;\n  };\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LinearRing;\n}(SimpleGeometry));\n\n\nexport default LinearRing;\n\n//# sourceMappingURL=LinearRing.js.map","/**\n * @module ol/geom/Point\n */\nimport {createOrUpdateFromCoordinate, containsXY} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /*@__PURE__*/(function (SimpleGeometry) {\n  function Point(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  if ( SimpleGeometry ) Point.__proto__ = SimpleGeometry;\n  Point.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Point.prototype.constructor = Point;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @override\n   * @api\n   */\n  Point.prototype.clone = function clone () {\n    var point = new Point(this.flatCoordinates.slice(), this.layout);\n    return point;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    var flatCoordinates = this.flatCoordinates;\n    var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n    if (squaredDistance < minSquaredDistance) {\n      var stride = this.stride;\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  };\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @override\n   * @api\n   */\n  Point.prototype.getCoordinates = function getCoordinates () {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.getType = function getType () {\n    return GeometryType.POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return Point;\n}(SimpleGeometry));\n\n\nexport default Point;\n\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n  var outside = forEachCorner(extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function(coordinate) {\n      return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n  return !outside;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  var wn = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset,\n  ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n  var i, ii, x, x1, x2, y1, y2;\n  var y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  var intersections = [];\n  // Calculate intersections with the horizontal line\n  for (var r = 0, rr = ends.length; r < rr; ++r) {\n    var end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  var pointX = NaN;\n  var maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    var segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n  var interiorPoints = [];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(flatCoordinates,\n      offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment} from '../../extent.js';\nimport {linearRingContainsXY, linearRingContainsExtent} from './contains.js';\nimport {forEach as forEachSegment} from './segments.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n  var coordinatesExtent = extendFlatCoordinates(\n    createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] &&\n      coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] &&\n      coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(flatCoordinates, offset, end, stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function(point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    });\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    if (intersectsLineString(\n      flatCoordinates, offset, ends[i], stride, extent)) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n  if (intersectsLineString(\n    flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n  if (!intersectsLinearRing(\n    flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n      if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (intersectsLinearRingArray(\n      flatCoordinates, offset, ends, stride, extent)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/segments\n */\n\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(this: S, import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @param {S=} opt_this The object to be used as the value of 'this'\n *     within callback.\n * @return {T|boolean} Value.\n * @template T,S\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback, opt_this) {\n  var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  var point2 = [];\n  var ret;\n  for (; (offset + stride) < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback.call(opt_this, point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/reverse\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (var i = 0; i < stride; ++i) {\n      var tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  var edge = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge > 0;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingIsOriented(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    if (!linearRingIsOriented(\n      flatCoordinates, offset, endss[i], stride, opt_right)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    var reverse = i === 0 ?\n      (right && isClockwise) || (!right && !isClockwise) :\n      (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates, offset, endss[i], stride, opt_right);\n  }\n  return offset;\n}\n\n//# sourceMappingURL=orient.js.map","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from './flat/closest.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingIsOriented, orientLinearRings} from './flat/orient.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {modulo} from '../math.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /*@__PURE__*/(function (SimpleGeometry) {\n  function Polygon(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) Polygon.__proto__ = SimpleGeometry;\n  Polygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Polygon.prototype.constructor = Polygon;\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  Polygon.prototype.appendLinearRing = function appendLinearRing (linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @override\n   * @api\n   */\n  Polygon.prototype.clone = function clone () {\n    return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  Polygon.prototype.getArea = function getArea () {\n    return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  Polygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(\n        flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(\n      flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  Polygon.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  Polygon.prototype.getFlatInteriorPoint = function getFlatInteriorPoint () {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      var flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride,\n        flatCenter, 0);\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  };\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  Polygon.prototype.getInteriorPoint = function getInteriorPoint () {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  };\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRingCount = function getLinearRingCount () {\n    return this.ends_.length;\n  };\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  Polygon.prototype.getLinearRing = function getLinearRing (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRings = function getLinearRings () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var linearRings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  };\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  Polygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingIsOriented(\n        flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRings(\n              this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.getType = function getType () {\n    return GeometryType.POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  Polygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return Polygon;\n}(SimpleGeometry));\n\n\nexport default Polygon;\n\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  var n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  var flatCoordinates = [];\n  for (var i = 0; i < n; ++i) {\n    extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var flatCoordinates =\n      [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  var sides = opt_sides ? opt_sides : 32;\n  var stride = circle.getStride();\n  var layout = circle.getLayout();\n  var center = circle.getCenter();\n  var arrayLength = stride * (sides + 1);\n  var flatCoordinates = new Array(arrayLength);\n  for (var i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (var j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  var ends = [flatCoordinates.length];\n  var polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  var flatCoordinates = polygon.getFlatCoordinates();\n  var stride = polygon.getStride();\n  var sides = flatCoordinates.length / stride - 1;\n  var startAngle = opt_angle ? opt_angle : 0;\n  for (var i = 0; i <= sides; ++i) {\n    var offset = i * stride;\n    var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n    flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n    flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n  }\n  polygon.changed();\n}\n\n//# sourceMappingURL=Polygon.js.map","/**\n * @module ol/View\n */\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {getUid} from './util.js';\nimport {VOID} from './functions.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport {createSnapToResolutions, createSnapToPower} from './resolutionconstraint.js';\nimport {createSnapToZero, createSnapToN, none as rotationNone, disable} from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual} from './coordinate.js';\nimport {inAndOut} from './easing.js';\nimport {getForViewAndSize, getCenter, getHeight, getWidth, isEmpty} from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport {clamp, modulo} from './math.js';\nimport {assign} from './obj.js';\nimport {createProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\n\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [constrainResolution=true] Constrain the resolution.\n * @property {boolean} [nearest=false] If `constrainResolution` is `true`, get\n * the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * center, in other words, center cannot be set outside this extent.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view. The initial\n * resolution is determined using the {@link #constrainResolution} method.\n * @property {number} [zoomFactor=2] The zoom factor used to determine the\n * resolution constraint.\n */\n\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remained fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * An View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view. Any value can be passed to the setters. And the value\n * that is passed to a setter will effectively be the value set in the view,\n * and returned by the corresponding getter.\n *\n * But a View object also has a *resolution constraint*, a\n * *rotation constraint* and a *center constraint*.\n *\n * As said above, no constraints are applied when the setters are used to set\n * new states for the view. Applying constraints is done explicitly through\n * the use of the `constrain*` functions (`constrainResolution` and\n * `constrainRotation` and `constrainCenter`).\n *\n * The main users of the constraints are the interactions and the\n * controls. For example, double-clicking on the map changes the view to\n * the \"next\" resolution. And releasing the fingers after pinch-zooming\n * snaps to the closest resolution (with an animation).\n *\n * The *resolution constraint* snaps to specific resolutions. It is\n * determined by the following options: `resolutions`, `maxResolution`,\n * `maxZoom`, and `zoomFactor`. If `resolutions` is set, the other three\n * options are ignored. See documentation for each option for more\n * information.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default the rotation value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the center is not constrained at all.\n *\n  * @api\n */\nvar View = /*@__PURE__*/(function (BaseObject) {\n  function View(opt_options) {\n    BaseObject.call(this);\n\n    var options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    this.updateAnimations_ = this.updateAnimations_.bind(this);\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    this.applyOptions_(options);\n  }\n\n  if ( BaseObject ) View.__proto__ = BaseObject;\n  View.prototype = Object.create( BaseObject && BaseObject.prototype );\n  View.prototype.constructor = View;\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  View.prototype.applyOptions_ = function applyOptions_ (options) {\n\n    /**\n     * @type {Object<string, *>}\n     */\n    var properties = {};\n    properties[ViewProperty.CENTER] = options.center !== undefined ?\n      options.center : null;\n\n    var resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    var centerConstraint = createCenterConstraint(options);\n    var resolutionConstraint = resolutionConstraintInfo.constraint;\n    var rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint\n    };\n\n    if (options.resolution !== undefined) {\n      properties[ViewProperty.RESOLUTION] = options.resolution;\n    } else if (options.zoom !== undefined) {\n      properties[ViewProperty.RESOLUTION] = this.constrainResolution(\n        this.maxResolution_, options.zoom - this.minZoom_);\n\n      if (this.resolutions_) { // in case map zoom is out of min/max zoom range\n        properties[ViewProperty.RESOLUTION] = clamp(\n          Number(this.getResolution() || properties[ViewProperty.RESOLUTION]),\n          this.minResolution_, this.maxResolution_);\n      }\n    }\n    properties[ViewProperty.ROTATION] = options.rotation !== undefined ? options.rotation : 0;\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n\n  };\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  View.prototype.getUpdatedOptions_ = function getUpdatedOptions_ (newOptions) {\n    var options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenter();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  };\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean))} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  View.prototype.animate = function animate (var_args) {\n    var arguments$1 = arguments;\n\n    var animationCount = arguments.length;\n    var callback;\n    if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      var state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenter(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    var start = Date.now();\n    var center = this.getCenter().slice();\n    var resolution = this.getResolution();\n    var rotation = this.getRotation();\n    var series = [];\n    for (var i = 0; i < animationCount; ++i) {\n      var options = /** @type {AnimationOptions} */ (arguments$1[i]);\n\n      var animation = /** @type {Animation} */ ({\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut\n      });\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center;\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.constrainResolution(\n          this.maxResolution_, options.zoom - this.minZoom_, 0);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      animation.callback = callback;\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  };\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  View.prototype.getAnimating = function getAnimating () {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  };\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  View.prototype.getInteracting = function getInteracting () {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  };\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  View.prototype.cancelAnimations = function cancelAnimations () {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n      var series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n    }\n    this.animations_.length = 0;\n  };\n\n  /**\n   * Update all animations.\n   */\n  View.prototype.updateAnimations_ = function updateAnimations_ () {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    var now = Date.now();\n    var more = false;\n    for (var i = this.animations_.length - 1; i >= 0; --i) {\n      var series = this.animations_[i];\n      var seriesComplete = true;\n      for (var j = 0, jj = series.length; j < jj; ++j) {\n        var animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        var elapsed = now - animation.start;\n        var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        var progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          var x0 = animation.sourceCenter[0];\n          var y0 = animation.sourceCenter[1];\n          var x1 = animation.targetCenter[0];\n          var y1 = animation.targetCenter[1];\n          var x = x0 + progress * (x1 - x0);\n          var y = y0 + progress * (y1 - y0);\n          this.set(ViewProperty.CENTER, [x, y]);\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          var resolution = progress === 1 ?\n            animation.targetResolution :\n            animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            this.set(ViewProperty.CENTER,\n              this.calculateCenterZoom(resolution, animation.anchor));\n          }\n          this.set(ViewProperty.RESOLUTION, resolution);\n        }\n        if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n          var rotation = progress === 1 ?\n            modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n            animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            this.set(ViewProperty.CENTER,\n              this.calculateCenterRotate(rotation, animation.anchor));\n          }\n          this.set(ViewProperty.ROTATION, rotation);\n        }\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        var callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_);\n    }\n  };\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  View.prototype.calculateCenterRotate = function calculateCenterRotate (rotation, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  };\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  View.prototype.calculateCenterZoom = function calculateCenterZoom (resolution, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    var currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n      var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  };\n\n  /**\n   * @private\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  View.prototype.getSizeFromViewport_ = function getSizeFromViewport_ () {\n    var size = [100, 100];\n    var selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n    var element = document.querySelector(selector);\n    if (element) {\n      var metrics = getComputedStyle(element);\n      size[0] = parseInt(metrics.width, 10);\n      size[1] = parseInt(metrics.height, 10);\n    }\n    return size;\n  };\n\n  /**\n   * Get the constrained center of this view.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Constrained center.\n   * @api\n   */\n  View.prototype.constrainCenter = function constrainCenter (center) {\n    return this.constraints_.center(center);\n  };\n\n  /**\n   * Get the constrained resolution of this view.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @param {number=} opt_direction Direction. Default is `0`.\n   * @return {number|undefined} Constrained resolution.\n   * @api\n   */\n  View.prototype.constrainResolution = function constrainResolution (resolution, opt_delta, opt_direction) {\n    var delta = opt_delta || 0;\n    var direction = opt_direction || 0;\n    return this.constraints_.resolution(resolution, delta, direction);\n  };\n\n  /**\n   * Get the constrained rotation of this view.\n   * @param {number|undefined} rotation Rotation.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @return {number|undefined} Constrained rotation.\n   * @api\n   */\n  View.prototype.constrainRotation = function constrainRotation (rotation, opt_delta) {\n    var delta = opt_delta || 0;\n    return this.constraints_.rotation(rotation, delta);\n  };\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getCenter = function getCenter () {\n    return (\n      /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER))\n    );\n  };\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  View.prototype.getConstraints = function getConstraints () {\n    return this.constraints_;\n  };\n\n  /**\n   * @param {Array<number>=} opt_hints Destination array.\n   * @return {Array<number>} Hint.\n   */\n  View.prototype.getHints = function getHints (opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  };\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n   * first map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  View.prototype.calculateExtent = function calculateExtent (opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n    assert(center, 1); // The view center is not defined\n    var resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    var rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  };\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  View.prototype.getMaxResolution = function getMaxResolution () {\n    return this.maxResolution_;\n  };\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  View.prototype.getMinResolution = function getMinResolution () {\n    return this.minResolution_;\n  };\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  View.prototype.getMaxZoom = function getMaxZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n  };\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  View.prototype.setMaxZoom = function setMaxZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  };\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  View.prototype.getMinZoom = function getMinZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n  };\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  View.prototype.setMinZoom = function setMinZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  };\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  View.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getResolution = function getResolution () {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  };\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  View.prototype.getResolutions = function getResolutions () {\n    return this.resolutions_;\n  };\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  View.prototype.getResolutionForExtent = function getResolutionForExtent (extent, opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var xResolution = getWidth(extent) / size[0];\n    var yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  };\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  View.prototype.getResolutionForValueFunction = function getResolutionForValueFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function(value) {\n        var resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      });\n  };\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.getRotation = function getRotation () {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  };\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  View.prototype.getValueForResolutionFunction = function getValueForResolutionFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function(resolution) {\n        var value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n        return value;\n      });\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio for center rounding.\n   * @return {State} View state.\n   */\n  View.prototype.getState = function getState (pixelRatio) {\n    var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n    var projection = this.getProjection();\n    var resolution = /** @type {number} */ (this.getResolution());\n    var pixelResolution = resolution / pixelRatio;\n    var rotation = this.getRotation();\n    return (\n      /** @type {State} */ ({\n        center: [\n          Math.round(center[0] / pixelResolution) * pixelResolution,\n          Math.round(center[1] / pixelResolution) * pixelResolution\n        ],\n        projection: projection !== undefined ? projection : null,\n        resolution: resolution,\n        rotation: rotation,\n        zoom: this.getZoom()\n      })\n    );\n  };\n\n  /**\n   * Get the current zoom level.  If you configured your view with a resolutions\n   * array (this is rare), this method may return non-integer zoom levels (so\n   * the zoom level is not safe to use as an index into a resolutions array).\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  View.prototype.getZoom = function getZoom () {\n    var zoom;\n    var resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  };\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  View.prototype.getZoomForResolution = function getZoomForResolution (resolution) {\n    var offset = this.minZoom_ || 0;\n    var max, zoomFactor;\n    if (this.resolutions_) {\n      var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  };\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  View.prototype.getResolutionForZoom = function getResolutionForZoom (zoom) {\n    return /** @type {number} */ (this.constrainResolution(\n      this.maxResolution_, zoom - this.minZoom_, 0));\n  };\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions=} opt_options Options.\n   * @api\n   */\n  View.prototype.fit = function fit (geometryOrExtent, opt_options) {\n    var options = opt_options || {};\n    var size = options.size;\n    if (!size) {\n      size = this.getSizeFromViewport_();\n    }\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    var geometry;\n    assert(Array.isArray(geometryOrExtent) || typeof /** @type {?} */ (geometryOrExtent).getSimplifiedGeometry === 'function',\n      24); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent),\n        25); // Cannot fit empty extent provided as `geometry`\n      geometry = polygonFromExtent(geometryOrExtent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      geometryOrExtent = geometryOrExtent.getExtent();\n      geometry = polygonFromExtent(geometryOrExtent);\n      geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n    } else {\n      geometry = geometryOrExtent;\n    }\n\n    var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    var constrainResolution = options.constrainResolution !== undefined ?\n      options.constrainResolution : true;\n    var nearest = options.nearest !== undefined ? options.nearest : false;\n    var minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.constrainResolution(\n        this.maxResolution_, options.maxZoom - this.minZoom_, 0);\n    } else {\n      minResolution = 0;\n    }\n    var coords = geometry.getFlatCoordinates();\n\n    // calculate rotated extent\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var minRotX = +Infinity;\n    var minRotY = +Infinity;\n    var maxRotX = -Infinity;\n    var maxRotY = -Infinity;\n    var stride = geometry.getStride();\n    for (var i = 0, ii = coords.length; i < ii; i += stride) {\n      var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n\n    // calculate resolution\n    var resolution = this.getResolutionForExtent(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n    resolution = isNaN(resolution) ? minResolution :\n      Math.max(resolution, minResolution);\n    if (constrainResolution) {\n      var constrainedResolution = this.constrainResolution(resolution, 0, 0);\n      if (!nearest && constrainedResolution < resolution) {\n        constrainedResolution = this.constrainResolution(\n          constrainedResolution, -1, 0);\n      }\n      resolution = constrainedResolution;\n    }\n\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerRotX = (minRotX + maxRotX) / 2;\n    var centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n    centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n    var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    var center = [centerX, centerY];\n    var callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animate({\n        resolution: resolution,\n        center: center,\n        duration: options.duration,\n        easing: options.easing\n      }, callback);\n    } else {\n      this.setResolution(resolution);\n      this.setCenter(center);\n      animationCallback(callback, true);\n    }\n  };\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  View.prototype.centerOn = function centerOn (coordinate, size, position) {\n    // calculate rotated position\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    var resolution = this.getResolution();\n    rotX += (size[0] / 2 - position[0]) * resolution;\n    rotY += (position[1] - size[1] / 2) * resolution;\n\n    // go back to original angle\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerX = rotX * cosAngle - rotY * sinAngle;\n    var centerY = rotY * cosAngle + rotX * sinAngle;\n\n    this.setCenter([centerX, centerY]);\n  };\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  View.prototype.isDef = function isDef () {\n    return !!this.getCenter() && this.getResolution() !== undefined;\n  };\n\n  /**\n   * Rotate the view around a given coordinate.\n   * @param {number} rotation New rotation value for the view.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n   * @api\n   */\n  View.prototype.rotate = function rotate (rotation, opt_anchor) {\n    if (opt_anchor !== undefined) {\n      var center = this.calculateCenterRotate(rotation, opt_anchor);\n      this.setCenter(center);\n    }\n    this.setRotation(rotation);\n  };\n\n  /**\n   * Set the center of the current view.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setCenter = function setCenter (center) {\n    this.set(ViewProperty.CENTER, center);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * @param {ViewHint} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  View.prototype.setHint = function setHint (hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  };\n\n  /**\n   * Set the resolution for this view.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setResolution = function setResolution (resolution) {\n    this.set(ViewProperty.RESOLUTION, resolution);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Set the rotation for this view.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.setRotation = function setRotation (rotation) {\n    this.set(ViewProperty.ROTATION, rotation);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Zoom to a specific zoom level.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  View.prototype.setZoom = function setZoom (zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  };\n\n  return View;\n}(BaseObject));\n\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function() {\n    callback(returnValue);\n  }, 0);\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    return createExtent(options.extent);\n  } else {\n    return centerNone;\n  }\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  var resolutionConstraint;\n  var maxResolution;\n  var minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  var defaultMaxZoom = 28;\n  var defaultZoomFactor = 2;\n\n  var minZoom = options.minZoom !== undefined ?\n    options.minZoom : DEFAULT_MIN_ZOOM;\n\n  var maxZoom = options.maxZoom !== undefined ?\n    options.maxZoom : defaultMaxZoom;\n\n  var zoomFactor = options.zoomFactor !== undefined ?\n    options.zoomFactor : defaultZoomFactor;\n\n  if (options.resolutions !== undefined) {\n    var resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution = resolutions[maxZoom] !== undefined ?\n      resolutions[maxZoom] : resolutions[resolutions.length - 1];\n    resolutionConstraint = createSnapToResolutions(\n      resolutions);\n  } else {\n    // calculate the default min and max resolution\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var extent = projection.getExtent();\n    var size = !extent ?\n      // use an extent that can fit the whole world if need be\n      360 * METERS_PER_UNIT[Units.DEGREES] /\n            projection.getMetersPerUnit() :\n      Math.max(getWidth(extent), getHeight(extent));\n\n    var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(\n      defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    var defaultMinResolution = defaultMaxResolution / Math.pow(\n      defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom = minZoom + Math.floor(\n      Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    resolutionConstraint = createSnapToPower(\n      zoomFactor, maxResolution, maxZoom - minZoom);\n  }\n  return {constraint: resolutionConstraint, maxResolution: maxResolution,\n    minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor};\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  var enableRotation = options.enableRotation !== undefined ?\n    options.enableRotation : true;\n  if (enableRotation) {\n    var constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\nexport default View;\n\n//# sourceMappingURL=View.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number, number): (number|undefined)} Type\n */\n\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var z = linearFindNearest(resolutions, resolution, direction);\n        z = clamp(z + delta, 0, resolutions.length - 1);\n        var index = Math.floor(z);\n        if (z != index && index < resolutions.length - 1) {\n          var power = resolutions[index] / resolutions[index + 1];\n          return resolutions[index] / Math.pow(power, z - index);\n        } else {\n          return resolutions[index];\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_maxLevel Maximum level.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_maxLevel) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var offset = -direction / 2 + 0.5;\n        var oldLevel = Math.floor(\n          Math.log(maxResolution / resolution) / Math.log(power) + offset);\n        var newLevel = Math.max(oldLevel + delta, 0);\n        if (opt_maxLevel !== undefined) {\n          newLevel = Math.min(newLevel, opt_maxLevel);\n        }\n        return maxResolution / Math.pow(power, newLevel);\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/dom\n */\n\n\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n  var canvas = /** @type {HTMLCanvasElement} */ (document.createElement('canvas'));\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  var width = element.offsetWidth;\n  var style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  var height = element.offsetHeight;\n  var style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  var parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  SOURCE: 'source'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/layer/Base\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /*@__PURE__*/(function (BaseObject) {\n  function BaseLayer(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @type {Object<string, *>}\n     */\n    var properties = assign({}, options);\n    properties[LayerProperty.OPACITY] =\n       options.opacity !== undefined ? options.opacity : 1;\n    properties[LayerProperty.VISIBLE] =\n       options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n       options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n       options.minResolution !== undefined ? options.minResolution : 0;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n\n    /**\n     * The layer type.\n     * @type {import(\"../LayerType.js\").default}\n     * @protected;\n     */\n    this.type;\n\n  }\n\n  if ( BaseObject ) BaseLayer.__proto__ = BaseObject;\n  BaseLayer.prototype = Object.create( BaseObject && BaseObject.prototype );\n  BaseLayer.prototype.constructor = BaseLayer;\n\n  /**\n   * Get the layer type (used when creating a layer renderer).\n   * @return {import(\"../LayerType.js\").default} The layer type.\n   */\n  BaseLayer.prototype.getType = function getType () {\n    return this.type;\n  };\n\n  /**\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  BaseLayer.prototype.getLayerState = function getLayerState () {\n    /** @type {import(\"./Layer.js\").State} */\n    var state = this.state_ || /** @type {?} */ ({\n      layer: this,\n      managed: true\n    });\n    state.opacity = clamp(this.getOpacity(), 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = this.getZIndex() || 0;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    this.state_ = state;\n\n    return state;\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  BaseLayer.prototype.getLayersArray = function getLayersArray (opt_array) {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  BaseLayer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    return abstract();\n  };\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getExtent = function getExtent () {\n    return (\n      /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT))\n    );\n  };\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getMaxResolution = function getMaxResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  };\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getMinResolution = function getMinResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  };\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getOpacity = function getOpacity () {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  };\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  BaseLayer.prototype.getSourceState = function getSourceState () {\n    return abstract();\n  };\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getVisible = function getVisible () {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  };\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getZIndex = function getZIndex () {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  };\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setExtent = function setExtent (extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  };\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setMaxResolution = function setMaxResolution (maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  };\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setMinResolution = function setMinResolution (minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  };\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setOpacity = function setOpacity (opacity) {\n    this.set(LayerProperty.OPACITY, opacity);\n  };\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setVisible = function setVisible (visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  };\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setZIndex = function setZIndex (zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  };\n\n  return BaseLayer;\n}(BaseObject));\n\n\nexport default BaseLayer;\n\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error'\n};\n\n//# sourceMappingURL=State.js.map","/**\n * @module ol/layer/Group\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getIntersection} from '../extent.js';\nimport BaseLayer from './Base.js';\nimport {assign, clear} from '../obj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LAYERS: 'layers'\n};\n\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /*@__PURE__*/(function (BaseLayer) {\n  function LayerGroup(opt_options) {\n\n    var options = opt_options || {};\n    var baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    var layers = options.layers;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    listen(this,\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_, this);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof /** @type {?} */ (layers).getArray === 'function',\n          43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n\n  }\n\n  if ( BaseLayer ) LayerGroup.__proto__ = BaseLayer;\n  LayerGroup.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  LayerGroup.prototype.constructor = LayerGroup;\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayerChange_ = function handleLayerChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayersChanged_ = function handleLayersChanged_ () {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    var layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (var id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    var layersArray = layers.getArray();\n    for (var i = 0, ii = layersArray.length; i < ii; i++) {\n      var layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n      ];\n    }\n\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersAdd_ = function handleLayersAdd_ (collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    this.listenerKeys_[getUid(layer)] = [\n      listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n    ];\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersRemove_ = function handleLayersRemove_ (collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    var key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  };\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.getLayers = function getLayers () {\n    return (\n      /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS))\n    );\n  };\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.setLayers = function setLayers (layers) {\n    this.set(Property.LAYERS, layers);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function(layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states !== undefined ? opt_states : [];\n\n    var pos = states.length;\n\n    this.getLayers().forEach(function(layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    var ownLayerState = this.getLayerState();\n    for (var i = pos, ii = states.length; i < ii; i++) {\n      var layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution, ownLayerState.maxResolution);\n      layerState.minResolution = Math.max(\n        layerState.minResolution, ownLayerState.minResolution);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getSourceState = function getSourceState () {\n    return SourceState.READY;\n  };\n\n  return LayerGroup;\n}(BaseLayer));\n\n\nexport default LayerGroup;\n\n//# sourceMappingURL=Group.js.map","/**\n * @module ol/size\n */\n\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n    }\n    return opt_size;\n  }\n}\n\n//# sourceMappingURL=size.js.map","/**\n * @module ol/PluggableMap\n */\nimport {getUid} from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport RenderEventType from './render/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {assert} from './asserts.js';\nimport {removeNode} from './dom.js';\nimport {listen, unlistenByKey, unlisten} from './events.js';\nimport {stopPropagation} from './events/Event.js';\nimport EventType from './events/EventType.js';\nimport {createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, TOUCH} from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport {hasArea} from './size.js';\nimport {DROP} from './structs/PriorityQueue.js';\nimport {create as createTransform, apply as applyTransform} from './transform.js';\n\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {import(\"./coordinate.js\").Coordinate} focus\n * @property {number} index\n * @property {Object<string, import(\"./layer/Layer.js\").State>} layerStates\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {!Object<string, boolean>} skippedFeatureUids\n * @property {TileQueue} tileQueue\n * @property {Object<string, Object<string, import(\"./TileRange.js\").default>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): boolean} PostRenderFunction\n */\n\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} layerFilter Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {boolean} [loadTilesWhileAnimating=false] When set to `true`, tiles\n * will be loaded during animations. This may improve the user experience, but\n * can also make animations stutter on devices with slow memory.\n * @property {boolean} [loadTilesWhileInteracting=false] When set to `true`,\n * tiles will be loaded while interacting with the map. This may improve the\n * user experience, but can also make map panning and zooming choppy on devices\n * with slow memory.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @fires module:ol/render/Event~RenderEvent#rendercomplete\n * @api\n */\nvar PluggableMap = /*@__PURE__*/(function (BaseObject) {\n  function PluggableMap(options) {\n\n    BaseObject.call(this);\n\n    var optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileAnimating_ =\n        options.loadTilesWhileAnimating !== undefined ?\n          options.loadTilesWhileAnimating : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileInteracting_ =\n        options.loadTilesWhileInteracting !== undefined ?\n          options.loadTilesWhileInteracting : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio !== undefined ?\n      options.pixelRatio : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = function() {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_.call(this, Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n    // prevent page zoom on IE >= 10 browsers\n    this.viewport_.style.msTouchAction = 'none';\n    this.viewport_.style.touchAction = 'none';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    var overlayEvents = [\n      EventType.CLICK,\n      EventType.DBLCLICK,\n      EventType.MOUSEDOWN,\n      EventType.TOUCHSTART,\n      EventType.MSPOINTERDOWN,\n      MapBrowserEventType.POINTERDOWN,\n      EventType.MOUSEWHEEL,\n      EventType.WHEEL\n    ];\n    for (var i = 0, ii = overlayEvents.length; i < ii; ++i) {\n      listen(this.overlayContainerStopEvent_, overlayEvents[i], stopPropagation);\n    }\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, options.moveTolerance);\n    for (var key in MapBrowserEventType) {\n      listen(this.mapBrowserEventHandler_, MapBrowserEventType[key],\n        this.handleMapBrowserEvent, this);\n    }\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    listen(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = this.createRenderer();\n\n    /**\n     * @type {function(Event)|undefined}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.focus_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this));\n\n    /**\n     * Uids of features to skip at rendering time.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.skippedFeatureUids_ = {};\n\n    listen(\n      this, getChangeEventType(MapProperty.LAYERGROUP),\n      this.handleLayerGroupChanged_, this);\n    listen(this, getChangeEventType(MapProperty.VIEW),\n      this.handleViewChanged_, this);\n    listen(this, getChangeEventType(MapProperty.SIZE),\n      this.handleSizeChanged_, this);\n    listen(this, getChangeEventType(MapProperty.TARGET),\n      this.handleTargetChanged_, this);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      (function(control) {\n        control.setMap(this);\n      }).bind(this));\n\n    listen(this.controls, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.controls, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      (function(interaction) {\n        interaction.setMap(this);\n      }).bind(this));\n\n    listen(this.interactions, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.interactions, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    listen(this.overlays_, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        this.addOverlayInternal_(/** @type {import(\"./Overlay.js\").default} */ (event.element));\n      }, this);\n\n    listen(this.overlays_, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n        var id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }, this);\n\n  }\n\n  if ( BaseObject ) PluggableMap.__proto__ = BaseObject;\n  PluggableMap.prototype = Object.create( BaseObject && BaseObject.prototype );\n  PluggableMap.prototype.constructor = PluggableMap;\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  PluggableMap.prototype.createRenderer = function createRenderer () {\n    throw new Error('Use a map type that has a createRenderer method');\n  };\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  PluggableMap.prototype.addControl = function addControl (control) {\n    this.getControls().push(control);\n  };\n\n  /**\n   * Add the given interaction to the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  PluggableMap.prototype.addInteraction = function addInteraction (interaction) {\n    this.getInteractions().push(interaction);\n  };\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  PluggableMap.prototype.addLayer = function addLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  };\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  PluggableMap.prototype.addOverlay = function addOverlay (overlay) {\n    this.getOverlays().push(overlay);\n  };\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  PluggableMap.prototype.addOverlayInternal_ = function addOverlayInternal_ (overlay) {\n    var id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  };\n\n  /**\n   *\n   * @inheritDoc\n   */\n  PluggableMap.prototype.disposeInternal = function disposeInternal () {\n    this.mapBrowserEventHandler_.dispose();\n    unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n    if (this.handleResize_ !== undefined) {\n      removeEventListener(EventType.RESIZE, this.handleResize_, false);\n      this.handleResize_ = undefined;\n    }\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n      this.animationDelayKey_ = undefined;\n    }\n    this.setTarget(null);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\n   *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachFeatureAtPixel = function forEachFeatureAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options :\n      /** @type {AtPixelOptions} */ ({});\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = opt_options.layerFilter !== undefined ?\n      opt_options.layerFilter : TRUE;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, callback, null,\n      layerFilter, null);\n  };\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * `null` if none were found.\n   * @api\n   */\n  PluggableMap.prototype.getFeaturesAtPixel = function getFeaturesAtPixel (pixel, opt_options) {\n    var features = null;\n    this.forEachFeatureAtPixel(pixel, function(feature) {\n      if (!features) {\n        features = [];\n      }\n      features.push(feature);\n    }, opt_options);\n    return features;\n  };\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions=} opt_options Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var options = opt_options || /** @type {AtPixelOptions} */ ({});\n    var hitTolerance = options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel, this.frameState_, hitTolerance, callback, null, layerFilter, null);\n  };\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @template U\n   * @api\n   */\n  PluggableMap.prototype.hasFeatureAtPixel = function hasFeatureAtPixel (pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options :\n      /** @type {AtPixelOptions} */ ({});\n    var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, layerFilter, null);\n  };\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {Event} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  PluggableMap.prototype.getEventCoordinate = function getEventCoordinate (event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  };\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {Event|TouchEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  PluggableMap.prototype.getEventPixel = function getEventPixel (event) {\n    var viewportPosition = this.viewport_.getBoundingClientRect();\n    var eventPosition = 'changedTouches' in event ?\n      /** @type {TouchEvent} */ (event).changedTouches[0] :\n      /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top\n    ];\n  };\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getTarget = function getTarget () {\n    return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n  };\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  PluggableMap.prototype.getTargetElement = function getTargetElement () {\n    var target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string' ? document.getElementById(target) : target;\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  PluggableMap.prototype.getCoordinateFromPixel = function getCoordinateFromPixel (pixel) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n    }\n  };\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  PluggableMap.prototype.getControls = function getControls () {\n    return this.controls;\n  };\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  PluggableMap.prototype.getOverlays = function getOverlays () {\n    return this.overlays_;\n  };\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  PluggableMap.prototype.getOverlayById = function getOverlayById (id) {\n    var overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  };\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  PluggableMap.prototype.getInteractions = function getInteractions () {\n    return this.interactions;\n  };\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getLayerGroup = function getLayerGroup () {\n    return (\n      /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP))\n    );\n  };\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  PluggableMap.prototype.getLayers = function getLayers () {\n    var layers = this.getLayerGroup().getLayers();\n    return layers;\n  };\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.getPixelFromCoordinate = function getPixelFromCoordinate (coordinate) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n    }\n  };\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  PluggableMap.prototype.getRenderer = function getRenderer () {\n    return this.renderer_;\n  };\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getSize = function getSize () {\n    return (\n      /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE))\n    );\n  };\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getView = function getView () {\n    return (\n      /** @type {View} */ (this.get(MapProperty.VIEW))\n    );\n  };\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  PluggableMap.prototype.getViewport = function getViewport () {\n    return this.viewport_;\n  };\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  PluggableMap.prototype.getOverlayContainer = function getOverlayContainer () {\n    return this.overlayContainer_;\n  };\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  PluggableMap.prototype.getOverlayContainerStopEvent = function getOverlayContainerStopEvent () {\n    return this.overlayContainerStopEvent_;\n  };\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  PluggableMap.prototype.getTilePriority = function getTilePriority (tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    var frameState = this.frameState_;\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n      return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n      return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels\n    // between the center of the tile and the focus.  The factor of 65536 means\n    // that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    var deltaX = tileCenter[0] - frameState.focus[0];\n    var deltaY = tileCenter[1] - frameState.focus[1];\n    return 65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n  };\n\n  /**\n   * @param {Event} browserEvent Browser event.\n   * @param {string=} opt_type Type.\n   */\n  PluggableMap.prototype.handleBrowserEvent = function handleBrowserEvent (browserEvent, opt_type) {\n    var type = opt_type || browserEvent.type;\n    var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  };\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  PluggableMap.prototype.handleMapBrowserEvent = function handleMapBrowserEvent (mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    this.focus_ = mapBrowserEvent.coordinate;\n    mapBrowserEvent.frameState = this.frameState_;\n    var interactionsArray = this.getInteractions().getArray();\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      for (var i = interactionsArray.length - 1; i >= 0; i--) {\n        var interaction = interactionsArray[i];\n        if (!interaction.getActive()) {\n          continue;\n        }\n        var cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont) {\n          break;\n        }\n      }\n    }\n  };\n\n  /**\n   * @protected\n   */\n  PluggableMap.prototype.handlePostRender = function handlePostRender () {\n\n    var frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    var tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      var maxTotalLoading = this.maxTilesLoading_;\n      var maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        var hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING]) {\n          maxTotalLoading = this.loadTilesWhileAnimating_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n        if (hints[ViewHint.INTERACTING]) {\n          maxTotalLoading = this.loadTilesWhileInteracting_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n    if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate &&\n        !this.tileQueue_.getTilesLoading() && !getLoading(this.getLayers().getArray())) {\n      this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n    }\n\n    var postRenderFunctions = this.postRenderFunctions_;\n    for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleSizeChanged_ = function handleSizeChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTargetChanged_ = function handleTargetChanged_ () {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    var targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.keyHandlerKeys_) {\n      for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n    }\n\n    if (!targetElement) {\n      this.renderer_.removeLayerRenderers();\n      removeNode(this.viewport_);\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n\n      var keyboardEventTarget = !this.keyboardEventTarget_ ?\n        targetElement : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n        listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTileChange_ = function handleTileChange_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewPropertyChanged_ = function handleViewPropertyChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewChanged_ = function handleViewChanged_ () {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    var view = this.getView();\n    if (view) {\n      this.viewport_.setAttribute('data-view', getUid(view));\n      this.viewPropertyListenerKey_ = listen(\n        view, ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_, this);\n      this.viewChangeListenerKey_ = listen(\n        view, EventType.CHANGE,\n        this.handleViewPropertyChanged_, this);\n    }\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleLayerGroupChanged_ = function handleLayerGroupChanged_ () {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    var layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(\n          layerGroup, ObjectEventType.PROPERTYCHANGE,\n          this.render, this),\n        listen(\n          layerGroup, EventType.CHANGE,\n          this.render, this)\n      ];\n    }\n    this.render();\n  };\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  PluggableMap.prototype.isRendered = function isRendered () {\n    return !!this.frameState_;\n  };\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  PluggableMap.prototype.renderSync = function renderSync () {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  };\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  PluggableMap.prototype.render = function render () {\n    if (this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  };\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeControl = function removeControl (control) {\n    return this.getControls().remove(control);\n  };\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeInteraction = function removeInteraction (interaction) {\n    return this.getInteractions().remove(interaction);\n  };\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeLayer = function removeLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  };\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeOverlay = function removeOverlay (overlay) {\n    return this.getOverlays().remove(overlay);\n  };\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  PluggableMap.prototype.renderFrame_ = function renderFrame_ (time) {\n    var viewState;\n\n    var size = this.getSize();\n    var view = this.getView();\n    var extent = createEmpty();\n    var previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    var frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n      var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n      var layerStates = {};\n      for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n        layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n      }\n      viewState = view.getState(this.pixelRatio_);\n      frameState = /** @type {FrameState} */ ({\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        extent: extent,\n        focus: this.focus_ ? this.focus_ : viewState.center,\n        index: this.frameIndex_++,\n        layerStates: layerStates,\n        layerStatesArray: layerStatesArray,\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        skippedFeatureUids: this.skippedFeatureUids_,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {}\n      });\n    }\n\n    if (frameState) {\n      frameState.extent = getForViewAndSize(viewState.center,\n        viewState.resolution, viewState.rotation, frameState.size, extent);\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n\n      if (previousFrameState) {\n        var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                    !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      var idle = this.previousExtent_ &&\n          !frameState.viewHints[ViewHint.ANIMATING] &&\n          !frameState.viewHints[ViewHint.INTERACTING] &&\n          !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    setTimeout(this.handlePostRender.bind(this), 0);\n\n  };\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setLayerGroup = function setLayerGroup (layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  };\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setSize = function setSize (size) {\n    this.set(MapProperty.SIZE, size);\n  };\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setTarget = function setTarget (target) {\n    this.set(MapProperty.TARGET, target);\n  };\n\n  /**\n   * Set the view for this map.\n   * @param {View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setView = function setView (view) {\n    this.set(MapProperty.VIEW, view);\n  };\n\n  /**\n   * @param {import(\"./Feature.js\").default} feature Feature.\n   */\n  PluggableMap.prototype.skipFeature = function skipFeature (feature) {\n    this.skippedFeatureUids_[getUid(feature)] = true;\n    this.render();\n  };\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.updateSize = function updateSize () {\n    var targetElement = this.getTargetElement();\n\n    if (!targetElement) {\n      this.setSize(undefined);\n    } else {\n      var computedStyle = getComputedStyle(targetElement);\n      this.setSize([\n        targetElement.offsetWidth -\n            parseFloat(computedStyle['borderLeftWidth']) -\n            parseFloat(computedStyle['paddingLeft']) -\n            parseFloat(computedStyle['paddingRight']) -\n            parseFloat(computedStyle['borderRightWidth']),\n        targetElement.offsetHeight -\n            parseFloat(computedStyle['borderTopWidth']) -\n            parseFloat(computedStyle['paddingTop']) -\n            parseFloat(computedStyle['paddingBottom']) -\n            parseFloat(computedStyle['borderBottomWidth'])\n      ]);\n    }\n  };\n\n  /**\n   * @param {import(\"./Feature.js\").default} feature Feature.\n   */\n  PluggableMap.prototype.unskipFeature = function unskipFeature (feature) {\n    delete this.skippedFeatureUids_[getUid(feature)];\n    this.render();\n  };\n\n  return PluggableMap;\n}(BaseObject));\n\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n\n  /**\n   * @type {HTMLElement|Document}\n   */\n  var keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n      document.getElementById(options.keyboardEventTarget) :\n      options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  var values = {};\n\n  var layerGroup = options.layers && typeof /** @type {?} */ (options.layers).getLayers === 'function' ?\n    /** @type {LayerGroup} */ (options.layers) : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] = options.view !== undefined ?\n    options.view : new View();\n\n  var controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.controls).getArray === 'function',\n        47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  var interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.interactions).getArray === 'function',\n        48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  var overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.overlays).getArray === 'function',\n        49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values\n  };\n\n}\nexport default PluggableMap;\n\n/**\n * @param  {Array<import(\"./layer/Base.js\").default>} layers Layers.\n * @return {boolean} Layers have sources that are still loading.\n */\nfunction getLoading(layers) {\n  for (var i = 0, ii = layers.length; i < ii; ++i) {\n    var layer = layers[i];\n    if (typeof /** @type {?} */ (layer).getLayers === 'function') {\n      return getLoading(/** @type {LayerGroup} */ (layer).getLayers().getArray());\n    } else {\n      var source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        layer).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\n//# sourceMappingURL=PluggableMap.js.map","/**\n * @module ol/control/Control\n */\nimport {VOID} from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {removeNode} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /*@__PURE__*/(function (BaseObject) {\n  function Control(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = options.element ? options.element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    /**\n     * @type {function(import(\"../MapEvent.js\").default)}\n     */\n    this.render = options.render ? options.render : VOID;\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n\n  }\n\n  if ( BaseObject ) Control.__proto__ = BaseObject;\n  Control.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Control.prototype.constructor = Control;\n\n  /**\n   * @inheritDoc\n   */\n  Control.prototype.disposeInternal = function disposeInternal () {\n    removeNode(this.element);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  Control.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  Control.prototype.setMap = function setMap (map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      var target = this.target_ ?\n        this.target_ : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(listen(map,\n          MapEventType.POSTRENDER, this.render, this));\n      }\n      map.render();\n    }\n  };\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  Control.prototype.setTarget = function setTarget (target) {\n    this.target_ = typeof target === 'string' ?\n      document.getElementById(target) :\n      target;\n  };\n\n  return Control;\n}(BaseObject));\n\n\nexport default Control;\n\n//# sourceMappingURL=Control.js.map","/**\n * @module ol/css\n */\n\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object<string>} The font families (or null if the input spec is invalid).\n */\nexport var getFontFamilies = (function() {\n  var style;\n  var cache = {};\n  return function(font) {\n    if (!style) {\n      style = document.createElement('div').style;\n    }\n    if (!(font in cache)) {\n      style.font = font;\n      var family = style.fontFamily;\n      style.font = '';\n      if (!family) {\n        return null;\n      }\n      cache[font] = family.split(/,\\s?/);\n    }\n    return cache[font];\n  };\n})();\n\n//# sourceMappingURL=css.js.map","/**\n * @module ol/layer/Layer\n */\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {getChangeEventType} from '../Object.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Base.js\").default} layer\n * @property {number} opacity\n * @property {SourceState} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n */\nvar Layer = /*@__PURE__*/(function (BaseLayer) {\n  function Layer(options) {\n\n    var baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    listen(this,\n      getChangeEventType(LayerProperty.SOURCE),\n      this.handleSourcePropertyChange_, this);\n\n    var source = options.source ? options.source : null;\n    this.setSource(source);\n  }\n\n  if ( BaseLayer ) Layer.__proto__ = BaseLayer;\n  Layer.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  Layer.prototype.constructor = Layer;\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  };\n\n  /**\n   * Get the layer source.\n   * @return {import(\"../source/Source.js\").default} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  Layer.prototype.getSource = function getSource () {\n    var source = this.get(LayerProperty.SOURCE);\n    return (\n      /** @type {import(\"../source/Source.js\").default} */ (source) || null\n    );\n  };\n\n  /**\n    * @inheritDoc\n    */\n  Layer.prototype.getSourceState = function getSourceState () {\n    var source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourceChange_ = function handleSourceChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourcePropertyChange_ = function handleSourcePropertyChange_ () {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    var source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(source,\n        EventType.CHANGE, this.handleSourceChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  Layer.prototype.setMap = function setMap (map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function(evt) {\n        var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n        var layerState = this.getLayerState();\n        layerState.managed = false;\n        if (this.getZIndex() === undefined) {\n          layerState.zIndex = Infinity;\n        }\n        renderEvent.frameState.layerStatesArray.push(layerState);\n        renderEvent.frameState.layerStates[getUid(this)] = layerState;\n      }, this);\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the layer source.\n   * @param {import(\"../source/Source.js\").default} source The layer source.\n   * @observable\n   * @api\n   */\n  Layer.prototype.setSource = function setSource (source) {\n    this.set(LayerProperty.SOURCE, source);\n  };\n\n  return Layer;\n}(BaseLayer));\n\n\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n  return layerState.visible && resolution >= layerState.minResolution &&\n      resolution < layerState.maxResolution;\n}\n\n\nexport default Layer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /*@__PURE__*/(function (Control) {\n  function Attribution(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ = options.collapsible !== undefined ?\n      options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    var className = options.className !== undefined ? options.className : 'ol-attribution';\n\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    var label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n\n    var activeLabel = (this.collapsible_ && !this.collapsed_) ?\n      this.collapseLabel_ : this.label_;\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ulElement_);\n    element.appendChild(button);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n  }\n\n  if ( Control ) Attribution.__proto__ = Control;\n  Attribution.prototype = Object.create( Control && Control.prototype );\n  Attribution.prototype.constructor = Attribution;\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  Attribution.prototype.collectSourceAttributions_ = function collectSourceAttributions_ (frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    var lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    var visibleAttributions = [];\n\n    var layerStatesArray = frameState.layerStatesArray;\n    var resolution = frameState.viewState.resolution;\n    for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      if (!visibleAtResolution(layerState, resolution)) {\n        continue;\n      }\n\n      var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n      if (!source) {\n        continue;\n      }\n\n      var attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      var attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      if (!this.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\n        this.setCollapsible(false);\n      }\n\n      if (Array.isArray(attributions)) {\n        for (var j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    return visibleAttributions;\n  };\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  Attribution.prototype.updateElement_ = function updateElement_ (frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var attributions = this.collectSourceAttributions_(frameState);\n\n    var visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (var i = 0, ii = attributions.length; i < ii; ++i) {\n      var element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  };\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Attribution.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleToggle_();\n  };\n\n  /**\n   * @private\n   */\n  Attribution.prototype.handleToggle_ = function handleToggle_ () {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n  };\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.getCollapsible = function getCollapsible () {\n    return this.collapsible_;\n  };\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.setCollapsible = function setCollapsible (collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  };\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.setCollapsed = function setCollapsed (collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  };\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.getCollapsed = function getCollapsed () {\n    return this.collapsed_;\n  };\n\n  return Attribution;\n}(Control));\n\n\n/**\n * Update the attribution element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Attribution}\n * @api\n */\nexport function render(mapEvent) {\n  this.updateElement_(mapEvent.frameState);\n}\n\n\nexport default Attribution;\n\n//# sourceMappingURL=Attribution.js.map","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /*@__PURE__*/(function (Control) {\n  function Rotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-rotate';\n\n    var label = options.label !== undefined ? options.label : '\\u21E7';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = 'ol-compass';\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add('ol-compass');\n    }\n\n    var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    var button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n\n  }\n\n  if ( Control ) Rotate.__proto__ = Control;\n  Rotate.prototype = Object.create( Control && Control.prototype );\n  Rotate.prototype.constructor = Rotate;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Rotate.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  Rotate.prototype.resetNorth_ = function resetNorth_ () {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    if (view.getRotation() !== undefined) {\n      if (this.duration_ > 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  };\n\n  return Rotate;\n}(Control));\n\n\n/**\n * Update the rotate control element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Rotate}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    return;\n  }\n  var rotation = frameState.viewState.rotation;\n  if (rotation != this.rotation_) {\n    var transform = 'rotate(' + rotation + 'rad)';\n    if (this.autoHide_) {\n      var contains = this.element.classList.contains(CLASS_HIDDEN);\n      if (!contains && rotation === 0) {\n        this.element.classList.add(CLASS_HIDDEN);\n      } else if (contains && rotation !== 0) {\n        this.element.classList.remove(CLASS_HIDDEN);\n      }\n    }\n    this.label_.style.msTransform = transform;\n    this.label_.style.webkitTransform = transform;\n    this.label_.style.transform = transform;\n  }\n  this.rotation_ = rotation;\n}\n\nexport default Rotate;\n\n//# sourceMappingURL=Rotate.js.map","/**\n * @module ol/control/Zoom\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /*@__PURE__*/(function (Control) {\n  function Zoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-zoom';\n\n    var delta = options.delta !== undefined ? options.delta : 1;\n\n    var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n      options.zoomInTipLabel : 'Zoom in';\n    var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n      options.zoomOutTipLabel : 'Zoom out';\n\n    var inElement = document.createElement('button');\n    inElement.className = className + '-in';\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel\n    );\n\n    listen(inElement, EventType.CLICK, this.handleClick_.bind(this, delta));\n\n    var outElement = document.createElement('button');\n    outElement.className = className + '-out';\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel\n    );\n\n    listen(outElement, EventType.CLICK, this.handleClick_.bind(this, -delta));\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Control ) Zoom.__proto__ = Control;\n  Zoom.prototype = Object.create( Control && Control.prototype );\n  Zoom.prototype.constructor = Zoom;\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Zoom.prototype.handleClick_ = function handleClick_ (delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  };\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  Zoom.prototype.zoomByDelta_ = function zoomByDelta_ (delta) {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    var currentResolution = view.getResolution();\n    if (currentResolution) {\n      var newResolution = view.constrainResolution(currentResolution, delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          resolution: newResolution,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setResolution(newResolution);\n      }\n    }\n  };\n\n  return Zoom;\n}(Control));\n\n\nexport default Zoom;\n\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = function Kinetic(decay, minVelocity, delay) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.decay_ = decay;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minVelocity_ = minVelocity;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delay_ = delay;\n\n  /**\n   * @private\n   * @type {Array<number>}\n   */\n  this.points_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.initialVelocity_ = 0;\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nKinetic.prototype.begin = function begin () {\n  this.points_.length = 0;\n  this.angle_ = 0;\n  this.initialVelocity_ = 0;\n};\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n */\nKinetic.prototype.update = function update (x, y) {\n  this.points_.push(x, y, Date.now());\n};\n\n/**\n * @return {boolean} Whether we should do kinetic animation.\n */\nKinetic.prototype.end = function end () {\n  if (this.points_.length < 6) {\n    // at least 2 points are required (i.e. there must be at least 6 elements\n    // in the array)\n    return false;\n  }\n  var delay = Date.now() - this.delay_;\n  var lastIndex = this.points_.length - 3;\n  if (this.points_[lastIndex + 2] < delay) {\n    // the last tracked point is too old, which means that the user stopped\n    // panning before releasing the map\n    return false;\n  }\n\n  // get the first point which still falls into the delay time\n  var firstIndex = lastIndex - 3;\n  while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n    firstIndex -= 3;\n  }\n\n  var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n  // we don't want a duration of 0 (divide by zero)\n  // we also make sure the user panned for a duration of at least one frame\n  // (1/60s) to compute sane displacement values\n  if (duration < 1000 / 60) {\n    return false;\n  }\n\n  var dx = this.points_[lastIndex] - this.points_[firstIndex];\n  var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n  this.angle_ = Math.atan2(dy, dx);\n  this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n  return this.initialVelocity_ > this.minVelocity_;\n};\n\n/**\n * @return {number} Total distance travelled (pixels).\n */\nKinetic.prototype.getDistance = function getDistance () {\n  return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n};\n\n/**\n * @return {number} Angle of the kinetic panning animation (radians).\n */\nKinetic.prototype.getAngle = function getAngle () {\n  return this.angle_;\n};\n\nexport default Kinetic;\n\n//# sourceMappingURL=Kinetic.js.map","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from './Property.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return).\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /*@__PURE__*/(function (BaseObject) {\n  function Interaction(options) {\n    BaseObject.call(this);\n\n    if (options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  if ( BaseObject ) Interaction.__proto__ = BaseObject;\n  Interaction.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Interaction.prototype.constructor = Interaction;\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.getActive = function getActive () {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  };\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  Interaction.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  Interaction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    return true;\n  };\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.setActive = function setActive (active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  };\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  Interaction.prototype.setMap = function setMap (map) {\n    this.map_ = map;\n  };\n\n  return Interaction;\n}(BaseObject));\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  var currentCenter = view.getCenter();\n  if (currentCenter) {\n    var center = view.constrainCenter(\n      [currentCenter[0] + delta[0], currentCenter[1] + delta[1]]);\n    if (opt_duration) {\n      view.animate({\n        duration: opt_duration,\n        easing: linear,\n        center: center\n      });\n    } else {\n      view.setCenter(center);\n    }\n  }\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotate(view, rotation, opt_anchor, opt_duration) {\n  rotation = view.constrainRotation(rotation, 0);\n  rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration) {\n  if (rotation !== undefined) {\n    var currentRotation = view.getRotation();\n    var currentCenter = view.getCenter();\n    if (currentRotation !== undefined && currentCenter && opt_duration > 0) {\n      view.animate({\n        rotation: rotation,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      view.rotate(rotation, opt_anchor);\n    }\n  }\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n * @param {number=} opt_direction Zooming direction; > 0 indicates\n *     zooming out, in which case the constraints system will select\n *     the largest nearest resolution; < 0 indicates zooming in, in\n *     which case the constraints system will select the smallest\n *     nearest resolution; == 0 indicates that the zooming direction\n *     is unknown/not relevant, in which case the constraints system\n *     will select the nearest resolution. If not defined 0 is\n *     assumed.\n */\nexport function zoom(view, resolution, opt_anchor, opt_duration, opt_direction) {\n  resolution = view.constrainResolution(resolution, 0, opt_direction);\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  var currentResolution = view.getResolution();\n  var resolution = view.constrainResolution(currentResolution, delta, 0);\n\n  if (resolution !== undefined) {\n    var resolutions = view.getResolutions();\n    resolution = clamp(\n      resolution,\n      view.getMinResolution() || resolutions[resolutions.length - 1],\n      view.getMaxResolution() || resolutions[0]);\n  }\n\n  // If we have a constraint on center, we need to change the anchor so that the\n  // new center is within the extent. We first calculate the new center, apply\n  // the constraint to it, and then calculate back the anchor\n  if (opt_anchor && resolution !== undefined && resolution !== currentResolution) {\n    var currentCenter = view.getCenter();\n    var center = view.calculateCenterZoom(resolution, opt_anchor);\n    center = view.constrainCenter(center);\n\n    opt_anchor = [\n      (resolution * currentCenter[0] - currentResolution * center[0]) /\n          (resolution - currentResolution),\n      (resolution * currentCenter[1] - currentResolution * center[1]) /\n          (resolution - currentResolution)\n    ];\n  }\n\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration) {\n  if (resolution) {\n    var currentResolution = view.getResolution();\n    var currentCenter = view.getCenter();\n    if (currentResolution !== undefined && currentCenter &&\n        resolution !== currentResolution && opt_duration) {\n      view.animate({\n        resolution: resolution,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      if (opt_anchor) {\n        var center = view.calculateCenterZoom(resolution, opt_anchor);\n        view.setCenter(center);\n      }\n      view.setResolution(resolution);\n    }\n  }\n}\n\nexport default Interaction;\n\n//# sourceMappingURL=Interaction.js.map","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /*@__PURE__*/(function (Interaction) {\n  function DoubleClickZoom(opt_options) {\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Interaction ) DoubleClickZoom.__proto__ = Interaction;\n  DoubleClickZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  DoubleClickZoom.prototype.constructor = DoubleClickZoom;\n\n  return DoubleClickZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n    var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    var map = mapBrowserEvent.map;\n    var anchor = mapBrowserEvent.coordinate;\n    var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    var view = map.getView();\n    zoomByDelta(view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n  return !stopEvent;\n}\n\nexport default DoubleClickZoom;\n\n//# sourceMappingURL=DoubleClickZoom.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {assert} from '../asserts.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport {WEBKIT, MAC} from '../has.js';\n\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function(event) {\n  return event.target.getTargetElement() === document.activeElement;\n};\n\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function(mapBrowserEvent) {\n  var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n  return originalEvent.button == 0 &&\n      !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey;\n};\n\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function(mapBrowserEvent) {\n  var target = mapBrowserEvent.originalEvent.target;\n  var tagName = /** @type {Element} */ (target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n      tagName !== 'SELECT' &&\n      tagName !== 'TEXTAREA');\n};\n\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function(mapBrowserEvent) {\n  var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function(mapBrowserEvent) {\n  var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n\n//# sourceMappingURL=condition.js.map","/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\nimport {getValues} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /*@__PURE__*/(function (Interaction) {\n  function PointerInteraction(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(/** @type {import(\"./Interaction.js\").InteractionOptions} */ this, (options));\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, import(\"../pointer/PointerEvent.js\").default>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<import(\"../pointer/PointerEvent.js\").default>}\n     * @protected\n     */\n    this.targetPointers = [];\n\n  }\n\n  if ( Interaction ) PointerInteraction.__proto__ = Interaction;\n  PointerInteraction.prototype = Object.create( Interaction && Interaction.prototype );\n  PointerInteraction.prototype.constructor = PointerInteraction;\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  PointerInteraction.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    return false;\n  };\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  PointerInteraction.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {};\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @override\n   * @api\n   */\n  PointerInteraction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!(/** @type {import(\"../MapBrowserPointerEvent.js\").default} */ (mapBrowserEvent).pointerEvent)) {\n      return true;\n    }\n\n    var stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        var handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        var handled = this.handleDownEvent(mapBrowserEvent);\n        if (handled) {\n          mapBrowserEvent.preventDefault();\n        }\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  };\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  PointerInteraction.prototype.handleMoveEvent = function handleMoveEvent (mapBrowserEvent) {};\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  PointerInteraction.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    return false;\n  };\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  PointerInteraction.prototype.stopDown = function stopDown (handled) {\n    return handled;\n  };\n\n  /**\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  PointerInteraction.prototype.updateTrackedPointers_ = function updateTrackedPointers_ (mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      var event = mapBrowserEvent.pointerEvent;\n\n      var id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type ==\n          MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  };\n\n  return PointerInteraction;\n}(Interaction));\n\n\n/**\n * @param {Array<import(\"../pointer/PointerEvent.js\").default>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  var length = pointerEvents.length;\n  var clientX = 0;\n  var clientY = 0;\n  for (var i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  var type = mapBrowserEvent.type;\n  return type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP;\n}\n\n\nexport default PointerInteraction;\n\n//# sourceMappingURL=Pointer.js.map","/**\n * @module ol/interaction/DragPan\n */\nimport ViewHint from '../ViewHint.js';\nimport {scale as scaleCoordinate, rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {noModifierKeys} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /*@__PURE__*/(function (PointerInteraction) {\n  function DragPan(opt_options) {\n\n    PointerInteraction.call(this, {\n      stopDown: FALSE\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n\n  }\n\n  if ( PointerInteraction ) DragPan.__proto__ = PointerInteraction;\n  DragPan.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragPan.prototype.constructor = DragPan;\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    var targetPointers = this.targetPointers;\n    var centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        var deltaX = this.lastCentroid[0] - centroid[0];\n        var deltaY = centroid[1] - this.lastCentroid[1];\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        var center = [deltaX, deltaY];\n        scaleCoordinate(center, view.getResolution());\n        rotateCoordinate(center, view.getRotation());\n        addCoordinate(center, view.getCenter());\n        center = view.constrainCenter(center);\n        view.setCenter(center);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        var distance = this.kinetic_.getDistance();\n        var angle = this.kinetic_.getAngle();\n        var center = /** @type {!import(\"../coordinate.js\").Coordinate} */ (view.getCenter());\n        var centerpx = map.getPixelFromCoordinate(center);\n        var dest = map.getCoordinateFromPixel([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle)\n        ]);\n        view.animate({\n          center: view.constrainCenter(dest),\n          duration: 500,\n          easing: easeOut\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.setHint(ViewHint.INTERACTING, -1);\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.setCenter(mapBrowserEvent.frameState.viewState.center);\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragPan;\n}(PointerInteraction));\n\nexport default DragPan;\n\n//# sourceMappingURL=DragPan.js.map","/**\n * @module ol/interaction/DragRotate\n */\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {altShiftKeysOnly, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from './Interaction.js';\nimport PointerInteraction from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /*@__PURE__*/(function (PointerInteraction) {\n  function DragRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    PointerInteraction.call(this, {\n      stopDown: FALSE\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) DragRotate.__proto__ = PointerInteraction;\n  DragRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragRotate.prototype.constructor = DragRotate;\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    var size = map.getSize();\n    var offset = mapBrowserEvent.pixel;\n    var theta =\n        Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      var delta = theta - this.lastAngle_;\n      var rotation = view.getRotation();\n      rotateWithoutConstraints(view, rotation - delta);\n    }\n    this.lastAngle_ = theta;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    var rotation = view.getRotation();\n    rotate(view, rotation, undefined, this.duration_);\n    return false;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n      var map = mapBrowserEvent.map;\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragRotate;\n}(PointerInteraction));\n\nexport default DragRotate;\n\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nvar RenderBox = /*@__PURE__*/(function (Disposable) {\n  function RenderBox(className) {\n    Disposable.call(this);\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = /** @type {HTMLDivElement} */ (document.createElement('div'));\n    this.element_.style.position = 'absolute';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n\n  }\n\n  if ( Disposable ) RenderBox.__proto__ = Disposable;\n  RenderBox.prototype = Object.create( Disposable && Disposable.prototype );\n  RenderBox.prototype.constructor = RenderBox;\n\n  /**\n   * @inheritDoc\n   */\n  RenderBox.prototype.disposeInternal = function disposeInternal () {\n    this.setMap(null);\n  };\n\n  /**\n   * @private\n   */\n  RenderBox.prototype.render_ = function render_ () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var px = 'px';\n    var style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  RenderBox.prototype.setMap = function setMap (map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      var style = this.element_.style;\n      style.left = style.top = style.width = style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  };\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  RenderBox.prototype.setPixels = function setPixels (startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  };\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  RenderBox.prototype.createOrUpdateGeometry = function createOrUpdateGeometry () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]]\n    ];\n    var coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  };\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  RenderBox.prototype.getGeometry = function getGeometry () {\n    return this.geometry_;\n  };\n\n  return RenderBox;\n}(Disposable));\n\n\nexport default RenderBox;\n\n//# sourceMappingURL=Box.js.map","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {always, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {VOID} from '../functions.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\n\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)} onBoxEnd Code to execute just\n * before `boxend` is fired.\n */\n\n\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /*@__PURE__*/(function (Event) {\n  function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n    Event.call(this, type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n  if ( Event ) DragBoxEvent.__proto__ = Event;\n  DragBoxEvent.prototype = Object.create( Event && Event.prototype );\n  DragBoxEvent.prototype.constructor = DragBoxEvent;\n\n  return DragBoxEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /*@__PURE__*/(function (PointerInteraction) {\n  function DragBox(opt_options) {\n\n    PointerInteraction.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n    * @type {import(\"../render/Box.js\").default}\n    * @private\n    */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @type {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)}\n     * @private\n     */\n    this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\n\n    /**\n    * @type {import(\"../pixel.js\").Pixel}\n    * @private\n    */\n    this.startPixel_ = null;\n\n    /**\n    * @private\n    * @type {import(\"../events/condition.js\").Condition}\n    */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n    * @private\n    * @type {EndCondition}\n    */\n    this.boxEndCondition_ = options.boxEndCondition ?\n      options.boxEndCondition : this.defaultBoxEndCondition;\n  }\n\n  if ( PointerInteraction ) DragBox.__proto__ = PointerInteraction;\n  DragBox.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragBox.prototype.constructor = DragBox;\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  DragBox.prototype.defaultBoxEndCondition = function defaultBoxEndCondition (mapBrowserEvent, startPixel, endPixel) {\n    var width = endPixel[0] - startPixel[0];\n    var height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  };\n\n  /**\n  * Returns geometry of last drawn box.\n  * @return {import(\"../geom/Polygon.js\").default} Geometry.\n  * @api\n  */\n  DragBox.prototype.getGeometry = function getGeometry () {\n    return this.box_.getGeometry();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    this.box_.setMap(null);\n\n    if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n      this.onBoxEnd_(mapBrowserEvent);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) &&\n        this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragBox;\n}(PointerInteraction));\n\n\nexport default DragBox;\n\n//# sourceMappingURL=DragBox.js.map","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport {createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter} from '../extent.js';\nimport DragBox from './DragBox.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /*@__PURE__*/(function (DragBox) {\n  function DragZoom(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var condition = options.condition ? options.condition : shiftKeyOnly;\n\n    DragBox.call(this, {\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      onBoxEnd: onBoxEnd\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  if ( DragBox ) DragZoom.__proto__ = DragBox;\n  DragZoom.prototype = Object.create( DragBox && DragBox.prototype );\n  DragZoom.prototype.constructor = DragZoom;\n\n  return DragZoom;\n}(DragBox));\n\n\n/**\n * @this {DragZoom}\n */\nfunction onBoxEnd() {\n  var map = this.getMap();\n  var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n  var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n  var extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    var mapExtent = view.calculateExtent(size);\n    var boxPixelExtent = createOrUpdateFromCoordinates([\n      map.getPixelFromCoordinate(getBottomLeft(extent)),\n      map.getPixelFromCoordinate(getTopRight(extent))]);\n    var factor = view.getResolutionForExtent(boxPixelExtent, size);\n\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  var resolution = view.constrainResolution(\n    view.getResolutionForExtent(extent, size));\n\n  var center = getCenter(extent);\n  center = view.constrainCenter(center);\n\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n}\n\n\nexport default DragZoom;\n\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\n\n//# sourceMappingURL=KeyCode.js.map","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /*@__PURE__*/(function (Interaction) {\n  function KeyboardPan(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function(mapBrowserEvent) {\n      return noModifierKeys(mapBrowserEvent) &&\n        targetNotEditable(mapBrowserEvent);\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition !== undefined ?\n      options.condition : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ = options.pixelDelta !== undefined ?\n      options.pixelDelta : 128;\n\n  }\n\n  if ( Interaction ) KeyboardPan.__proto__ = Interaction;\n  KeyboardPan.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardPan.prototype.constructor = KeyboardPan;\n\n  return KeyboardPan;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN) {\n    var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n    var keyCode = keyEvent.keyCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n        keyCode == KeyCode.LEFT ||\n        keyCode == KeyCode.RIGHT ||\n        keyCode == KeyCode.UP)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n      var deltaX = 0, deltaY = 0;\n      if (keyCode == KeyCode.DOWN) {\n        deltaY = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.LEFT) {\n        deltaX = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.RIGHT) {\n        deltaX = mapUnitsDelta;\n      } else {\n        deltaY = mapUnitsDelta;\n      }\n      var delta = [deltaX, deltaY];\n      rotateCoordinate(delta, view.getRotation());\n      pan(view, delta, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardPan;\n\n//# sourceMappingURL=KeyboardPan.js.map","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /*@__PURE__*/(function (Interaction) {\n  function KeyboardZoom(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n  }\n\n  if ( Interaction ) KeyboardZoom.__proto__ = Interaction;\n  KeyboardZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardZoom.prototype.constructor = KeyboardZoom;\n\n  return KeyboardZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS) {\n    var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n    var charCode = keyEvent.charCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n      var map = mapBrowserEvent.map;\n      var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n      var view = map.getView();\n      zoomByDelta(view, delta, undefined, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardZoom;\n\n//# sourceMappingURL=KeyboardZoom.js.map","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {always} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX, SAFARI} from '../has.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Maximum mouse wheel delta.\n * @type {number}\n */\nvar MAX_DELTA = 1;\n\n\n/**\n * @enum {string}\n */\nexport var Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [constrainResolution=false] When using a trackpad or\n * magic mouse, zoom to the closest integer zoom level after the scroll gesture\n * ends.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /*@__PURE__*/(function (Interaction) {\n  function MouseWheelZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(/** @type {import(\"./Interaction.js\").InteractionOptions} */ this, (options));\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.trackpadDeltaPerZoom_ = 300;\n\n    /**\n     * The zoom factor by which scroll zooming is allowed to exceed the limits.\n     * @private\n     * @type {number}\n     */\n    this.trackpadZoomBuffer_ = 1.5;\n\n  }\n\n  if ( Interaction ) MouseWheelZoom.__proto__ = Interaction;\n  MouseWheelZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  MouseWheelZoom.prototype.constructor = MouseWheelZoom;\n\n  /**\n   * @private\n   */\n  MouseWheelZoom.prototype.decrementInteractingHint_ = function decrementInteractingHint_ () {\n    this.trackpadTimeoutId_ = undefined;\n    var view = this.getMap().getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @override\n   */\n  MouseWheelZoom.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    var type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n      return true;\n    }\n\n    mapBrowserEvent.preventDefault();\n\n    var map = mapBrowserEvent.map;\n    var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    var delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX &&\n          wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    } else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n      delta = -wheelEvent.wheelDeltaY;\n      if (SAFARI) {\n        delta /= 3;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n\n    var now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ?\n        Mode.TRACKPAD :\n        Mode.WHEEL;\n    }\n\n    if (this.mode_ === Mode.TRACKPAD) {\n      var view = map.getView();\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        view.setHint(ViewHint.INTERACTING, 1);\n      }\n      this.trackpadTimeoutId_ = setTimeout(this.decrementInteractingHint_.bind(this), this.trackpadEventGap_);\n      var resolution = view.getResolution() * Math.pow(2, delta / this.trackpadDeltaPerZoom_);\n      var minResolution = view.getMinResolution();\n      var maxResolution = view.getMaxResolution();\n      var rebound = 0;\n      if (resolution < minResolution) {\n        resolution = Math.max(resolution, minResolution / this.trackpadZoomBuffer_);\n        rebound = 1;\n      } else if (resolution > maxResolution) {\n        resolution = Math.min(resolution, maxResolution * this.trackpadZoomBuffer_);\n        rebound = -1;\n      }\n      if (this.lastAnchor_) {\n        var center = view.calculateCenterZoom(resolution, this.lastAnchor_);\n        view.setCenter(view.constrainCenter(center));\n      }\n      view.setResolution(resolution);\n\n      if (rebound === 0 && this.constrainResolution_) {\n        view.animate({\n          resolution: view.constrainResolution(resolution, delta > 0 ? -1 : 1),\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: this.duration_\n        });\n      }\n\n      if (rebound > 0) {\n        view.animate({\n          resolution: minResolution,\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: 500\n        });\n      } else if (rebound < 0) {\n        view.animate({\n          resolution: maxResolution,\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: 500\n        });\n      }\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.delta_ += delta;\n\n    var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n\n    return false;\n  };\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  MouseWheelZoom.prototype.handleWheelZoom_ = function handleWheelZoom_ (map) {\n    var view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    var maxDelta = MAX_DELTA;\n    var delta = clamp(this.delta_, -maxDelta, maxDelta);\n    zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n    this.mode_ = undefined;\n    this.delta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  };\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  MouseWheelZoom.prototype.setMouseAnchor = function setMouseAnchor (useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  };\n\n  return MouseWheelZoom;\n}(Interaction));\n\nexport default MouseWheelZoom;\n\n//# sourceMappingURL=MouseWheelZoom.js.map","/**\n * @module ol/interaction/PinchRotate\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from './Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\nimport {disable} from '../rotationconstraint.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /*@__PURE__*/(function (PointerInteraction) {\n  function PinchRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) PinchRotate.__proto__ = PointerInteraction;\n  PinchRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchRotate.prototype.constructor = PinchRotate;\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    var rotationDelta = 0.0;\n\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1];\n\n    // angle between touches\n    var angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX);\n\n    if (this.lastAngle_ !== undefined) {\n      var delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ &&\n          Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      var rotation = view.getRotation();\n      map.render();\n      rotateWithoutConstraints(view, rotation + rotationDelta, this.anchor_);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n      if (this.rotating_) {\n        var rotation = view.getRotation();\n        rotate(view, rotation, this.anchor_, this.duration_);\n      }\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().setHint(ViewHint.INTERACTING, 1);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return PinchRotate;\n}(PointerInteraction));\n\nexport default PinchRotate;\n\n//# sourceMappingURL=PinchRotate.js.map","/**\n * @module ol/interaction/PinchZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {zoom, zoomWithoutConstraints} from './Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the pinch gesture ends.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /*@__PURE__*/(function (PointerInteraction) {\n  function PinchZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n\n  }\n\n  if ( PointerInteraction ) PinchZoom.__proto__ = PointerInteraction;\n  PinchZoom.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchZoom.prototype.constructor = PinchZoom;\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    var scaleDelta = 1.0;\n\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1];\n    var dx = touch0.clientX - touch1.clientX;\n    var dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    var distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    var resolution = view.getResolution();\n    var maxResolution = view.getMaxResolution();\n    var minResolution = view.getMinResolution();\n    var newResolution = resolution * scaleDelta;\n    if (newResolution > maxResolution) {\n      scaleDelta = maxResolution / resolution;\n      newResolution = maxResolution;\n    } else if (newResolution < minResolution) {\n      scaleDelta = minResolution / resolution;\n      newResolution = minResolution;\n    }\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    zoomWithoutConstraints(view, newResolution, this.anchor_);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n      var resolution = view.getResolution();\n      if (this.constrainResolution_ ||\n          resolution < view.getMinResolution() ||\n          resolution > view.getMaxResolution()) {\n        // Zoom to final resolution, with an animation, and provide a\n        // direction not to zoom out/in if user was pinching in/out.\n        // Direction is > 0 if pinching out, and < 0 if pinching in.\n        var direction = this.lastScaleDelta_ - 1;\n        zoom(view, resolution, this.anchor_, this.duration_, direction);\n      }\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().setHint(ViewHint.INTERACTING, 1);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return PinchZoom;\n}(PointerInteraction));\n\nexport default PinchZoom;\n\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3\n};\n\n//# sourceMappingURL=ImageState.js.map","/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=))} Loader\n */\n\n\nvar ImageCanvas = /*@__PURE__*/(function (ImageBase) {\n  function ImageCanvas(extent, resolution, pixelRatio, canvas, opt_loader) {\n\n    var state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    ImageBase.call(this, extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = opt_loader !== undefined ? opt_loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {Error}\n     */\n    this.error_ = null;\n\n  }\n\n  if ( ImageBase ) ImageCanvas.__proto__ = ImageBase;\n  ImageCanvas.prototype = Object.create( ImageBase && ImageBase.prototype );\n  ImageCanvas.prototype.constructor = ImageCanvas;\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {Error} Any error that occurred during rendering.\n   */\n  ImageCanvas.prototype.getError = function getError () {\n    return this.error_;\n  };\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error=} err Any error during drawing.\n   * @private\n   */\n  ImageCanvas.prototype.handleLoad_ = function handleLoad_ (err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageCanvas.prototype.load = function load () {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  };\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  ImageCanvas.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  return ImageCanvas;\n}(ImageBase));\n\n\nexport default ImageCanvas;\n\n//# sourceMappingURL=ImageCanvas.js.map","/**\n * @module ol/ImageBase\n */\nimport {abstract} from './util.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @abstract\n */\nvar ImageBase = /*@__PURE__*/(function (EventTarget) {\n  function ImageBase(extent, resolution, pixelRatio, state) {\n\n    EventTarget.call(this);\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n\n  }\n\n  if ( EventTarget ) ImageBase.__proto__ = EventTarget;\n  ImageBase.prototype = Object.create( EventTarget && EventTarget.prototype );\n  ImageBase.prototype.constructor = ImageBase;\n\n  /**\n   * @protected\n   */\n  ImageBase.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  ImageBase.prototype.getExtent = function getExtent () {\n    return this.extent;\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  ImageBase.prototype.getImage = function getImage () {\n    return abstract();\n  };\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  ImageBase.prototype.getPixelRatio = function getPixelRatio () {\n    return this.pixelRatio_;\n  };\n\n  /**\n   * @return {number} Resolution.\n   */\n  ImageBase.prototype.getResolution = function getResolution () {\n    return /** @type {number} */ (this.resolution);\n  };\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  ImageBase.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  ImageBase.prototype.load = function load () {\n    abstract();\n  };\n\n  return ImageBase;\n}(EventTarget));\n\n\nexport default ImageBase;\n\n//# sourceMappingURL=ImageBase.js.map","/**\n * @module ol/LayerType\n */\n\n/**\n * A layer type used when creating layer renderers.\n * @enum {string}\n */\nexport default {\n  IMAGE: 'IMAGE',\n  TILE: 'TILE',\n  VECTOR_TILE: 'VECTOR_TILE',\n  VECTOR: 'VECTOR'\n};\n\n//# sourceMappingURL=LayerType.js.map","/**\n * @module ol/layer/VectorRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorRenderType.js.map","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nvar RenderEvent = /*@__PURE__*/(function (Event) {\n  function RenderEvent(type, opt_vectorContext, opt_frameState, opt_context, opt_glContext) {\n\n    Event.call(this, type);\n\n    /**\n     * For canvas, this is an instance of {@link module:ol/render/canvas/Immediate}.\n     * @type {import(\"./VectorContext.js\").default|undefined}\n     * @api\n     */\n    this.vectorContext = opt_vectorContext;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Only available when a Canvas renderer is used, null\n     * otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n\n    /**\n     * WebGL context. Only available when a WebGL renderer is used, null\n     * otherwise.\n     * @type {import(\"../webgl/Context.js\").default|null|undefined}\n     * @api\n     */\n    this.glContext = opt_glContext;\n\n  }\n\n  if ( Event ) RenderEvent.__proto__ = Event;\n  RenderEvent.prototype = Object.create( Event && Event.prototype );\n  RenderEvent.prototype.constructor = RenderEvent;\n\n  return RenderEvent;\n}(Event));\n\nexport default RenderEvent;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").Event\n * @template T\n */\nvar LRUCache = /*@__PURE__*/(function (EventTarget) {\n  function LRUCache(opt_highWaterMark) {\n\n    EventTarget.call(this);\n\n    /**\n     * @type {number}\n     */\n    this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n\n  }\n\n  if ( EventTarget ) LRUCache.__proto__ = EventTarget;\n  LRUCache.prototype = Object.create( EventTarget && EventTarget.prototype );\n  LRUCache.prototype.constructor = LRUCache;\n\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  LRUCache.prototype.canExpireCache = function canExpireCache () {\n    return this.getCount() > this.highWaterMark;\n  };\n\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  LRUCache.prototype.clear = function clear () {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n    this.dispatchEvent(EventType.CLEAR);\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  LRUCache.prototype.containsKey = function containsKey (key) {\n    return this.entries_.hasOwnProperty(key);\n  };\n\n\n  /**\n   * @param {function(this: S, T, string, LRUCache): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   * @param {S=} opt_this The object to use as `this` in `f`.\n   * @template S\n   */\n  LRUCache.prototype.forEach = function forEach (f, opt_this) {\n    var entry = this.oldest_;\n    while (entry) {\n      f.call(opt_this, entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  LRUCache.prototype.get = function get (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined,\n      15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  };\n\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  LRUCache.prototype.remove = function remove (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @return {number} Count.\n   */\n  LRUCache.prototype.getCount = function getCount () {\n    return this.count_;\n  };\n\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  LRUCache.prototype.getKeys = function getKeys () {\n    var keys = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  };\n\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  LRUCache.prototype.getValues = function getValues () {\n    var values = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  };\n\n\n  /**\n   * @return {T} Last value.\n   */\n  LRUCache.prototype.peekLast = function peekLast () {\n    return this.oldest_.value_;\n  };\n\n\n  /**\n   * @return {string} Last key.\n   */\n  LRUCache.prototype.peekLastKey = function peekLastKey () {\n    return this.oldest_.key_;\n  };\n\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  LRUCache.prototype.peekFirstKey = function peekFirstKey () {\n    return this.newest_.key_;\n  };\n\n\n  /**\n   * @return {T} value Value.\n   */\n  LRUCache.prototype.pop = function pop () {\n    var entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.replace = function replace (key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.set = function set (key, value) {\n    assert(!(key in this.entries_),\n      16); // Tried to set a value for a key that is used already\n    var entry = /** @type {Entry} */ ({\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value\n    });\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  };\n\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  LRUCache.prototype.setSize = function setSize (size) {\n    this.highWaterMark = size;\n  };\n\n\n  /**\n   * Prune the cache.\n   */\n  LRUCache.prototype.prune = function prune () {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  };\n\n  return LRUCache;\n}(EventTarget));\n\nexport default LRUCache;\n\n//# sourceMappingURL=LRUCache.js.map","/**\n * @module ol/render/canvas\n */\nimport {getFontFamilies} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {clear} from '../obj.js';\nimport LRUCache from '../structs/LRUCache.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {number} [scale]\n * @property {Array<number>} [padding]\n */\n\n\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport var defaultFillStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineCap = 'round';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineJoin = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport var defaultStrokeStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {LRUCache<HTMLCanvasElement>}\n * @api\n */\nexport var labelCache = new LRUCache();\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport var checkedFonts = {};\n\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var checkFont = (function() {\n  var retries = 60;\n  var checked = checkedFonts;\n  var size = '32px ';\n  var referenceFonts = ['monospace', 'serif'];\n  var len = referenceFonts.length;\n  var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  var interval, referenceWidth;\n\n  function isAvailable(font) {\n    var context = getMeasureContext();\n    // Check weight ranges according to\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n    for (var weight = 100; weight <= 700; weight += 300) {\n      var fontWeight = weight + ' ';\n      var available = true;\n      for (var i = 0; i < len; ++i) {\n        var referenceFont = referenceFonts[i];\n        context.font = fontWeight + size + referenceFont;\n        referenceWidth = context.measureText(text).width;\n        if (font != referenceFont) {\n          context.font = fontWeight + size + font + ',' + referenceFont;\n          var width = context.measureText(text).width;\n          // If width and referenceWidth are the same, then the fallback was used\n          // instead of the font we wanted, so the font is not available.\n          available = available && width != referenceWidth;\n        }\n      }\n      if (available) {\n        // Consider font available when it is available in one weight range.\n        //FIXME With this we miss rare corner cases, so we should consider\n        //FIXME checking availability for each requested weight range.\n        return true;\n      }\n    }\n    return false;\n  }\n\n  function check() {\n    var done = true;\n    for (var font in checked) {\n      if (checked[font] < retries) {\n        if (isAvailable(font)) {\n          checked[font] = retries;\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          labelCache.clear();\n        } else {\n          ++checked[font];\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function(fontSpec) {\n    var fontFamilies = getFontFamilies(fontSpec);\n    if (!fontFamilies) {\n      return;\n    }\n    for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\n      var fontFamily = fontFamilies[i];\n      if (!(fontFamily in checked)) {\n        checked[fontFamily] = retries;\n        if (!isAvailable(fontFamily)) {\n          checked[fontFamily] = 0;\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  return measureContext;\n}\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function() {\n  var span;\n  var heights = textHeights;\n  return function(font) {\n    var height = heights[font];\n    if (height == undefined) {\n      if (!span) {\n        span = document.createElement('span');\n        span.textContent = 'M';\n        span.style.margin = span.style.padding = '0 !important';\n        span.style.position = 'absolute !important';\n        span.style.left = '-99999px !important';\n      }\n      span.style.font = font;\n      document.body.appendChild(span);\n      height = heights[font] = span.offsetHeight;\n      document.body.removeChild(span);\n    }\n    return height;\n  };\n})();\n\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  var measureContext = getMeasureContext();\n  if (font != measureContext.font) {\n    measureContext.font = font;\n  }\n  return measureContext.measureText(text).width;\n}\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n\nexport var resetTransform = createTransform();\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context,\n  transform, opacity, image, originX, originY, w, h, x, y, scale) {\n  var alpha;\n  if (opacity != 1) {\n    alpha = context.globalAlpha;\n    context.globalAlpha = alpha * opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n\n  if (alpha) {\n    context.globalAlpha = alpha;\n  }\n  if (transform) {\n    context.setTransform.apply(context, resetTransform);\n  }\n}\n\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  var el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    var rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (\n  function() {\n\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n\n    return (\n      /**\n       * @param {string} s String.\n       * @return {Color} Color.\n       */\n      function(s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n          color = cache[s];\n        } else {\n          if (cacheSize >= MAX_CACHE_SIZE) {\n            var i = 0;\n            for (var key in cache) {\n              if ((i++ & 3) === 0) {\n                delete cache[key];\n                --cacheSize;\n              }\n            }\n          }\n          color = fromStringInternal_(s);\n          cache[s] = color;\n          ++cacheSize;\n        }\n        return color;\n      }\n    );\n\n  })();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  var r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) { // hex\n    var n = s.length - 1; // number of hex digits\n    var d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    var hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) { // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) { // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  var r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  var g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  var b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  var a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n//# sourceMappingURL=color.js.map","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = function VectorContext () {};\n\nVectorContext.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {};\n\n/**\n * Render a geometry.\n *\n * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n */\nVectorContext.prototype.drawGeometry = function drawGeometry (geometry) {};\n\n/**\n * Set the rendering style.\n *\n * @param {import(\"../style/Style.js\").default} style The rendering style.\n */\nVectorContext.prototype.setStyle = function setStyle (style) {};\n\n/**\n * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawCircle = function drawCircle (circleGeometry, feature) {};\n\n/**\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n */\nVectorContext.prototype.drawFeature = function drawFeature (feature, style) {};\n\n/**\n * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawGeometryCollection = function drawGeometryCollection (geometryCollectionGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawPoint = function drawPoint (pointGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Geometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawText = function drawText (geometry, feature) {};\n\n/**\n * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n */\nVectorContext.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {};\n\n/**\n * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setImageStyle = function setImageStyle (imageStyle, opt_declutterGroup) {};\n\n/**\n * @param {import(\"../style/Text.js\").default} textStyle Text style.\n * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setTextStyle = function setTextStyle (textStyle, opt_declutterGroup) {};\n\nexport default VectorContext;\n\n//# sourceMappingURL=VectorContext.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport VectorContext from '../VectorContext.js';\nimport {defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont} from '../canvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /*@__PURE__*/(function (VectorContext) {\n  function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation) {\n    VectorContext.call(this);\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageScale_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textScale_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n\n  }\n\n  if ( VectorContext ) CanvasImmediateRenderer.__proto__ = VectorContext;\n  CanvasImmediateRenderer.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasImmediateRenderer.prototype.constructor = CanvasImmediateRenderer;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawImages_ = function drawImages_ (flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, 2, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var localTransform = this.tmpLocalTransform_;\n    var alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    var rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      var x = pixelCoordinates[i] - this.imageAnchorX_;\n      var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (rotation !== 0 || this.imageScale_ != 1) {\n        var centerX = x + this.imageAnchorX_;\n        var centerY = y + this.imageAnchorY_;\n        composeTransform(localTransform,\n          centerX, centerY,\n          this.imageScale_, this.imageScale_,\n          rotation,\n          -centerX, -centerY);\n        context.setTransform.apply(context, localTransform);\n      }\n      context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_,\n        this.imageWidth_, this.imageHeight_, x, y,\n        this.imageWidth_, this.imageHeight_);\n    }\n    if (rotation !== 0 || this.imageScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawText_ = function drawText_ (flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      var x = pixelCoordinates[offset] + this.textOffsetX_;\n      var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (rotation !== 0 || this.textScale_ != 1) {\n        var localTransform = composeTransform(this.tmpLocalTransform_,\n          x, y,\n          this.textScale_, this.textScale_,\n          rotation,\n          -x, -y);\n        context.setTransform.apply(context, localTransform);\n      }\n      if (this.textStrokeState_) {\n        context.strokeText(this.text_, x, y);\n      }\n      if (this.textFillState_) {\n        context.fillText(this.text_, x, y);\n      }\n    }\n    if (rotation !== 0 || this.textScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  CanvasImmediateRenderer.prototype.moveToLineTo_ = function moveToLineTo_ (flatCoordinates, offset, end, stride, close) {\n    var context = this.context_;\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    var length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (var i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasImmediateRenderer.prototype.drawRings_ = function drawRings_ (flatCoordinates, offset, ends, stride) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n    }\n    return offset;\n  };\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawCircle = function drawCircle (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var pixelCoordinates = transformGeom2D(\n        geometry, this.transform_, this.pixelCoordinates_);\n      var dx = pixelCoordinates[2] - pixelCoordinates[0];\n      var dy = pixelCoordinates[3] - pixelCoordinates[1];\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      var context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  };\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.setStyle = function setStyle (style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  };\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawGeometry = function drawGeometry (geometry) {\n    var type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(/** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(/** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(/** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(/** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(/** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(/** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(/** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(/** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n        break;\n      default:\n    }\n  };\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawFeature = function drawFeature (feature, style) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  };\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawGeometryCollection = function drawGeometryCollection (geometry) {\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  };\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPoint = function drawPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPoint = function drawMultiPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawLineString = function drawLineString (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length,\n        geometry.getStride(), false);\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiLineString = function drawMultiLineString (geometry) {\n    var geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      var offset = 0;\n      var ends = /** @type {Array<number>} */ (geometry.getEnds());\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  };\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPolygon = function drawPolygon (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      context.beginPath();\n      this.drawRings_(geometry.getOrientedFlatCoordinates(),\n        0, /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPolygon = function drawMultiPolygon (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      var flatCoordinates = geometry.getOrientedFlatCoordinates();\n      var offset = 0;\n      var endss = geometry.getEndss();\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextFillState_ = function setContextFillState_ (fillState) {\n    var context = this.context_;\n    var contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextStrokeState_ = function setContextStrokeState_ (strokeState) {\n    var context = this.context_;\n    var contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n      if (CANVAS_LINE_DASH) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n      }\n      if (CANVAS_LINE_DASH) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = context.lineDashOffset =\n              strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = context.miterLimit =\n            strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = context.strokeStyle =\n            strokeState.strokeStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextTextState_ = function setContextTextState_ (textState) {\n    var context = this.context_;\n    var contextTextState = this.contextTextState_;\n    var textAlign = textState.textAlign ?\n      textState.textAlign : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = context.textBaseline =\n          /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      }\n    }\n  };\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      var fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(fillStyleColor ?\n          fillStyleColor : defaultFillStyle)\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      var strokeStyleColor = strokeStyle.getColor();\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      var strokeStyleWidth = strokeStyle.getWidth();\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap: strokeStyleLineCap !== undefined ?\n          strokeStyleLineCap : defaultLineCap,\n        lineDash: strokeStyleLineDash ?\n          strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset ?\n          strokeStyleLineDashOffset : defaultLineDashOffset,\n        lineJoin: strokeStyleLineJoin !== undefined ?\n          strokeStyleLineJoin : defaultLineJoin,\n        lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n          strokeStyleWidth : defaultLineWidth),\n        miterLimit: strokeStyleMiterLimit !== undefined ?\n          strokeStyleMiterLimit : defaultMiterLimit,\n        strokeStyle: asColorLike(strokeStyleColor ?\n          strokeStyleColor : defaultStrokeStyle)\n      };\n    }\n  };\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setImageStyle = function setImageStyle (imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      var imageAnchor = imageStyle.getAnchor();\n      // FIXME pixel ratio\n      var imageImage = imageStyle.getImage(1);\n      var imageOrigin = imageStyle.getOrigin();\n      var imageSize = imageStyle.getSize();\n      this.imageAnchorX_ = imageAnchor[0];\n      this.imageAnchorY_ = imageAnchor[1];\n      this.imageHeight_ = imageSize[1];\n      this.image_ = imageImage;\n      this.imageOpacity_ = imageStyle.getOpacity();\n      this.imageOriginX_ = imageOrigin[0];\n      this.imageOriginY_ = imageOrigin[1];\n      this.imageRotateWithView_ = imageStyle.getRotateWithView();\n      this.imageRotation_ = imageStyle.getRotation();\n      this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n      this.imageWidth_ = imageSize[0];\n    }\n  };\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setTextStyle = function setTextStyle (textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        var textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(textFillStyleColor ?\n            textFillStyleColor : defaultFillStyle)\n        };\n      }\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        var textStrokeStyleColor = textStrokeStyle.getColor();\n        var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        var textStrokeStyleWidth = textStrokeStyle.getWidth();\n        var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap: textStrokeStyleLineCap !== undefined ?\n            textStrokeStyleLineCap : defaultLineCap,\n          lineDash: textStrokeStyleLineDash ?\n            textStrokeStyleLineDash : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset ?\n            textStrokeStyleLineDashOffset : defaultLineDashOffset,\n          lineJoin: textStrokeStyleLineJoin !== undefined ?\n            textStrokeStyleLineJoin : defaultLineJoin,\n          lineWidth: textStrokeStyleWidth !== undefined ?\n            textStrokeStyleWidth : defaultLineWidth,\n          miterLimit: textStrokeStyleMiterLimit !== undefined ?\n            textStrokeStyleMiterLimit : defaultMiterLimit,\n          strokeStyle: asColorLike(textStrokeStyleColor ?\n            textStrokeStyleColor : defaultStrokeStyle)\n        };\n      }\n      var textFont = textStyle.getFont();\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      var textScale = textStyle.getScale();\n      var textText = textStyle.getText();\n      var textTextAlign = textStyle.getTextAlign();\n      var textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ?\n          textFont : defaultFont,\n        textAlign: textTextAlign !== undefined ?\n          textTextAlign : defaultTextAlign,\n        textBaseline: textTextBaseline !== undefined ?\n          textTextBaseline : defaultTextBaseline\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n          textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n      this.textOffsetY_ =\n          textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n      this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n        textScale : 1);\n    }\n  };\n\n  return CanvasImmediateRenderer;\n}(VectorContext));\n\n\nexport default CanvasImmediateRenderer;\n\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = function IconImageCache() {\n\n  /**\n  * @type {!Object<string, import(\"./IconImage.js\").default>}\n  * @private\n  */\n  this.cache_ = {};\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.cacheSize_ = 0;\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.maxCacheSize_ = 32;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.clear = function clear () {\n  this.cache_ = {};\n  this.cacheSize_ = 0;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.expire = function expire () {\n  if (this.cacheSize_ > this.maxCacheSize_) {\n    var i = 0;\n    for (var key in this.cache_) {\n      var iconImage = this.cache_[key];\n      if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n        delete this.cache_[key];\n        --this.cacheSize_;\n      }\n    }\n  }\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {import(\"../color.js\").Color} color Color.\n* @return {import(\"./IconImage.js\").default} Icon image.\n*/\nIconImageCache.prototype.get = function get (src, crossOrigin, color) {\n  var key = getKey(src, crossOrigin, color);\n  return key in this.cache_ ? this.cache_[key] : null;\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {import(\"../color.js\").Color} color Color.\n* @param {import(\"./IconImage.js\").default} iconImage Icon image.\n*/\nIconImageCache.prototype.set = function set (src, crossOrigin, color, iconImage) {\n  var key = getKey(src, crossOrigin, color);\n  this.cache_[key] = iconImage;\n  ++this.cacheSize_;\n};\n\n/**\n* Set the cache size of the icon cache. Default is `32`. Change this value when\n* your map uses more than 32 different icon images and you are not caching icon\n* styles on the application level.\n* @param {number} maxCacheSize Cache max size.\n* @api\n*/\nIconImageCache.prototype.setSize = function setSize (maxCacheSize) {\n  this.maxCacheSize_ = maxCacheSize;\n  this.expire();\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  var colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\n\nexport default IconImageCache;\n\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n\n//# sourceMappingURL=IconImageCache.js.map","/**\n * @module ol/renderer/Map\n */\nimport {abstract, getUid} from '../util.js';\nimport Disposable from '../Disposable.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE} from '../functions.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, invert as invertTransform, setFromArray as transformSetFromArray} from '../transform.js';\n\n/**\n * @abstract\n */\nvar MapRenderer = /*@__PURE__*/(function (Disposable) {\n  function MapRenderer(map) {\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"./Layer.js\").default>}\n     */\n    this.layerRenderers_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     */\n    this.layerRendererListeners_ = {};\n\n    /**\n     * @private\n     * @type {Array<typeof import(\"./Layer.js\").default>}\n     */\n    this.layerRendererConstructors_ = [];\n\n  }\n\n  if ( Disposable ) MapRenderer.__proto__ = Disposable;\n  MapRenderer.prototype = Object.create( Disposable && Disposable.prototype );\n  MapRenderer.prototype.constructor = MapRenderer;\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  MapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\n    abstract();\n  };\n\n  /**\n   * Register layer renderer constructors.\n   * @param {Array<typeof import(\"./Layer.js\").default>} constructors Layer renderers.\n   */\n  MapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    this.layerRendererConstructors_.push.apply(this.layerRendererConstructors_, constructors);\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  MapRenderer.prototype.calculateMatrices2D = function calculateMatrices2D (frameState) {\n    var viewState = frameState.viewState;\n    var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(coordinateToPixelTransform,\n      frameState.size[0] / 2, frameState.size[1] / 2,\n      1 / viewState.resolution, -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0], -viewState.center[1]);\n\n    invertTransform(\n      transformSetFromArray(pixelToCoordinateTransform, coordinateToPixelTransform));\n  };\n\n  /**\n   * Removes all layer renderers.\n   */\n  MapRenderer.prototype.removeLayerRenderers = function removeLayerRenderers () {\n    for (var key in this.layerRenderers_) {\n      this.removeLayerRendererByKey_(key).dispose();\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n   *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @return {?} Callback result.\n     */\n    function forEachFeatureAtCoordinate(feature, layer) {\n      var managed = frameState.layerStates[getUid(layer)].managed;\n      if (!(getUid(feature) in frameState.skippedFeatureUids && !managed)) {\n        return callback.call(thisArg, feature, managed ? layer : null);\n      }\n    }\n\n    var projection = viewState.projection;\n\n    var translatedCoordinate = coordinate;\n    if (projection.canWrapX()) {\n      var projectionExtent = projection.getExtent();\n      var worldWidth = getWidth(projectionExtent);\n      var x = coordinate[0];\n      if (x < projectionExtent[0] || x > projectionExtent[2]) {\n        var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n        translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n      }\n    }\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = this.getLayerRenderer(layer);\n        var source = /** @type {import(\"../layer/Layer.js\").default} */ (layer).getSource();\n        if (source) {\n          result = layerRenderer.forEachFeatureAtCoordinate(\n            source.getWrapX() ? translatedCoordinate : coordinate,\n            frameState, hitTolerance, forEachFeatureAtCoordinate);\n        }\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    return abstract();\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  MapRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n\n    return hasFeature !== undefined;\n  };\n\n  /**\n   * @param {import(\"../layer/Base.js\").default} layer Layer.\n   * @protected\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRenderer = function getLayerRenderer (layer) {\n    var layerKey = getUid(layer);\n    if (layerKey in this.layerRenderers_) {\n      return this.layerRenderers_[layerKey];\n    } else {\n      var renderer;\n      for (var i = 0, ii = this.layerRendererConstructors_.length; i < ii; ++i) {\n        var candidate = this.layerRendererConstructors_[i];\n        if (candidate['handles'](layer)) {\n          renderer = candidate['create'](this, layer);\n          break;\n        }\n      }\n      if (renderer) {\n        this.layerRenderers_[layerKey] = renderer;\n        this.layerRendererListeners_[layerKey] = listen(renderer,\n          EventType.CHANGE, this.handleLayerRendererChange_, this);\n      } else {\n        throw new Error('Unable to create renderer for layer: ' + layer.getType());\n      }\n      return renderer;\n    }\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @protected\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRendererByKey = function getLayerRendererByKey (layerKey) {\n    return this.layerRenderers_[layerKey];\n  };\n\n  /**\n   * @protected\n   * @return {Object<string, import(\"./Layer.js\").default>} Layer renderers.\n   */\n  MapRenderer.prototype.getLayerRenderers = function getLayerRenderers () {\n    return this.layerRenderers_;\n  };\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  MapRenderer.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handle changes in a layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.handleLayerRendererChange_ = function handleLayerRendererChange_ () {\n    this.map_.render();\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.removeLayerRendererByKey_ = function removeLayerRendererByKey_ (layerKey) {\n    var layerRenderer = this.layerRenderers_[layerKey];\n    delete this.layerRenderers_[layerKey];\n\n    unlistenByKey(this.layerRendererListeners_[layerKey]);\n    delete this.layerRendererListeners_[layerKey];\n\n    return layerRenderer;\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  MapRenderer.prototype.removeUnusedLayerRenderers_ = function removeUnusedLayerRenderers_ (map, frameState) {\n    for (var layerKey in this.layerRenderers_) {\n      if (!frameState || !(layerKey in frameState.layerStates)) {\n        this.removeLayerRendererByKey_(layerKey).dispose();\n      }\n    }\n  };\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  MapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n    abstract();\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleExpireIconCache = function scheduleExpireIconCache (frameState) {\n    frameState.postRenderFunctions.push(/** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (expireIconCache));\n  };\n\n  /**\n   * @param {!import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function scheduleRemoveUnusedLayerRenderers (frameState) {\n    for (var layerKey in this.layerRenderers_) {\n      if (!(layerKey in frameState.layerStates)) {\n        frameState.postRenderFunctions.push(\n          /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (this.removeUnusedLayerRenderers_.bind(this))\n        );\n        return;\n      }\n    }\n  };\n\n  return MapRenderer;\n}(Disposable));\n\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\n\n/**\n * @param {import(\"../layer/Layer.js\").State} state1 First layer state.\n * @param {import(\"../layer/Layer.js\").State} state2 Second layer state.\n * @return {number} The zIndex difference.\n */\nexport function sortByZIndex(state1, state2) {\n  return state1.zIndex - state2.zIndex;\n}\nexport default MapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/canvas/Map\n */\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\nimport {includes, stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\n\n\n/**\n * @type {Array<typeof import(\"../Layer.js\").default>}\n */\nexport var layerRendererConstructors = [];\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CanvasMapRenderer = /*@__PURE__*/(function (MapRenderer) {\n  function CanvasMapRenderer(map) {\n    MapRenderer.call(this, map);\n\n    var container = map.getViewport();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = this.context_.canvas;\n\n    this.canvas_.style.width = '100%';\n    this.canvas_.style.height = '100%';\n    this.canvas_.style.display = 'block';\n    this.canvas_.className = CLASS_UNSELECTABLE;\n    container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( MapRenderer ) CanvasMapRenderer.__proto__ = MapRenderer;\n  CanvasMapRenderer.prototype = Object.create( MapRenderer && MapRenderer.prototype );\n  CanvasMapRenderer.prototype.constructor = CanvasMapRenderer;\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  CanvasMapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\n    var map = this.getMap();\n    var context = this.context_;\n    if (map.hasListener(type)) {\n      var extent = frameState.extent;\n      var pixelRatio = frameState.pixelRatio;\n      var viewState = frameState.viewState;\n      var rotation = viewState.rotation;\n\n      var transform = this.getTransform(frameState);\n\n      var vectorContext = new CanvasImmediateRenderer(context, pixelRatio,\n        extent, transform, rotation);\n      var composeEvent = new RenderEvent(type, vectorContext,\n        frameState, context, null);\n      map.dispatchEvent(composeEvent);\n    }\n  };\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  CanvasMapRenderer.prototype.getTransform = function getTransform (frameState) {\n    var viewState = frameState.viewState;\n    var dx1 = this.canvas_.width / 2;\n    var dy1 = this.canvas_.height / 2;\n    var sx = frameState.pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0];\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.canvas_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var context = this.context_;\n    var pixelRatio = frameState.pixelRatio;\n    var width = Math.round(frameState.size[0] * pixelRatio);\n    var height = Math.round(frameState.size[1] * pixelRatio);\n    if (this.canvas_.width != width || this.canvas_.height != height) {\n      this.canvas_.width = width;\n      this.canvas_.height = height;\n    } else {\n      context.clearRect(0, 0, width, height);\n    }\n\n    var rotation = frameState.viewState.rotation;\n\n    this.calculateMatrices2D(frameState);\n\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    var layerStatesArray = frameState.layerStatesArray;\n    stableSort(layerStatesArray, sortByZIndex);\n\n    if (rotation) {\n      context.save();\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n\n    var viewResolution = frameState.viewState.resolution;\n    var i, ii;\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      var layer = layerState.layer;\n      var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this.getLayerRenderer(layer));\n      if (!visibleAtResolution(layerState, viewResolution) ||\n          layerState.sourceState != SourceState.READY) {\n        continue;\n      }\n      if (layerRenderer.prepareFrame(frameState, layerState)) {\n        layerRenderer.composeFrame(frameState, layerState, context);\n      }\n    }\n\n    if (rotation) {\n      context.restore();\n    }\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.canvas_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleRemoveUnusedLayerRenderers(frameState);\n    this.scheduleExpireIconCache(frameState);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n\n    var coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform, pixel.slice());\n\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this.getLayerRenderer(layer));\n        result = layerRenderer.forEachLayerAtCoordinate(\n          coordinate, frameState, hitTolerance, callback, thisArg);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    MapRenderer.prototype.registerLayerRenderers.call(this, constructors);\n    for (var i = 0, ii = constructors.length; i < ii; ++i) {\n      var ctor = constructors[i];\n      if (!includes(layerRendererConstructors, ctor)) {\n        layerRendererConstructors.push(ctor);\n      }\n    }\n  };\n\n  return CanvasMapRenderer;\n}(MapRenderer));\n\n\nexport default CanvasMapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {abstract} from '../../util.js';\nimport {getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../../extent.js';\nimport {TRUE} from '../../functions.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @abstract\n */\nvar CanvasLayerRenderer = /*@__PURE__*/(function (LayerRenderer) {\n  function CanvasLayerRenderer(layer) {\n\n    LayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( LayerRenderer ) CanvasLayerRenderer.__proto__ = LayerRenderer;\n  CanvasLayerRenderer.prototype = Object.create( LayerRenderer && LayerRenderer.prototype );\n  CanvasLayerRenderer.prototype.constructor = CanvasLayerRenderer;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.clip = function clip (context, frameState, extent) {\n    var pixelRatio = frameState.pixelRatio;\n    var width = frameState.size[0] * pixelRatio;\n    var height = frameState.size[1] * pixelRatio;\n    var rotation = frameState.viewState.rotation;\n    var topLeft = getTopLeft(extent);\n    var topRight = getTopRight(extent);\n    var bottomRight = getBottomRight(extent);\n    var bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, width / 2, height / 2);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, width / 2, height / 2);\n  };\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @private\n   */\n  CanvasLayerRenderer.prototype.dispatchComposeEvent_ = function dispatchComposeEvent_ (type, context, frameState, opt_transform) {\n    var layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      var width = frameState.size[0] * frameState.pixelRatio;\n      var height = frameState.size[1] * frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      rotateAtOffset(context, -rotation, width / 2, height / 2);\n      var transform = opt_transform !== undefined ?\n        opt_transform : this.getTransform(frameState, 0);\n      var render = new CanvasImmediateRenderer(\n        context, frameState.pixelRatio, frameState.extent, transform,\n        frameState.viewState.rotation);\n      var composeEvent = new RenderEvent(type, render, frameState,\n        context, null);\n      layer.dispatchEvent(composeEvent);\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n  };\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  CanvasLayerRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE);\n\n    if (hasFeature) {\n      return callback.call(thisArg, this.getLayer(), null);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.preCompose = function preCompose (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.RENDER, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  CanvasLayerRenderer.prototype.getTransform = function getTransform (frameState, offsetX) {\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var dx1 = pixelRatio * frameState.size[0] / 2;\n    var dy1 = pixelRatio * frameState.size[1] / 2;\n    var sx = pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0] + offsetX;\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @return {boolean} whether composeFrame should be called.\n   */\n  CanvasLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    return abstract();\n  };\n\n  return CanvasLayerRenderer;\n}(LayerRenderer));\n\nexport default CanvasLayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/Layer\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport SourceState from '../source/State.js';\n\nvar LayerRenderer = /*@__PURE__*/(function (Observable) {\n  function LayerRenderer(layer) {\n\n    Observable.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../layer/Layer.js\").default}\n     */\n    this.layer_ = layer;\n\n  }\n\n  if ( Observable ) LayerRenderer.__proto__ = Observable;\n  LayerRenderer.prototype = Object.create( Observable && Observable.prototype );\n  LayerRenderer.prototype.constructor = LayerRenderer;\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  LayerRenderer.prototype.createLoadedTileFinder = function createLoadedTileFinder (source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      function(zoom, tileRange) {\n        /**\n         * @param {import(\"../Tile.js\").default} tile Tile.\n         */\n        function callback(tile) {\n          if (!tiles[zoom]) {\n            tiles[zoom] = {};\n          }\n          tiles[zoom][tile.tileCoord.toString()] = tile;\n        }\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @return {T|void} Callback result.\n   * @template T\n   */\n  LayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback) {};\n\n  /**\n   * @return {import(\"../layer/Layer.js\").default} Layer.\n   */\n  LayerRenderer.prototype.getLayer = function getLayer () {\n    return this.layer_;\n  };\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  LayerRenderer.prototype.handleImageChange_ = function handleImageChange_ (event) {\n    var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Is there a feature at the given coordinate?\n   */\n  LayerRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState) {\n    return false;\n  };\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  LayerRenderer.prototype.loadImage = function loadImage (image) {\n    var imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      listen(image, EventType.CHANGE, this.handleImageChange_, this);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  };\n\n  /**\n   * @protected\n   */\n  LayerRenderer.prototype.renderIfReadyAndVisible = function renderIfReadyAndVisible () {\n    var layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  LayerRenderer.prototype.scheduleExpireCache = function scheduleExpireCache (frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../PluggableMap.js\").default} map Map.\n       * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      var postRenderFunction = function(tileSource, map, frameState) {\n        var tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]);\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction)\n      );\n    }\n  };\n\n  /**\n   * @param {!Object<string, !Object<string, import(\"../TileRange.js\").default>>} usedTiles Used tiles.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @param {number} z Z.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @protected\n   */\n  LayerRenderer.prototype.updateUsedTiles = function updateUsedTiles (usedTiles, tileSource, z, tileRange) {\n    // FIXME should we use tilesToDrawByZ instead?\n    var tileSourceKey = getUid(tileSource);\n    var zKey = z.toString();\n    if (tileSourceKey in usedTiles) {\n      if (zKey in usedTiles[tileSourceKey]) {\n        usedTiles[tileSourceKey][zKey].extend(tileRange);\n      } else {\n        usedTiles[tileSourceKey][zKey] = tileRange;\n      }\n    } else {\n      usedTiles[tileSourceKey] = {};\n      usedTiles[tileSourceKey][zKey] = tileRange;\n    }\n  };\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(this: T, import(\"../Tile.js\").default)=} opt_tileCallback Tile callback.\n   * @param {T=} opt_this Object to use as `this` in `opt_tileCallback`.\n   * @protected\n   * @template T\n   */\n  LayerRenderer.prototype.manageTilePyramid = function manageTilePyramid (\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback,\n    opt_this\n  ) {\n    var tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    var wantedTiles = frameState.wantedTiles[tileSourceKey];\n    var tileQueue = frameState.tileQueue;\n    var minZoom = tileGrid.getMinZoom();\n    var tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([tile, tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback.call(opt_this, tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n  };\n\n  return LayerRenderer;\n}(Observable));\n\nexport default LayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/canvas/IntermediateCanvas\n */\nimport {abstract} from '../../util.js';\nimport {scale as scaleCoordinate} from '../../coordinate.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, intersects} from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {create as createTransform, apply as applyTransform} from '../../transform.js';\n\n/**\n * @abstract\n */\nvar IntermediateCanvasRenderer = /*@__PURE__*/(function (CanvasLayerRenderer) {\n  function IntermediateCanvasRenderer(layer) {\n\n    CanvasLayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.coordinateToCanvasPixelTransform = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitCanvasContext_ = null;\n\n  }\n\n  if ( CanvasLayerRenderer ) IntermediateCanvasRenderer.__proto__ = CanvasLayerRenderer;\n  IntermediateCanvasRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  IntermediateCanvasRenderer.prototype.constructor = IntermediateCanvasRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n\n    this.preCompose(context, frameState);\n\n    var image = this.getImage();\n    if (image) {\n\n      // clipped rendering if layer extent is set\n      var extent = layerState.extent;\n      var clipped = extent !== undefined &&\n          !containsExtent(extent, frameState.extent) &&\n          intersects(extent, frameState.extent);\n      if (clipped) {\n        this.clip(context, frameState, /** @type {import(\"../../extent.js\").Extent} */ (extent));\n      }\n\n      var imageTransform = this.getImageTransform();\n      // for performance reasons, context.save / context.restore is not used\n      // to save and restore the transformation matrix and the opacity.\n      // see http://jsperf.com/context-save-restore-versus-variable\n      var alpha = context.globalAlpha;\n      context.globalAlpha = layerState.opacity;\n\n      // for performance reasons, context.setTransform is only used\n      // when the view is rotated. see http://jsperf.com/canvas-transform\n      var dx = imageTransform[4];\n      var dy = imageTransform[5];\n      var dw = image.width * imageTransform[0];\n      var dh = image.height * imageTransform[3];\n      if (dw >= 0.5 && dh >= 0.5) {\n        context.drawImage(image, 0, 0, +image.width, +image.height,\n          Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n      }\n      context.globalAlpha = alpha;\n\n      if (clipped) {\n        context.restore();\n      }\n    }\n\n    this.postCompose(context, frameState, layerState);\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Canvas.\n   */\n  IntermediateCanvasRenderer.prototype.getImage = function getImage () {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @return {!import(\"../../transform.js\").Transform} Image transform.\n   */\n  IntermediateCanvasRenderer.prototype.getImageTransform = function getImageTransform () {\n    return abstract();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.getImage()) {\n      return undefined;\n    }\n\n    var pixel = applyTransform(this.coordinateToCanvasPixelTransform, coordinate.slice());\n    scaleCoordinate(pixel, frameState.viewState.resolution / this.renderedResolution);\n\n    if (!this.hitCanvasContext_) {\n      this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n    }\n\n    this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n    this.hitCanvasContext_.drawImage(this.getImage(), pixel[0], pixel[1], 1, 1, 0, 0, 1, 1);\n\n    var imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(), imageData);\n    } else {\n      return undefined;\n    }\n  };\n\n  return IntermediateCanvasRenderer;\n}(CanvasLayerRenderer));\n\n\nexport default IntermediateCanvasRenderer;\n\n//# sourceMappingURL=IntermediateCanvas.js.map","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {getHeight, getIntersection, getWidth, isEmpty} from '../../extent.js';\nimport VectorRenderType from '../../layer/VectorRenderType.js';\nimport {assign} from '../../obj.js';\nimport {layerRendererConstructors} from './Map.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = /*@__PURE__*/(function (IntermediateCanvasRenderer) {\n  function CanvasImageLayerRenderer(imageLayer) {\n\n    IntermediateCanvasRenderer.call(this, imageLayer);\n\n    /**\n     * @private\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @type {!Array<string>}\n     */\n    this.skippedFeatures_ = [];\n\n    /**\n     * @private\n     * @type {import(\"./VectorLayer.js\").default}\n     */\n    this.vectorRenderer_ = null;\n\n    if (imageLayer.getType() === LayerType.VECTOR) {\n      for (var i = 0, ii = layerRendererConstructors.length; i < ii; ++i) {\n        var ctor = layerRendererConstructors[i];\n        if (ctor !== CanvasImageLayerRenderer && ctor['handles'](imageLayer)) {\n          this.vectorRenderer_ = /** @type {import(\"./VectorLayer.js\").default} */ (new ctor(imageLayer));\n          break;\n        }\n      }\n    }\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasImageLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasImageLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasImageLayerRenderer.prototype.constructor = CanvasImageLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    if (this.vectorRenderer_) {\n      this.vectorRenderer_.dispose();\n    }\n    IntermediateCanvasRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImage = function getImage () {\n    return !this.image_ ? null : this.image_.getImage();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var viewCenter = viewState.center;\n    var viewResolution = viewState.resolution;\n\n    var image;\n    var imageLayer = /** @type {import(\"../../layer/Image.js\").default} */ (this.getLayer());\n    var imageSource = /** @type {import(\"../../source/Image.js\").default} */ (imageLayer.getSource());\n\n    var hints = frameState.viewHints;\n\n    var vectorRenderer = this.vectorRenderer_;\n    var renderedExtent = frameState.extent;\n    if (!vectorRenderer && layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\n    }\n\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n        !isEmpty(renderedExtent)) {\n      var projection = viewState.projection;\n      if (!ENABLE_RASTER_REPROJECTION) {\n        var sourceProjection = imageSource.getProjection();\n        if (sourceProjection) {\n          projection = sourceProjection;\n        }\n      }\n      var skippedFeatures = this.skippedFeatures_;\n      if (vectorRenderer) {\n        var context = vectorRenderer.context;\n        var imageFrameState = /** @type {import(\"../../PluggableMap.js\").FrameState} */ (assign({}, frameState, {\n          size: [\n            getWidth(renderedExtent) / viewResolution,\n            getHeight(renderedExtent) / viewResolution\n          ],\n          viewState: /** @type {import(\"../../View.js\").State} */ (assign({}, frameState.viewState, {\n            rotation: 0\n          }))\n        }));\n        var newSkippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\n        image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function(callback) {\n          if (vectorRenderer.prepareFrame(imageFrameState, layerState) &&\n              (vectorRenderer.replayGroupChanged ||\n              !equals(skippedFeatures, newSkippedFeatures))) {\n            context.canvas.width = imageFrameState.size[0] * pixelRatio;\n            context.canvas.height = imageFrameState.size[1] * pixelRatio;\n            vectorRenderer.compose(context, imageFrameState, layerState);\n            skippedFeatures = newSkippedFeatures;\n            callback();\n          }\n        });\n      } else {\n        image = imageSource.getImage(\n          renderedExtent, viewResolution, pixelRatio, projection);\n      }\n      if (image && this.loadImage(image)) {\n        this.image_ = image;\n        this.skippedFeatures_ = skippedFeatures;\n      }\n    }\n\n    if (this.image_) {\n      image = this.image_;\n      var imageExtent = image.getExtent();\n      var imageResolution = image.getResolution();\n      var imagePixelRatio = image.getPixelRatio();\n      var scale = pixelRatio * imageResolution /\n          (viewResolution * imagePixelRatio);\n      var transform = composeTransform(this.imageTransform_,\n        pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n        scale, scale,\n        0,\n        imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution,\n        imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n      composeTransform(this.coordinateToCanvasPixelTransform,\n        pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n        pixelRatio / viewResolution, -pixelRatio / viewResolution,\n        0,\n        -viewCenter[0], -viewCenter[1]);\n\n      this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n    }\n\n    return !!this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback);\n    } else {\n      return IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback);\n    }\n  };\n\n  return CanvasImageLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE ||\n    layer.getType() === LayerType.VECTOR &&\n    /** @type {import(\"../../layer/Vector.js\").default} */ (layer).getRenderMode() === VectorRenderType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasImageLayerRenderer} The layer renderer.\n */\nCanvasImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasImageLayerRenderer(/** @type {import(\"../../layer/Image.js\").default} */ (layer));\n};\n\n\nexport default CanvasImageLayerRenderer;\n\n//# sourceMappingURL=ImageLayer.js.map","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = function TileRange(minX, maxX, minY, maxY) {\n\n  /**\n   * @type {number}\n   */\n  this.minX = minX;\n\n  /**\n   * @type {number}\n   */\n  this.maxX = maxX;\n\n  /**\n   * @type {number}\n   */\n  this.minY = minY;\n\n  /**\n   * @type {number}\n   */\n  this.maxY = maxY;\n\n};\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {boolean} Contains tile coordinate.\n */\nTileRange.prototype.contains = function contains (tileCoord) {\n  return this.containsXY(tileCoord[1], tileCoord[2]);\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Contains.\n */\nTileRange.prototype.containsTileRange = function containsTileRange (tileRange) {\n  return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n     this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n};\n\n/**\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @return {boolean} Contains coordinate.\n */\nTileRange.prototype.containsXY = function containsXY (x, y) {\n  return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Equals.\n */\nTileRange.prototype.equals = function equals (tileRange) {\n  return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n     this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n */\nTileRange.prototype.extend = function extend (tileRange) {\n  if (tileRange.minX < this.minX) {\n    this.minX = tileRange.minX;\n  }\n  if (tileRange.maxX > this.maxX) {\n    this.maxX = tileRange.maxX;\n  }\n  if (tileRange.minY < this.minY) {\n    this.minY = tileRange.minY;\n  }\n  if (tileRange.maxY > this.maxY) {\n    this.maxY = tileRange.maxY;\n  }\n};\n\n/**\n * @return {number} Height.\n */\nTileRange.prototype.getHeight = function getHeight () {\n  return this.maxY - this.minY + 1;\n};\n\n/**\n * @return {import(\"./size.js\").Size} Size.\n */\nTileRange.prototype.getSize = function getSize () {\n  return [this.getWidth(), this.getHeight()];\n};\n\n/**\n * @return {number} Width.\n */\nTileRange.prototype.getWidth = function getWidth () {\n  return this.maxX - this.minX + 1;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Intersects.\n */\nTileRange.prototype.intersects = function intersects (tileRange) {\n  return this.minX <= tileRange.maxX &&\n     this.maxX >= tileRange.minX &&\n     this.minY <= tileRange.maxY &&\n     this.maxY >= tileRange.minY;\n};\n\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\n\nexport default TileRange;\n\n//# sourceMappingURL=TileRange.js.map","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, createEmpty, equals, getIntersection, isEmpty} from '../../extent.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /*@__PURE__*/(function (IntermediateCanvasRenderer) {\n  function CanvasTileLayerRenderer(tileLayer, opt_noContext) {\n\n    IntermediateCanvasRenderer.call(this, tileLayer);\n\n    /**\n     * @protected\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = opt_noContext ? null : createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.oversampling_;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.zDirection = 0;\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasTileLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasTileLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasTileLayerRenderer.prototype.constructor = CanvasTileLayerRenderer;\n\n  /**\n   * @private\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  CanvasTileLayerRenderer.prototype.isDrawableTile_ = function isDrawableTile_ (tile) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileState = tile.getState();\n    var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return tileState == TileState.LOADED ||\n        tileState == TileState.EMPTY ||\n        tileState == TileState.ERROR && !useInterimTilesOnError;\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  CanvasTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile_(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var viewResolution = viewState.resolution;\n    var viewCenter = viewState.center;\n\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    var sourceRevision = tileSource.getRevision();\n    var tileGrid = tileSource.getTileGridForProjection(projection);\n    var z = tileGrid.getZForResolution(viewResolution, this.zDirection);\n    var tileResolution = tileGrid.getResolution(z);\n    var oversampling = Math.round(viewResolution / tileResolution) || 1;\n    var extent = frameState.extent;\n\n    if (layerState.extent !== undefined) {\n      extent = getIntersection(extent, layerState.extent);\n    }\n    if (isEmpty(extent)) {\n      // Return false to prevent the rendering of the layer.\n      return false;\n    }\n\n    var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    var imageExtent = tileGrid.getTileRangeExtent(z, tileRange);\n\n    var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    var tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    var findLoadedTiles = this.createLoadedTileFinder(\n      tileSource, projection, tilesToDrawByZ);\n\n    var hints = frameState.viewHints;\n    var animatingOrInteracting = hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING];\n\n    var tmpExtent = this.tmpExtent;\n    var tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    var tile, x, y;\n    for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (Date.now() - frameState.time > 16 && animatingOrInteracting) {\n          continue;\n        }\n        tile = this.getTile(z, x, y, pixelRatio, projection);\n        if (this.isDrawableTile_(tile)) {\n          var uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            var inTransition = tile.inTransition(uid);\n            if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        var childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord, tmpTileRange, tmpExtent);\n        var covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n        }\n\n      }\n    }\n\n    var renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n    if (!(this.renderedResolution && Date.now() - frameState.time > 16 && animatingOrInteracting) && (\n      this.newTiles_ ||\n          !(this.renderedExtent_ && containsExtent(this.renderedExtent_, extent)) ||\n          this.renderedRevision != sourceRevision ||\n          oversampling != this.oversampling_ ||\n          !animatingOrInteracting && renderedResolution != this.renderedResolution\n    )) {\n\n      var context = this.context;\n      if (context) {\n        var tilePixelSize = tileSource.getTilePixelSize(z, pixelRatio, projection);\n        var width = Math.round(tileRange.getWidth() * tilePixelSize[0] / oversampling);\n        var height = Math.round(tileRange.getHeight() * tilePixelSize[1] / oversampling);\n        var canvas = context.canvas;\n        if (canvas.width != width || canvas.height != height) {\n          this.oversampling_ = oversampling;\n          canvas.width = width;\n          canvas.height = height;\n        } else {\n          if ((this.renderedExtent_ && !equals(imageExtent, this.renderedExtent_)) ||\n              this.renderedRevision != sourceRevision) {\n            context.clearRect(0, 0, width, height);\n          }\n          oversampling = this.oversampling_;\n        }\n      }\n\n      this.renderedTiles.length = 0;\n      /** @type {Array<number>} */\n      var zs = Object.keys(tilesToDrawByZ).map(Number);\n      zs.sort(function(a, b) {\n        if (a === z) {\n          return 1;\n        } else if (b === z) {\n          return -1;\n        } else {\n          return a > b ? 1 : a < b ? -1 : 0;\n        }\n      });\n      var currentResolution, currentScale, currentTilePixelSize, currentZ, i, ii;\n      var tileExtent, tileGutter, tilesToDraw, w, h;\n      for (i = 0, ii = zs.length; i < ii; ++i) {\n        currentZ = zs[i];\n        currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n        currentResolution = tileGrid.getResolution(currentZ);\n        currentScale = currentResolution / tileResolution;\n        tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n        tilesToDraw = tilesToDrawByZ[currentZ];\n        for (var tileCoordKey in tilesToDraw) {\n          tile = tilesToDraw[tileCoordKey];\n          tileExtent = tileGrid.getTileCoordExtent(tile.getTileCoord(), tmpExtent);\n          x = (tileExtent[0] - imageExtent[0]) / tileResolution * tilePixelRatio / oversampling;\n          y = (imageExtent[3] - tileExtent[3]) / tileResolution * tilePixelRatio / oversampling;\n          w = currentTilePixelSize[0] * currentScale / oversampling;\n          h = currentTilePixelSize[1] * currentScale / oversampling;\n          this.drawTileImage(tile, frameState, layerState, x, y, w, h, tileGutter, z === currentZ);\n          this.renderedTiles.push(tile);\n        }\n      }\n\n      this.renderedRevision = sourceRevision;\n      this.renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n      this.renderedExtent_ = imageExtent;\n    }\n\n    var scale = this.renderedResolution / viewResolution;\n    var transform = composeTransform(this.imageTransform_,\n      pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n      scale, scale,\n      0,\n      (this.renderedExtent_[0] - viewCenter[0]) / this.renderedResolution * pixelRatio,\n      (viewCenter[1] - this.renderedExtent_[3]) / this.renderedResolution * pixelRatio);\n    composeTransform(this.coordinateToCanvasPixelTransform,\n      pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n      pixelRatio / viewResolution, -pixelRatio / viewResolution,\n      0,\n      -viewCenter[0], -viewCenter[1]);\n\n\n    this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n    this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio,\n      projection, extent, z, tileLayer.getPreload());\n    this.scheduleExpireCache(frameState, tileSource);\n\n    return this.renderedTiles.length > 0;\n  };\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  CanvasTileLayerRenderer.prototype.drawTileImage = function drawTileImage (tile, frameState, layerState, x, y, w, h, gutter, transition) {\n    var image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    var uid = getUid(this);\n    var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    if (alpha === 1 && !tileSource.getOpaque(frameState.viewState.projection)) {\n      this.context.clearRect(x, y, w, h);\n    }\n    var alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(image, gutter, gutter,\n      image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImage = function getImage () {\n    var context = this.context;\n    return context ? context.canvas : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  CanvasTileLayerRenderer.prototype.getTileImage = function getTileImage (tile) {\n    return /** @type {import(\"../../ImageTile.js\").default} */ (tile).getImage();\n  };\n\n  return CanvasTileLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasTileLayerRenderer} The layer renderer.\n */\nCanvasTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasTileLayerRenderer(/** @type {import(\"../../layer/Tile.js\").default} */ (layer));\n};\n\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\n\nexport default CanvasTileLayerRenderer;\n\n//# sourceMappingURL=TileLayer.js.map","/**\n * @module ol/render/ReplayGroup\n */\nimport {abstract} from '../util.js';\n\n/**\n * Base class for replay groups.\n */\nvar ReplayGroup = function ReplayGroup () {};\n\nReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {boolean} Is empty.\n */\nReplayGroup.prototype.isEmpty = function isEmpty () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @param {boolean} group Group with previous replay\n * @return {Array<*>} The resulting instruction group\n */\nReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\n  return abstract();\n};\n\nexport default ReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/render/ReplayType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text'\n};\n\n//# sourceMappingURL=ReplayType.js.map","/**\n * @module ol/geom/flat/length\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  var length = 0;\n  for (var i = offset + stride; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n\n//# sourceMappingURL=length.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {function(string):number} measure Measure function returning the\n * width of the character passed as 1st argument.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @return {Array<Array<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates, offset, end, stride, text, measure, startM, maxAngle) {\n  var result = [];\n\n  // Keep text upright\n  var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n\n  var numChars = text.length;\n\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  offset += stride;\n  var x2 = flatCoordinates[offset];\n  var y2 = flatCoordinates[offset + 1];\n  var segmentM = 0;\n  var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\n  var chunk = '';\n  var chunkLength = 0;\n  var data, index, previousAngle;\n  for (var i = 0; i < numChars; ++i) {\n    index = reverse ? numChars - i - 1 : i;\n    var char = text.charAt(index);\n    chunk = reverse ? char + chunk : chunk + char;\n    var charLength = measure(chunk) - chunkLength;\n    chunkLength += charLength;\n    var charM = startM + charLength / 2;\n    while (offset < end - stride && segmentM + segmentLength < charM) {\n      x1 = x2;\n      y1 = y2;\n      offset += stride;\n      x2 = flatCoordinates[offset];\n      y2 = flatCoordinates[offset + 1];\n      segmentM += segmentLength;\n      segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    }\n    var segmentPos = charM - segmentM;\n    var angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -Math.PI : Math.PI;\n    }\n    if (previousAngle !== undefined) {\n      var delta = angle - previousAngle;\n      delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    var interpolate = segmentPos / segmentLength;\n    var x = lerp(x1, x2, interpolate);\n    var y = lerp(y1, y2, interpolate);\n    if (previousAngle == angle) {\n      if (reverse) {\n        data[0] = x;\n        data[1] = y;\n        data[2] = charLength / 2;\n      }\n      data[4] = chunk;\n    } else {\n      chunk = char;\n      chunkLength = charLength;\n      data = [x, y, charLength / 2, angle, chunk];\n      if (reverse) {\n        result.unshift(data);\n      } else {\n        result.push(data);\n      }\n      previousAngle = angle;\n    }\n    startM += charLength;\n  }\n  return result;\n}\n\n//# sourceMappingURL=textpath.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nvar Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12\n};\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\n\n\nexport default Instruction;\n\n//# sourceMappingURL=Instruction.js.map","/**\n * @module ol/render/replay\n */\nimport ReplayType from './ReplayType.js';\n\n\n/**\n * @const\n * @type {Array<ReplayType>}\n */\nexport var ORDER = [\n  ReplayType.POLYGON,\n  ReplayType.CIRCLE,\n  ReplayType.LINE_STRING,\n  ReplayType.IMAGE,\n  ReplayType.TEXT,\n  ReplayType.DEFAULT\n];\n\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;\n\n//# sourceMappingURL=replay.js.map","/**\n * @module ol/render/canvas/Replay\n */\nimport {getUid} from '../../util.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {buffer, clone, coordinateRelationship, createEmpty, createOrUpdate,\n  createOrUpdateEmpty, extend, extendCoordinate, intersects} from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray} from '../../geom/flat/inflate.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {isEmpty} from '../../obj.js';\nimport VectorContext from '../VectorContext.js';\nimport {drawImage, resetTransform, defaultPadding, defaultFillStyle, defaultStrokeStyle,\n  defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset,\n  defaultLineDash, defaultLineCap} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  apply as applyTransform,\n  setFromArray as transformSetFromArray\n} from '../../transform.js';\n\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n\n\n/**\n * @type {!import(\"../../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n\n\nvar CanvasReplay = /*@__PURE__*/(function (VectorContext) {\n  function CanvasReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    VectorContext.call(this);\n\n    /**\n     * @type {?}\n     */\n    this.declutterTree = declutterTree;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n  }\n\n  if ( VectorContext ) CanvasReplay.__proto__ = VectorContext;\n  CanvasReplay.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasReplay.prototype.constructor = CanvasReplay;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayTextBackground_ = function replayTextBackground_ (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(context, /** @type {Array<*>} */ (strokeInstruction));\n      context.stroke();\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {number} height Height.\n   * @param {number} opacity Opacity.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {number} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {number} width Width.\n   * @param {Array<number>} padding Padding.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayImage_ = function replayImage_ (\n    context,\n    x,\n    y,\n    image,\n    anchorX,\n    anchorY,\n    declutterGroup,\n    height,\n    opacity,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    width,\n    padding,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    var fillStroke = fillInstruction || strokeInstruction;\n    anchorX *= scale;\n    anchorY *= scale;\n    x -= anchorX;\n    y -= anchorY;\n\n    var w = (width + originX > image.width) ? image.width - originX : width;\n    var h = (height + originY > image.height) ? image.height - originY : height;\n    var boxW = padding[3] + w * scale + padding[1];\n    var boxH = padding[0] + h * scale + padding[2];\n    var boxX = x - padding[3];\n    var boxY = y - padding[0];\n\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p1;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p2;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p3;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p4;\n    if (fillStroke || rotation !== 0) {\n      p1 = [boxX, boxY];\n      p2 = [boxX + boxW, boxY];\n      p3 = [boxX + boxW, boxY + boxH];\n      p4 = [boxX, boxY + boxH];\n    }\n\n    var transform = null;\n    if (rotation !== 0) {\n      var centerX = x + anchorX;\n      var centerY = y + anchorY;\n      transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n\n      createOrUpdateEmpty(tmpExtent);\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p1));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p2));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p3));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p4));\n    } else {\n      createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n    }\n    var canvas = context.canvas;\n    var strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n    var intersects =\n        tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n        tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n\n    if (declutterGroup) {\n      if (!intersects && declutterGroup[4] == 1) {\n        return;\n      }\n      extend(declutterGroup, tmpExtent);\n      var declutterArgs = intersects ?\n        [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n        null;\n      if (declutterArgs && fillStroke) {\n        declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n      }\n      declutterGroup.push(declutterArgs);\n    } else if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(context, p1, p2, p3, p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction));\n      }\n      drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n    }\n  };\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  CanvasReplay.prototype.applyPixelRatio = function applyPixelRatio (dashArray) {\n    var pixelRatio = this.pixelRatio;\n    return pixelRatio == 1 ? dashArray : dashArray.map(function(dash) {\n      return dash * pixelRatio;\n    });\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  CanvasReplay.prototype.appendFlatCoordinates = function appendFlatCoordinates (flatCoordinates, offset, end, stride, closed, skipFirst) {\n\n    var myEnd = this.coordinates.length;\n    var extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    var lastCoord = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var nextCoord = [NaN, NaN];\n    var skipped = true;\n\n    var i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          this.coordinates[myEnd++] = lastCoord[0];\n          this.coordinates[myEnd++] = lastCoord[1];\n        }\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else if (nextRel === Relationship.INTERSECTING) {\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastCoord[0] = nextCoord[0];\n      lastCoord[1] = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      this.coordinates[myEnd++] = lastCoord[0];\n      this.coordinates[myEnd++] = lastCoord[1];\n    }\n    return myEnd;\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} replayEnds Replay ends.\n   * @return {number} Offset.\n   */\n  CanvasReplay.prototype.drawCustomCoordinates_ = function drawCustomCoordinates_ (flatCoordinates, offset, ends, stride, replayEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var replayEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n      replayEnds.push(replayEnd);\n      offset = end;\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasReplay.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    var type = geometry.getType();\n    var stride = geometry.getStride();\n    var replayBegin = this.coordinates.length;\n    var flatCoordinates, replayEnd, replayEnds, replayEndss;\n    var offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry);\n      flatCoordinates = geometry.getOrientedFlatCoordinates();\n      replayEndss = [];\n      var endss = geometry.getEndss();\n      offset = 0;\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var myEnds = [];\n        offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n        replayEndss.push(myEnds);\n      }\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n    } else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n      replayEnds = [];\n      flatCoordinates = (type == GeometryType.POLYGON) ?\n        /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates() :\n        geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(flatCoordinates, 0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(),\n        stride, replayEnds);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnds, geometry, renderer, inflateCoordinatesArray]);\n    } else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      replayEnd = this.appendFlatCoordinates(\n        flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer, inflateCoordinates]);\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      replayEnd = this.coordinates.length;\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer]);\n    }\n    this.endGeometry(geometry, feature);\n  };\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.beginGeometry = function beginGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  CanvasReplay.prototype.finish = function finish () {};\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasReplay.prototype.fill_ = function fill_ (context) {\n    if (this.alignFill_) {\n      var origin = applyTransform(this.renderedTransform_, [0, 0]);\n      var repeatSize = 512 * this.pixelRatio;\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.setTransform.apply(context, resetTransform);\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  CanvasReplay.prototype.setStrokeStyle_ = function setStrokeStyle_ (context, instruction) {\n    context.strokeStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (CANVAS_LINE_DASH) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.renderDeclutter_ = function renderDeclutter_ (declutterGroup, feature) {\n    if (declutterGroup && declutterGroup.length > 5) {\n      var groupCount = declutterGroup[4];\n      if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n        /** @type {import(\"../../structs/RBush.js\").Entry} */\n        var box = {\n          minX: /** @type {number} */ (declutterGroup[0]),\n          minY: /** @type {number} */ (declutterGroup[1]),\n          maxX: /** @type {number} */ (declutterGroup[2]),\n          maxY: /** @type {number} */ (declutterGroup[3]),\n          value: feature\n        };\n        if (!this.declutterTree.collides(box)) {\n          this.declutterTree.insert(box);\n          for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\n            var declutterData = /** @type {Array} */ (declutterGroup[j]);\n            if (declutterData) {\n              if (declutterData.length > 11) {\n                this.replayTextBackground_(declutterData[0],\n                  declutterData[13], declutterData[14], declutterData[15], declutterData[16],\n                  declutterData[11], declutterData[12]);\n              }\n              drawImage.apply(undefined, declutterData);\n            }\n          }\n        }\n        declutterGroup.length = 5;\n        createOrUpdateEmpty(declutterGroup);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T|undefined} featureCallback Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replay_ = function replay_ (\n    context,\n    transform,\n    skippedFeaturesHash,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    opt_hitExtent\n  ) {\n    /** @type {Array<number>} */\n    var pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates, 0, this.coordinates.length, 2,\n        transform, this.pixelCoordinates_);\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    var skipFeatures = !isEmpty(skippedFeaturesHash);\n    var i = 0; // instruction index\n    var ii = instructions.length; // end of instructions\n    var d = 0; // data index\n    var dd; // end of per-instruction data\n    var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image;\n    var pendingFill = 0;\n    var pendingStroke = 0;\n    var lastFillInstruction = null;\n    var lastStrokeInstruction = null;\n    var coordinateCache = this.coordinateCache_;\n    var viewRotation = this.viewRotation_;\n\n    var state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n    var /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ feature;\n    var x, y;\n    while (i < ii) {\n      var instruction = instructions[i];\n      var type = /** @type {CanvasInstruction} */ (instruction[0]);\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ (instruction[1]);\n          if ((skipFeatures && skippedFeaturesHash[getUid(feature)]) || !feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (opt_hitExtent !== undefined && !intersects(\n            opt_hitExtent, feature.getGeometry().getExtent())) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          var x1 = pixelCoordinates[d];\n          var y1 = pixelCoordinates[d + 1];\n          var x2 = pixelCoordinates[d + 2];\n          var y2 = pixelCoordinates[d + 3];\n          var dx = x2 - x1;\n          var dy = y2 - y1;\n          var r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          var geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n          var renderer = instruction[4];\n          var fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          var coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */\n              (instruction[3]);\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[6]);\n          var height = /** @type {number} */ (instruction[7]);\n          var opacity = /** @type {number} */ (instruction[8]);\n          var originX = /** @type {number} */ (instruction[9]);\n          var originY = /** @type {number} */ (instruction[10]);\n          var rotateWithView = /** @type {boolean} */ (instruction[11]);\n          var rotation = /** @type {number} */ (instruction[12]);\n          var scale = /** @type {number} */ (instruction[13]);\n          var width = /** @type {number} */ (instruction[14]);\n\n          var padding = (void 0), backgroundFill = (void 0), backgroundStroke = (void 0);\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = backgroundStroke = false;\n          }\n\n          if (rotateWithView) {\n            rotation += viewRotation;\n          }\n          for (; d < dd; d += 2) {\n            this.replayImage_(context,\n              pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY,\n              declutterGroup, height, opacity, originX, originY, rotation, scale,\n              snapToPixel, width, padding,\n              backgroundFill ? /** @type {Array<*>} */ (lastFillInstruction) : null,\n              backgroundStroke ? /** @type {Array<*>} */ (lastStrokeInstruction) : null);\n          }\n          this.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          var begin = /** @type {number} */ (instruction[1]);\n          var end = /** @type {number} */ (instruction[2]);\n          var baseline = /** @type {number} */ (instruction[3]);\n          declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[4]);\n          var overflow = /** @type {number} */ (instruction[5]);\n          var fillKey = /** @type {string} */ (instruction[6]);\n          var maxAngle = /** @type {number} */ (instruction[7]);\n          var measure = /** @type {function(string):number} */ (instruction[8]);\n          var offsetY = /** @type {number} */ (instruction[9]);\n          var strokeKey = /** @type {string} */ (instruction[10]);\n          var strokeWidth = /** @type {number} */ (instruction[11]);\n          var text = /** @type {string} */ (instruction[12]);\n          var textKey = /** @type {string} */ (instruction[13]);\n          var textScale = /** @type {number} */ (instruction[14]);\n\n          var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          var textLength = measure(text);\n          if (overflow || textLength <= pathLength) {\n            /** @type {import(\"./TextReplay.js\").default} */\n            var textReplay = /** @type {?} */ (this);\n            var textAlign = textReplay.textStates[textKey].textAlign;\n            var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            var parts = drawTextOnPath(\n              pixelCoordinates, begin, end, 2, text, measure, startM, maxAngle);\n            if (parts) {\n              var c = (void 0), cc = (void 0), chars = (void 0), label = (void 0), part = (void 0);\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = textReplay.getImage(chars, textKey, '', strokeKey);\n                  anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                  anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                  this.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = textReplay.getImage(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  this.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n            }\n          }\n          this.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ (instruction[1]);\n            var result = featureCallback(feature);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   */\n  CanvasReplay.prototype.replay = function replay (context, transform, viewRotation, skippedFeaturesHash, snapToPixel) {\n    this.viewRotation_ = viewRotation;\n    this.replay_(context, transform,\n      skippedFeaturesHash, this.instructions, snapToPixel, undefined, undefined);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T=} opt_featureCallback\n   *     Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replayHitDetection = function replayHitDetection (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.replay_(context, transform, skippedFeaturesHash,\n      this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n  };\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  CanvasReplay.prototype.reverseHitDetectionInstructions = function reverseHitDetectionInstructions () {\n    var hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    var i;\n    var n = hitDetectionInstructions.length;\n    var instruction;\n    var type;\n    var begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {CanvasInstruction} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplay.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    var state = this.state;\n    if (fillStyle) {\n      var fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(fillStyleColor ?\n        fillStyleColor : defaultFillStyle);\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      var strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(strokeStyleColor ?\n        strokeStyleColor : defaultStrokeStyle);\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap = strokeStyleLineCap !== undefined ?\n        strokeStyleLineCap : defaultLineCap;\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash ?\n        strokeStyleLineDash.slice() : defaultLineDash;\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : defaultLineDashOffset;\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin = strokeStyleLineJoin !== undefined ?\n        strokeStyleLineJoin : defaultLineJoin;\n      var strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth = strokeStyleWidth !== undefined ?\n        strokeStyleWidth : defaultLineWidth;\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit = strokeStyleMiterLimit !== undefined ?\n        strokeStyleMiterLimit : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @return {Array<*>} Fill instruction.\n   */\n  CanvasReplay.prototype.createFill = function createFill (state, geometry) {\n    var fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  CanvasReplay.prototype.applyStroke = function applyStroke (state) {\n    this.instructions.push(this.createStroke(state));\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  CanvasReplay.prototype.createStroke = function createStroke (state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n      state.lineJoin, state.miterLimit,\n      this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n    ];\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasReplay, import(\"../canvas.js\").FillStrokeState, (import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default)):Array<*>} createFill Create fill.\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   */\n  CanvasReplay.prototype.updateFillStyle = function updateFillStyle (state, createFill, geometry) {\n    var fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state, geometry));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasReplay, import(\"../canvas.js\").FillStrokeState)} applyStroke Apply stroke.\n   */\n  CanvasReplay.prototype.updateStrokeStyle = function updateStrokeStyle (state, applyStroke) {\n    var strokeStyle = state.strokeStyle;\n    var lineCap = state.lineCap;\n    var lineDash = state.lineDash;\n    var lineDashOffset = state.lineDashOffset;\n    var lineJoin = state.lineJoin;\n    var lineWidth = state.lineWidth;\n    var miterLimit = state.miterLimit;\n    if (state.currentStrokeStyle != strokeStyle ||\n        state.currentLineCap != lineCap ||\n        (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n        state.currentLineDashOffset != lineDashOffset ||\n        state.currentLineJoin != lineJoin ||\n        state.currentLineWidth != lineWidth ||\n        state.currentMiterLimit != miterLimit) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  };\n\n  /**\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.endGeometry = function endGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  };\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  CanvasReplay.prototype.getBufferedMaxExtent = function getBufferedMaxExtent () {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        var width = this.resolution * (this.maxLineWidth + 1) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  };\n\n  return CanvasReplay;\n}(VectorContext));\n\n\nexport default CanvasReplay;\n\n//# sourceMappingURL=Replay.js.map","/**\n * @module ol/render/canvas/ImageReplay\n */\nimport CanvasInstruction from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\nvar CanvasImageReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasImageReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n  }\n\n  if ( CanvasReplay ) CanvasImageReplay.__proto__ = CanvasReplay;\n  CanvasImageReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasImageReplay.prototype.constructor = CanvasImageReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} My end.\n   */\n  CanvasImageReplay.prototype.drawCoordinates_ = function drawCoordinates_ (flatCoordinates, offset, end, stride) {\n    return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawPoint = function drawPoint (pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    var flatCoordinates = pointGeometry.getFlatCoordinates();\n    var stride = pointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(pointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    var stride = multiPointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(multiPointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.setImageStyle = function setImageStyle (imageStyle, declutterGroup) {\n    var anchor = imageStyle.getAnchor();\n    var size = imageStyle.getSize();\n    var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n    var image = imageStyle.getImage(1);\n    var origin = imageStyle.getOrigin();\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScale();\n    this.width_ = size[0];\n  };\n\n  return CanvasImageReplay;\n}(CanvasReplay));\n\n\nexport default CanvasImageReplay;\n\n//# sourceMappingURL=ImageReplay.js.map","/**\n * @module ol/render/canvas/LineStringReplay\n */\nimport CanvasInstruction, {strokeInstruction, beginPathInstruction} from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\nvar CanvasLineStringReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasLineStringReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasLineStringReplay.__proto__ = CanvasReplay;\n  CanvasLineStringReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasLineStringReplay.prototype.constructor = CanvasLineStringReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  CanvasLineStringReplay.prototype.drawFlatCoordinates_ = function drawFlatCoordinates_ (flatCoordinates, offset, end, stride) {\n    var myBegin = this.coordinates.length;\n    var myEnd = this.appendFlatCoordinates(\n      flatCoordinates, offset, end, stride, false, false);\n    var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    var stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(lineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var ends = multiLineStringGeometry.getEnds();\n    var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    var stride = multiLineStringGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(multiLineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.finish = function finish () {\n    var state = this.state;\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasLineStringReplay.prototype.applyStroke = function applyStroke (state) {\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    CanvasReplay.prototype.applyStroke.call(this, state);\n    this.instructions.push(beginPathInstruction);\n  };\n\n  return CanvasLineStringReplay;\n}(CanvasReplay));\n\n\nexport default CanvasLineStringReplay;\n\n//# sourceMappingURL=LineStringReplay.js.map","/**\n * @module ol/render/canvas/PolygonReplay\n */\nimport {asString} from '../../color.js';\nimport {snap} from '../../geom/flat/simplify.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport CanvasInstruction, {\n  fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction\n} from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\n\nvar CanvasPolygonReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasPolygonReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasPolygonReplay.__proto__ = CanvasReplay;\n  CanvasPolygonReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasPolygonReplay.prototype.constructor = CanvasPolygonReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasPolygonReplay.prototype.drawFlatCoordinatess_ = function drawFlatCoordinatess_ (flatCoordinates, offset, ends, stride) {\n    var state = this.state;\n    var fill = state.fillStyle !== undefined;\n    var stroke = state.strokeStyle != undefined;\n    var numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (var i = 0; i < numEnds; ++i) {\n      var end = ends[i];\n      var myBegin = this.coordinates.length;\n      var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n      var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawCircle = function drawCircle (circleGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(circleGeometry);\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var flatCoordinates = circleGeometry.getFlatCoordinates();\n    var stride = circleGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    this.appendFlatCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n    var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(fillInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(circleGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(polygonGeometry);\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var ends = polygonGeometry.getEnds();\n    var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    var stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n    this.endGeometry(polygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(multiPolygonGeometry);\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var endss = multiPolygonGeometry.getEndss();\n    var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    var stride = multiPolygonGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n    }\n    this.endGeometry(multiPolygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    var tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      var coordinates = this.coordinates;\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   */\n  CanvasPolygonReplay.prototype.setFillStrokeStyles_ = function setFillStrokeStyles_ (geometry) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill, geometry);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  };\n\n  return CanvasPolygonReplay;\n}(CanvasReplay));\n\n\nexport default CanvasPolygonReplay;\n\n//# sourceMappingURL=PolygonReplay.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  var chunkStart = offset;\n  var chunkEnd = offset;\n  var chunkM = 0;\n  var m = 0;\n  var start = offset;\n  var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n\n//# sourceMappingURL=straightchunk.js.map","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line'\n};\n\n//# sourceMappingURL=TextPlacement.js.map","/**\n * @module ol/render/canvas/TextReplay\n */\nimport {getUid} from '../../util.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {labelCache, measureTextWidth, defaultTextAlign, measureTextHeight, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport CanvasReplay from './Replay.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n\nvar CanvasTextReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasTextReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     */\n    this.declutterGroup_;\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    labelCache.prune();\n\n  }\n\n  if ( CanvasReplay ) CanvasTextReplay.__proto__ = CanvasReplay;\n  CanvasTextReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasTextReplay.prototype.constructor = CanvasTextReplay;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.drawText = function drawText (geometry, feature) {\n    var fillState = this.textFillState_;\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    var begin = this.coordinates.length;\n\n    var geometryType = geometry.getType();\n    var flatCoordinates = null;\n    var end = 2;\n    var stride = 2;\n    var i, ii;\n\n    if (textState.placement === TextPlacement.LINE) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      var ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      stride = geometry.getStride();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = geometry.getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = geometry.getEnds().slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        var endss = geometry.getEndss();\n        ends = [];\n        for (i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      var textAlign = textState.textAlign;\n      var flatOffset = 0;\n      var flatEnd;\n      for (var o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (i = flatOffset; i < flatEnd; i += stride) {\n          this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        end = this.coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end, this.declutterGroup_);\n        begin = end;\n      }\n      this.endGeometry(geometry, feature);\n\n    } else {\n      var label = this.getImage(this.text_, this.textKey_, this.fillKey_, this.strokeKey_);\n      var width = label.width / this.pixelRatio;\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = geometry.getFlatCoordinates();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n          if (!textState.overflow && flatCoordinates[2] / this.resolution < width) {\n            return;\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (textState.overflow || interiorPoints[i + 2] / this.resolution >= width) {\n              flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n            }\n          }\n          end = flatCoordinates.length;\n          if (end == 0) {\n            return;\n          }\n          break;\n        default:\n      }\n      end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill, geometry);\n          this.hitDetectionInstructions.push(this.createFill(this.state, geometry));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      this.drawTextImage_(label, begin, end);\n      this.endGeometry(geometry, feature);\n    }\n  };\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {HTMLCanvasElement} Image.\n   */\n  CanvasTextReplay.prototype.getImage = function getImage (text, textKey, fillKey, strokeKey) {\n    var label;\n    var key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n\n    if (!labelCache.containsKey(key)) {\n      var strokeState = strokeKey ? this.strokeStates[strokeKey] || this.textStrokeState_ : null;\n      var fillState = fillKey ? this.fillStates[fillKey] || this.textFillState_ : null;\n      var textState = this.textStates[textKey] || this.textState_;\n      var pixelRatio = this.pixelRatio;\n      var scale = textState.scale * pixelRatio;\n      var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n      var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n      var lines = text.split('\\n');\n      var numLines = lines.length;\n      var widths = [];\n      var width = measureTextWidths(textState.font, lines, widths);\n      var lineHeight = measureTextHeight(textState.font);\n      var height = lineHeight * numLines;\n      var renderWidth = (width + strokeWidth);\n      var context = createCanvasContext2D(\n        Math.ceil(renderWidth * scale),\n        Math.ceil((height + strokeWidth) * scale));\n      label = context.canvas;\n      labelCache.set(key, label);\n      if (scale != 1) {\n        context.scale(scale, scale);\n      }\n      context.font = textState.font;\n      if (strokeKey) {\n        context.strokeStyle = strokeState.strokeStyle;\n        context.lineWidth = strokeWidth;\n        context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n        context.miterLimit = strokeState.miterLimit;\n        if (CANVAS_LINE_DASH && strokeState.lineDash.length) {\n          context.setLineDash(strokeState.lineDash);\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (fillKey) {\n        context.fillStyle = fillState.fillStyle;\n      }\n      context.textBaseline = 'middle';\n      context.textAlign = 'center';\n      var leftRight = (0.5 - align);\n      var x = align * label.width / scale + leftRight * strokeWidth;\n      var i;\n      if (strokeKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n      if (fillKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n    }\n    return labelCache.get(key);\n  };\n\n  /**\n   * @private\n   * @param {HTMLCanvasElement} label Label.\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  CanvasTextReplay.prototype.drawTextImage_ = function drawTextImage_ (label, begin, end) {\n    var textState = this.textState_;\n    var strokeState = this.textStrokeState_;\n    var pixelRatio = this.pixelRatio;\n    var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n    var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    var anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\n    var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n    this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1, label.width,\n      textState.padding == defaultPadding ?\n        defaultPadding : textState.padding.map(function(p) {\n          return p * pixelRatio;\n        }),\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1 / pixelRatio, label.width, textState.padding,\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n  };\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   */\n  CanvasTextReplay.prototype.drawChars_ = function drawChars_ (begin, end, declutterGroup) {\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    var fillState = this.textFillState_;\n\n    var strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = /** @type {import(\"../canvas.js\").StrokeState} */ ({\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash\n        });\n      }\n    }\n    var textKey = this.textKey_;\n    if (!(this.textKey_ in this.textStates)) {\n      this.textStates[this.textKey_] = /** @type {import(\"../canvas.js\").TextState} */ ({\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        scale: textState.scale\n      });\n    }\n    var fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = /** @type {import(\"../canvas.js\").FillState} */ ({\n          fillStyle: fillState.fillStyle\n        });\n      }\n    }\n\n    var pixelRatio = this.pixelRatio;\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n\n    var offsetY = this.textOffsetY_ * pixelRatio;\n    var text = this.text_;\n    var font = textState.font;\n    var textScale = textState.scale;\n    var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n    var widths = this.widths_[font];\n    if (!widths) {\n      this.widths_[font] = widths = {};\n    }\n    this.instructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale * pixelRatio;\n      },\n      offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale;\n      },\n      offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n    ]);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.setTextStyle = function setTextStyle (textStyle, declutterGroup) {\n    var textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = this.textFillState_ = null;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = this.textFillState_ = /** @type {import(\"../canvas.js\").FillState} */ ({});\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle);\n      }\n\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = this.textStrokeState_ = null;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = this.textStrokeState_ = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n        }\n        var lineDash = textStrokeStyle.getLineDash();\n        var lineDashOffset = textStrokeStyle.getLineDashOffset();\n        var lineWidth = textStrokeStyle.getWidth();\n        var miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n            lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n            lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n            miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle);\n      }\n\n      textState = this.textState_;\n      var font = textStyle.getFont() || defaultFont;\n      checkFont(font);\n      var textScale = textStyle.getScale();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? 1 : textScale;\n\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState ?\n        (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n        strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n        strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n        '';\n      this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n      this.fillKey_ = fillState ?\n        (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n        '';\n    }\n  };\n\n  return CanvasTextReplay;\n}(CanvasReplay));\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  var numLines = lines.length;\n  var width = 0;\n  for (var i = 0; i < numLines; ++i) {\n    var currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n\nexport default CanvasTextReplay;\n\n//# sourceMappingURL=TextReplay.js.map","/**\n * @module ol/render/canvas/ReplayGroup\n */\n\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport ReplayType from '../ReplayType.js';\nimport CanvasReplay from './Replay.js';\nimport CanvasImageReplay from './ImageReplay.js';\nimport CanvasLineStringReplay from './LineStringReplay.js';\nimport CanvasPolygonReplay from './PolygonReplay.js';\nimport CanvasTextReplay from './TextReplay.js';\nimport {ORDER} from '../replay.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n\n/**\n * @type {Object<ReplayType, typeof CanvasReplay>}\n */\nvar BATCH_CONSTRUCTORS = {\n  'Circle': CanvasPolygonReplay,\n  'Default': CanvasReplay,\n  'Image': CanvasImageReplay,\n  'LineString': CanvasLineStringReplay,\n  'Polygon': CanvasPolygonReplay,\n  'Text': CanvasTextReplay\n};\n\n\nvar CanvasReplayGroup = /*@__PURE__*/(function (ReplayGroup) {\n  function CanvasReplayGroup(\n    tolerance,\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    declutterTree,\n    opt_renderBuffer\n  ) {\n    ReplayGroup.call(this);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = declutterTree;\n\n    /**\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     * @private\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<ReplayType, CanvasReplay>>}\n     */\n    this.replaysByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = createCanvasContext2D(1, 1);\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n  }\n\n  if ( ReplayGroup ) CanvasReplayGroup.__proto__ = ReplayGroup;\n  CanvasReplayGroup.prototype = Object.create( ReplayGroup && ReplayGroup.prototype );\n  CanvasReplayGroup.prototype.constructor = CanvasReplayGroup;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\n    var declutter = null;\n    if (this.declutterTree_) {\n      if (group) {\n        declutter = this.declutterGroup_;\n        /** @type {number} */ (declutter[4])++;\n      } else {\n        declutter = this.declutterGroup_ = createEmpty();\n        declutter.push(1);\n      }\n    }\n    return declutter;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  CanvasReplayGroup.prototype.clip = function clip (context, transform) {\n    var flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  };\n\n  /**\n   * @param {Array<ReplayType>} replays Replays.\n   * @return {boolean} Has replays of the provided types.\n   */\n  CanvasReplayGroup.prototype.hasReplays = function hasReplays (replays) {\n    for (var zIndex in this.replaysByZIndex_) {\n      var candidates = this.replaysByZIndex_[zIndex];\n      for (var i = 0, ii = replays.length; i < ii; ++i) {\n        if (replays[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  CanvasReplayGroup.prototype.finish = function finish () {\n    for (var zKey in this.replaysByZIndex_) {\n      var replays = this.replaysByZIndex_[zKey];\n      for (var replayKey in replays) {\n        replays[replayKey].finish();\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T} callback Feature callback.\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>} declutterReplays Declutter replays.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplayGroup.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    skippedFeaturesHash,\n    callback,\n    declutterReplays\n  ) {\n\n    hitTolerance = Math.round(hitTolerance);\n    var contextSize = hitTolerance * 2 + 1;\n    var transform = composeTransform(this.hitDetectionTransform_,\n      hitTolerance + 0.5, hitTolerance + 0.5,\n      1 / resolution, -1 / resolution,\n      -rotation,\n      -coordinate[0], -coordinate[1]);\n    var context = this.hitDetectionContext_;\n\n    if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    var hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n    }\n\n    var mask = getCircleArray(hitTolerance);\n    var declutteredFeatures;\n    if (this.declutterTree_) {\n      declutteredFeatures = this.declutterTree_.all().map(function(entry) {\n        return entry.value;\n      });\n    }\n\n    var replayType;\n\n    /**\n     * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n     * @return {?} Callback result.\n     */\n    function featureCallback(feature) {\n      var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n      for (var i = 0; i < contextSize; i++) {\n        for (var j = 0; j < contextSize; j++) {\n          if (mask[i][j]) {\n            if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\n              var result = (void 0);\n              if (!(declutteredFeatures && (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) ||\n                  declutteredFeatures.indexOf(feature) !== -1) {\n                result = callback(feature);\n              }\n              if (result) {\n                return result;\n              } else {\n                context.clearRect(0, 0, contextSize, contextSize);\n                return undefined;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    var i, j, replays, replay, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      var zIndexKey = zs[i].toString();\n      replays = this.replaysByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        replayType = ORDER[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = declutterReplays[zIndexKey];\n            if (!declutter) {\n              declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            result = replay.replayHitDetection(context, transform, rotation,\n              skippedFeaturesHash, featureCallback, hitExtent);\n            if (result) {\n              return result;\n            }\n          }\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  CanvasReplayGroup.prototype.getClipCoords = function getClipCoords (transform) {\n    var maxExtent = this.maxExtent_;\n    var minX = maxExtent[0];\n    var minY = maxExtent[1];\n    var maxX = maxExtent[2];\n    var maxY = maxExtent[3];\n    var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(\n      flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n    var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    var replays = this.replaysByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.replaysByZIndex_[zIndexKey] = replays;\n    }\n    var replay = replays[replayType];\n    if (replay === undefined) {\n      var Constructor = BATCH_CONSTRUCTORS[replayType];\n      replay = new Constructor(this.tolerance_, this.maxExtent_,\n        this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_);\n      replays[replayType] = replay;\n    }\n    return replay;\n  };\n\n  /**\n   * @return {Object<string, Object<ReplayType, CanvasReplay>>} Replays.\n   */\n  CanvasReplayGroup.prototype.getReplays = function getReplays () {\n    return this.replaysByZIndex_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.isEmpty = function isEmpty$1 () {\n    return isEmpty(this.replaysByZIndex_);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<ReplayType>=} opt_replayTypes Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\n   */\n  CanvasReplayGroup.prototype.replay = function replay (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    snapToPixel,\n    opt_replayTypes,\n    opt_declutterReplays\n  ) {\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    context.save();\n    this.clip(context, transform);\n\n    var replayTypes = opt_replayTypes ? opt_replayTypes : ORDER;\n    var i, ii, j, jj, replays, replay;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      var zIndexKey = zs[i].toString();\n      replays = this.replaysByZIndex_[zIndexKey];\n      for (j = 0, jj = replayTypes.length; j < jj; ++j) {\n        var replayType = replayTypes[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (opt_declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = opt_declutterReplays[zIndexKey];\n            if (!declutter) {\n              opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            replay.replay(context, transform, viewRotation, skippedFeaturesHash, snapToPixel);\n          }\n        }\n      }\n    }\n\n    context.restore();\n  };\n\n  return CanvasReplayGroup;\n}(ReplayGroup));\n\n\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\n */\nvar circleArrayCache = {\n  0: [[true]]\n};\n\n\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n  var i;\n  var radius = Math.floor(array.length / 2);\n  if (x >= radius) {\n    for (i = radius; i < x; i++) {\n      array[i][y] = true;\n    }\n  } else if (x < radius) {\n    for (i = x + 1; i < radius; i++) {\n      array[i][y] = true;\n    }\n  }\n}\n\n\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n  if (circleArrayCache[radius] !== undefined) {\n    return circleArrayCache[radius];\n  }\n\n  var arraySize = radius * 2 + 1;\n  var arr = new Array(arraySize);\n  for (var i = 0; i < arraySize; i++) {\n    arr[i] = new Array(arraySize);\n  }\n\n  var x = radius;\n  var y = 0;\n  var error = 0;\n\n  while (x >= y) {\n    fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n\n    y++;\n    error += 1 + 2 * y;\n    if (2 * (error - x) + 1 > 0) {\n      x -= 1;\n      error += 1 - 2 * x;\n    }\n  }\n\n  circleArrayCache[radius] = arr;\n  return arr;\n}\n\n\n/**\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n */\nexport function replayDeclutter(declutterReplays, context, rotation, snapToPixel) {\n  var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n  var skippedFeatureUids = {};\n  for (var z = 0, zz = zs.length; z < zz; ++z) {\n    var replayData = declutterReplays[zs[z].toString()];\n    for (var i = 0, ii = replayData.length; i < ii;) {\n      var replay = replayData[i++];\n      var transform = replayData[i++];\n      replay.replay(context, transform, rotation, skippedFeatureUids, snapToPixel);\n    }\n  }\n}\n\n\nexport default CanvasReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/renderer/vector\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/ReplayGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object)>}\n */\nvar GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  var tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var circleReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.CIRCLE);\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n  var loading = false;\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    var imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener, thisArg);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener, thisArg);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n\n  return loading;\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n  var geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n  var renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  var replay = replayGroup.getReplay(style.getZIndex(), ReplayType.DEFAULT);\n  replay.drawCustom(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n  var geometries = geometry.getGeometriesArray();\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    var geometryRenderer =\n        GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderMultiPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n//# sourceMappingURL=vector.js.map","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, createEmpty, containsExtent, getWidth} from '../../extent.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup from '../../render/canvas/ReplayGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /*@__PURE__*/(function (CanvasLayerRenderer) {\n  function CanvasVectorLayerRenderer(vectorLayer) {\n\n    CanvasLayerRenderer.call(this, vectorLayer);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ReplayGroup.js\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = createCanvasContext2D();\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasLayerRenderer ) CanvasVectorLayerRenderer.__proto__ = CanvasLayerRenderer;\n  CanvasVectorLayerRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  CanvasVectorLayerRenderer.prototype.constructor = CanvasVectorLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   */\n  CanvasVectorLayerRenderer.prototype.compose = function compose (context, frameState, layerState) {\n    var extent = frameState.extent;\n    var pixelRatio = frameState.pixelRatio;\n    var skippedFeatureUids = layerState.managed ?\n      frameState.skippedFeatureUids : {};\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var rotation = viewState.rotation;\n    var projectionExtent = projection.getExtent();\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (this.getLayer().getSource());\n\n    var transform = this.getTransform(frameState, 0);\n\n    // clipped rendering if layer extent is set\n    var clipExtent = layerState.extent;\n    var clipped = clipExtent !== undefined;\n    if (clipped) {\n      this.clip(context, frameState, /** @type {import(\"../../extent.js\").Extent} */ (clipExtent));\n    }\n    var replayGroup = this.replayGroup_;\n    if (replayGroup && !replayGroup.isEmpty()) {\n      if (this.declutterTree_) {\n        this.declutterTree_.clear();\n      }\n      var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n      var drawOffsetX = 0;\n      var drawOffsetY = 0;\n      var replayContext;\n      var transparentLayer = layerState.opacity !== 1;\n      var hasRenderListeners = layer.hasListener(RenderEventType.RENDER);\n      if (transparentLayer || hasRenderListeners) {\n        var drawWidth = context.canvas.width;\n        var drawHeight = context.canvas.height;\n        if (rotation) {\n          var drawSize = Math.round(Math.sqrt(drawWidth * drawWidth + drawHeight * drawHeight));\n          drawOffsetX = (drawSize - drawWidth) / 2;\n          drawOffsetY = (drawSize - drawHeight) / 2;\n          drawWidth = drawHeight = drawSize;\n        }\n        // resize and clear\n        this.context.canvas.width = drawWidth;\n        this.context.canvas.height = drawHeight;\n        replayContext = this.context;\n      } else {\n        replayContext = context;\n      }\n\n      var alpha = replayContext.globalAlpha;\n      if (!transparentLayer) {\n        // for performance reasons, context.save / context.restore is not used\n        // to save and restore the transformation matrix and the opacity.\n        // see http://jsperf.com/context-save-restore-versus-variable\n        replayContext.globalAlpha = layerState.opacity;\n      }\n\n      if (replayContext != context) {\n        replayContext.translate(drawOffsetX, drawOffsetY);\n      }\n\n      var viewHints = frameState.viewHints;\n      var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      var width = frameState.size[0] * pixelRatio;\n      var height = frameState.size[1] * pixelRatio;\n      rotateAtOffset(replayContext, -rotation,\n        width / 2, height / 2);\n      replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n      if (vectorSource.getWrapX() && projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)) {\n        var startX = extent[0];\n        var worldWidth = getWidth(projectionExtent);\n        var world = 0;\n        var offsetX;\n        while (startX < projectionExtent[0]) {\n          --world;\n          offsetX = worldWidth * world;\n          transform = this.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n          startX += worldWidth;\n        }\n        world = 0;\n        startX = extent[2];\n        while (startX > projectionExtent[2]) {\n          ++world;\n          offsetX = worldWidth * world;\n          transform = this.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n          startX -= worldWidth;\n        }\n      }\n      rotateAtOffset(replayContext, rotation,\n        width / 2, height / 2);\n\n      if (hasRenderListeners) {\n        this.dispatchRenderEvent(replayContext, frameState, transform);\n      }\n      if (replayContext != context) {\n        if (transparentLayer) {\n          var mainContextAlpha = context.globalAlpha;\n          context.globalAlpha = layerState.opacity;\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n          context.globalAlpha = mainContextAlpha;\n        } else {\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n        }\n        replayContext.translate(-drawOffsetX, -drawOffsetY);\n      }\n\n      if (!transparentLayer) {\n        replayContext.globalAlpha = alpha;\n      }\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    var transform = this.getTransform(frameState, 0);\n    this.preCompose(context, frameState, transform);\n    this.compose(context, frameState, layerState);\n    this.postCompose(context, frameState, layerState, transform);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.replayGroup_) {\n      return undefined;\n    } else {\n      var resolution = frameState.viewState.resolution;\n      var rotation = frameState.viewState.rotation;\n      var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n      /** @type {!Object<string, boolean>} */\n      var features = {};\n      var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          var key = getUid(feature);\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        }, null);\n      return result;\n    }\n  };\n\n  /**\n   * @param {import(\"../../events/Event.js\").default} event Event.\n   */\n  CanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (vectorLayer.getSource());\n\n    var animating = frameState.viewHints[ViewHint.ANIMATING];\n    var interacting = frameState.viewHints[ViewHint.INTERACTING];\n    var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n        (!updateWhileInteracting && interacting)) {\n      return true;\n    }\n\n    var frameStateExtent = frameState.extent;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var resolution = viewState.resolution;\n    var pixelRatio = frameState.pixelRatio;\n    var vectorLayerRevision = vectorLayer.getRevision();\n    var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    var extent = buffer(frameStateExtent,\n      vectorLayerRenderBuffer * resolution);\n    var projectionExtent = viewState.projection.getExtent();\n\n    if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n        !containsExtent(projectionExtent, frameState.extent)) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      var worldWidth = getWidth(projectionExtent);\n      var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n    }\n\n    if (!this.dirty_ &&\n        this.renderedResolution_ == resolution &&\n        this.renderedRevision_ == vectorLayerRevision &&\n        this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n        containsExtent(this.renderedExtent_, extent)) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    var replayGroup = new CanvasReplayGroup(\n      getRenderTolerance(resolution, pixelRatio), extent, resolution,\n      pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, vectorLayer.getRenderBuffer());\n    vectorSource.loadFeatures(extent, resolution, projection);\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @this {CanvasVectorLayerRenderer}\n     */\n    var render = function(feature) {\n      var styles;\n      var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        var dirty = this.renderFeature(\n          feature, resolution, pixelRatio, styles, replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n      }\n    }.bind(this);\n    if (vectorLayerRenderOrder) {\n      /** @type {Array<import(\"../../Feature.js\").default>} */\n      var features = [];\n      vectorSource.forEachFeatureInExtent(extent,\n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         */\n        function(feature) {\n          features.push(feature);\n        });\n      features.sort(vectorLayerRenderOrder);\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        render(features[i]);\n      }\n    } else {\n      vectorSource.forEachFeatureInExtent(extent, render);\n    }\n    replayGroup.finish();\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.replayGroup_ = replayGroup;\n\n    this.replayGroupChanged = true;\n    return true;\n  };\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/ReplayGroup.js\").default} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, resolution, pixelRatio, styles, replayGroup) {\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i],\n          getSquaredRenderTolerance(resolution, pixelRatio),\n          this.handleStyleImageChange_, this) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles,\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasVectorLayerRenderer} The layer renderer.\n */\nCanvasVectorLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorLayerRenderer(/** @type {import(\"../../layer/Vector.js\").default} */ (layer));\n};\n\n\nexport default CanvasVectorLayerRenderer;\n\n//# sourceMappingURL=VectorLayer.js.map","/**\n * @module ol/layer/VectorTileRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorTileRenderType.js.map","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, containsCoordinate, equals, getIntersection, getTopLeft, intersects} from '../../extent.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport {equivalent as equivalentProjection} from '../../proj.js';\nimport Units from '../../proj/Units.js';\nimport ReplayType from '../../render/ReplayType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup, {replayDeclutter} from '../../render/canvas/ReplayGroup.js';\nimport {ORDER} from '../../render/replay.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport {getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  reset as resetTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\n\n\n/**\n * @type {!Object<string, Array<import(\"../../render/ReplayType.js\").default>>}\n */\nvar IMAGE_REPLAYS = {\n  'image': [ReplayType.POLYGON, ReplayType.CIRCLE,\n    ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT],\n  'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING]\n};\n\n\n/**\n * @type {!Object<string, Array<import(\"../../render/ReplayType.js\").default>>}\n */\nvar VECTOR_REPLAYS = {\n  'image': [ReplayType.DEFAULT],\n  'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT],\n  'vector': ORDER\n};\n\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n */\nvar CanvasVectorTileLayerRenderer = /*@__PURE__*/(function (CanvasTileLayerRenderer) {\n  function CanvasVectorTileLayerRenderer(layer) {\n\n    CanvasTileLayerRenderer.call(this, layer, true);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = layer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n\n    var renderMode = layer.getRenderMode();\n\n    // Use lower resolution for pure vector rendering. Closest resolution otherwise.\n    this.zDirection = renderMode === VectorTileRenderType.VECTOR ? 1 : 0;\n\n    if (renderMode !== VectorTileRenderType.VECTOR) {\n      this.context = createCanvasContext2D();\n    }\n\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasTileLayerRenderer ) CanvasVectorTileLayerRenderer.__proto__ = CanvasTileLayerRenderer;\n  CanvasVectorTileLayerRenderer.prototype = Object.create( CanvasTileLayerRenderer && CanvasTileLayerRenderer.prototype );\n  CanvasVectorTileLayerRenderer.prototype.constructor = CanvasVectorTileLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasTileLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tile = CanvasTileLayerRenderer.prototype.getTile.call(this, z, x, y, pixelRatio, projection);\n    if (tile.getState() === TileState.LOADED) {\n      this.createReplayGroup_(/** @type {import(\"../../VectorImageTile.js\").default} */ (tile), pixelRatio, projection);\n      if (this.context) {\n        this.renderTileImage_(/** @type {import(\"../../VectorImageTile.js\").default} */ (tile), pixelRatio, projection);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getTileImage = function getTileImage (tile) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    return /** @type {import(\"../../VectorImageTile.js\").default} */ (tile).getImage(tileLayer);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var layerRevision = layer.getRevision();\n    if (this.renderedLayerRevision_ != layerRevision) {\n      this.renderedTiles.length = 0;\n    }\n    this.renderedLayerRevision_ = layerRevision;\n    return CanvasTileLayerRenderer.prototype.prepareFrame.call(this, frameState, layerState);\n  };\n\n  /**\n   * @param {import(\"../../VectorImageTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.createReplayGroup_ = function createReplayGroup_ (tile, pixelRatio, projection) {\n    var this$1 = this;\n\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var revision = layer.getRevision();\n    var renderOrder = /** @type {import(\"../../render.js\").OrderFunction} */ (layer.getRenderOrder()) || null;\n\n    var replayState = tile.getReplayState(layer);\n    if (!replayState.dirty && replayState.renderedRevision == revision &&\n        replayState.renderedRenderOrder == renderOrder) {\n      return;\n    }\n\n    var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n    var sourceTileGrid = source.getTileGrid();\n    var tileGrid = source.getTileGridForProjection(projection);\n    var resolution = tileGrid.getResolution(tile.tileCoord[0]);\n    var tileExtent = tile.extent;\n\n    var loop = function ( t, tt ) {\n      var sourceTile = tile.getTile(tile.tileKeys[t]);\n      if (sourceTile.getState() != TileState.LOADED) {\n        return;\n      }\n\n      var sourceTileCoord = sourceTile.tileCoord;\n      var sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      var sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      var bufferedExtent = equals(sourceTileExtent, sharedExtent) ? null :\n        buffer(sharedExtent, layer.getRenderBuffer() * resolution, this$1.tmpExtent);\n      var tileProjection = sourceTile.getProjection();\n      var reproject = false;\n      if (!equivalentProjection(projection, tileProjection)) {\n        reproject = true;\n        sourceTile.setProjection(projection);\n      }\n      replayState.dirty = false;\n      var replayGroup = new CanvasReplayGroup(0, sharedExtent, resolution,\n        pixelRatio, source.getOverlaps(), this$1.declutterTree_, layer.getRenderBuffer());\n      var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      var render = function(feature) {\n        var styles;\n        var styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup);\n          this.dirty_ = this.dirty_ || dirty;\n          replayState.dirty = replayState.dirty || dirty;\n        }\n      };\n\n      var features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== replayState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        var feature = features[i];\n        if (reproject) {\n          if (tileProjection.getUnits() == Units.TILE_PIXELS) {\n            // projected tile extent\n            tileProjection.setWorldExtent(sourceTileExtent);\n            // tile extent in tile pixel space\n            tileProjection.setExtent(sourceTile.getExtent());\n          }\n          feature.getGeometry().transform(tileProjection, projection);\n        }\n        if (!bufferedExtent || intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n          render.call(this$1, feature);\n        }\n      }\n      replayGroup.finish();\n      sourceTile.setReplayGroup(layer, tile.tileCoord.toString(), replayGroup);\n    };\n\n    for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) loop( t, tt );\n    replayState.renderedRevision = revision;\n    replayState.renderedRenderOrder = renderOrder;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var resolution = frameState.viewState.resolution;\n    var rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    var layer = this.getLayer();\n    /** @type {!Object<string, boolean>} */\n    var features = {};\n\n    var renderedTiles = /** @type {Array<import(\"../../VectorImageTile.js\").default>} */ (this.renderedTiles);\n\n    var bufferedExtent, found;\n    var i, ii;\n    for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\n      var tile = renderedTiles[i];\n      bufferedExtent = buffer(tile.extent, hitTolerance * resolution, bufferedExtent);\n      if (!containsCoordinate(bufferedExtent, coordinate)) {\n        continue;\n      }\n      for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n        var sourceTile = tile.getTile(tile.tileKeys[t]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer,\n          tile.tileCoord.toString()));\n        found = found || replayGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n          /**\n           * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n           * @return {?} Callback result.\n           */\n          function(feature) {\n            var key = getUid(feature);\n            if (!(key in features)) {\n              features[key] = true;\n              return callback.call(thisArg, feature, layer);\n            }\n          }, null);\n      }\n    }\n    return found;\n  };\n\n  /**\n   * @param {import(\"../../VectorTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../transform.js\").Transform} transform Transform.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.getReplayTransform_ = function getReplayTransform_ (tile, frameState) {\n    var layer = this.getLayer();\n    var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n    var tileGrid = source.getTileGrid();\n    var tileCoord = tile.tileCoord;\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var renderResolution = viewState.resolution / pixelRatio;\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    var center = viewState.center;\n    var origin = getTopLeft(tileExtent);\n    var size = frameState.size;\n    var offsetX = Math.round(pixelRatio * size[0] / 2);\n    var offsetY = Math.round(pixelRatio * size[1] / 2);\n    return composeTransform(this.tmpTransform_,\n      offsetX, offsetY,\n      tileResolution / renderResolution, tileResolution / renderResolution,\n      viewState.rotation,\n      (origin[0] - center[0]) / tileResolution,\n      (center[1] - origin[1]) / tileResolution);\n  };\n\n  /**\n   * @param {import(\"../../events/Event.js\").default} event Event.\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var renderMode = layer.getRenderMode();\n    if (renderMode != VectorTileRenderType.IMAGE) {\n      var declutterReplays = layer.getDeclutter() ? {} : null;\n      var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n      var replayTypes = VECTOR_REPLAYS[renderMode];\n      var pixelRatio = frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      var size = frameState.size;\n      var offsetX, offsetY;\n      if (rotation) {\n        offsetX = Math.round(pixelRatio * size[0] / 2);\n        offsetY = Math.round(pixelRatio * size[1] / 2);\n        rotateAtOffset(context, -rotation, offsetX, offsetY);\n      }\n      if (declutterReplays) {\n        this.declutterTree_.clear();\n      }\n      var viewHints = frameState.viewHints;\n      var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      var tiles = this.renderedTiles;\n      var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n      var clips = [];\n      var zs = [];\n      for (var i = tiles.length - 1; i >= 0; --i) {\n        var tile = /** @type {import(\"../../VectorImageTile.js\").default} */ (tiles[i]);\n        if (tile.getState() == TileState.ABORT) {\n          continue;\n        }\n        var tileCoord = tile.tileCoord;\n        var worldOffset = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tile.extent[0];\n        var transform = undefined;\n        for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n          var sourceTile = tile.getTile(tile.tileKeys[t]);\n          if (sourceTile.getState() != TileState.LOADED) {\n            continue;\n          }\n          var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer, tileCoord.toString()));\n          if (!replayGroup || !replayGroup.hasReplays(replayTypes)) {\n            // sourceTile was not yet loaded when this.createReplayGroup_() was\n            // called, or it has no replays of the types we want to render\n            continue;\n          }\n          if (!transform) {\n            transform = this.getTransform(frameState, worldOffset);\n          }\n          var currentZ = sourceTile.tileCoord[0];\n          var currentClip = replayGroup.getClipCoords(transform);\n          context.save();\n          context.globalAlpha = layerState.opacity;\n          // Create a clip mask for regions in this low resolution tile that are\n          // already filled by a higher resolution tile\n          for (var j = 0, jj = clips.length; j < jj; ++j) {\n            var clip = clips[j];\n            if (currentZ < zs[j]) {\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher resolution tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n          replayGroup.replay(context, transform, rotation, {}, snapToPixel, replayTypes, declutterReplays);\n          context.restore();\n          clips.push(currentClip);\n          zs.push(currentZ);\n        }\n      }\n      if (declutterReplays) {\n        replayDeclutter(declutterReplays, context, rotation, snapToPixel);\n      }\n      if (rotation) {\n        rotateAtOffset(context, rotation,\n          /** @type {number} */ (offsetX), /** @type {number} */ (offsetY));\n      }\n    }\n    CanvasTileLayerRenderer.prototype.postCompose.call(this, context, frameState, layerState);\n  };\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/ReplayGroup.js\").default} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, squaredTolerance, styles, replayGroup) {\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i], squaredTolerance,\n          this.handleStyleImageChange_, this) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles, squaredTolerance,\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  /**\n   * @param {import(\"../../VectorImageTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderTileImage_ = function renderTileImage_ (tile, pixelRatio, projection) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var replayState = tile.getReplayState(layer);\n    var revision = layer.getRevision();\n    var replays = IMAGE_REPLAYS[layer.getRenderMode()];\n    if (replays && replayState.renderedTileRevision !== revision) {\n      replayState.renderedTileRevision = revision;\n      var tileCoord = tile.wrappedTileCoord;\n      var z = tileCoord[0];\n      var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n      var tileGrid = source.getTileGridForProjection(projection);\n      var resolution = tileGrid.getResolution(z);\n      var context = tile.getContext(layer);\n      var size = source.getTilePixelSize(z, pixelRatio, projection);\n      context.canvas.width = size[0];\n      context.canvas.height = size[1];\n      var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n      for (var i = 0, ii = tile.tileKeys.length; i < ii; ++i) {\n        var sourceTile = tile.getTile(tile.tileKeys[i]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        var pixelScale = pixelRatio / resolution;\n        var transform = resetTransform(this.tmpTransform_);\n        scaleTransform(transform, pixelScale, -pixelScale);\n        translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n        var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer,\n          tile.tileCoord.toString()));\n        replayGroup.replay(context, transform, 0, {}, true, replays);\n      }\n    }\n  };\n\n  return CanvasVectorTileLayerRenderer;\n}(CanvasTileLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR_TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasVectorTileLayerRenderer} The layer renderer.\n */\nCanvasVectorTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorTileLayerRenderer(/** @type {import(\"../../layer/VectorTile.js\").default} */ (layer));\n};\n\n\nexport default CanvasVectorTileLayerRenderer;\n\n//# sourceMappingURL=VectorTileLayer.js.map","/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control/util.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport CanvasImageLayerRenderer from './renderer/canvas/ImageLayer.js';\nimport CanvasMapRenderer from './renderer/canvas/Map.js';\nimport CanvasTileLayerRenderer from './renderer/canvas/TileLayer.js';\nimport CanvasVectorLayerRenderer from './renderer/canvas/VectorLayer.js';\nimport CanvasVectorTileLayerRenderer from './renderer/canvas/VectorTileLayer.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nvar Map = /*@__PURE__*/(function (PluggableMap) {\n  function Map(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions();\n    }\n\n    PluggableMap.call(this, options);\n  }\n\n  if ( PluggableMap ) Map.__proto__ = PluggableMap;\n  Map.prototype = Object.create( PluggableMap && PluggableMap.prototype );\n  Map.prototype.constructor = Map;\n\n  Map.prototype.createRenderer = function createRenderer () {\n    var renderer = new CanvasMapRenderer(this);\n    renderer.registerLayerRenderers([\n      CanvasImageLayerRenderer,\n      CanvasTileLayerRenderer,\n      CanvasVectorLayerRenderer,\n      CanvasVectorTileLayerRenderer\n    ]);\n    return renderer;\n  };\n\n  return Map;\n}(PluggableMap));\n\n\nexport default Map;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./Control.js\").default>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var controls = new Collection();\n\n  var zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  var rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  var attributionControl = options.attribution !== undefined ?\n    options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n\n//# sourceMappingURL=util.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nimport {focus} from './events/condition.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the wheel/trackpad or pinch gesture ends.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or\n * mousewheel zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. The default set of\n * interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var interactions = new Collection();\n\n  var kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n    options.altShiftDragRotate : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  var doubleClickZoom = options.doubleClickZoom !== undefined ?\n    options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(new DoubleClickZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(new DragPan({\n      condition: options.onFocusOnly ? focus : undefined,\n      kinetic: kinetic\n    }));\n  }\n\n  var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n    true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(new PinchZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(new KeyboardZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n    options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(new MouseWheelZoom({\n      condition: options.onFocusOnly ? focus : undefined,\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var shiftDragZoom = options.shiftDragZoom !== undefined ?\n    options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(new DragZoom({\n      duration: options.zoomDuration\n    }));\n  }\n\n  return interactions;\n\n}\n\n//# sourceMappingURL=interaction.js.map","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n\n//# sourceMappingURL=TileProperty.js.map","/**\n * @module ol/layer/Tile\n */\nimport LayerType from '../LayerType.js';\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /*@__PURE__*/(function (Layer) {\n  function TileLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    Layer.call(this, baseOptions);\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n      options.useInterimTilesOnError : true);\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {import(\"../LayerType.js\").default}\n    */\n    this.type = LayerType.TILE;\n\n  }\n\n  if ( Layer ) TileLayer.__proto__ = Layer;\n  TileLayer.prototype = Object.create( Layer && Layer.prototype );\n  TileLayer.prototype.constructor = TileLayer;\n\n  /**\n  * Return the level as number to which we will preload tiles up to.\n  * @return {number} The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getPreload = function getPreload () {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  };\n\n  /**\n  * Set the level as number to which we will preload tiles up to.\n  * @param {number} preload The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setPreload = function setPreload (preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  };\n\n  /**\n  * Whether we use interim tiles on error.\n  * @return {boolean} Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getUseInterimTilesOnError = function getUseInterimTilesOnError () {\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n  };\n\n  /**\n  * Set whether we use interim tiles on error.\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setUseInterimTilesOnError = function setUseInterimTilesOnError (useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  };\n\n  return TileLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Tile tilesource} of the layer.\n * @function\n * @return {import(\"../source/Tile.js\").default} Source.\n * @api\n */\nTileLayer.prototype.getSource;\n\n\nexport default TileLayer;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string)} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /*@__PURE__*/(function (EventTarget) {\n  function Tile(tileCoord, state, opt_options) {\n    EventTarget.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {TileState}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ = options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n  }\n\n  if ( EventTarget ) Tile.__proto__ = EventTarget;\n  Tile.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Tile.prototype.constructor = Tile;\n\n  /**\n   * @protected\n   */\n  Tile.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {string} Key.\n   */\n  Tile.prototype.getKey = function getKey () {\n    return this.key + '/' + this.tileCoord;\n  };\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  Tile.prototype.getInterimTile = function getInterimTile () {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    var tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  };\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  Tile.prototype.refreshInterimChain = function refreshInterimChain () {\n    if (!this.interimTile) {\n      return;\n    }\n\n    var tile = this.interimTile;\n    var prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  };\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  Tile.prototype.getTileCoord = function getTileCoord () {\n    return this.tileCoord;\n  };\n\n  /**\n   * @return {TileState} State.\n   */\n  Tile.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {TileState} state State.\n   * @api\n   */\n  Tile.prototype.setState = function setState (state) {\n    this.state = state;\n    this.changed();\n  };\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  Tile.prototype.load = function load () {};\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  Tile.prototype.getAlpha = function getAlpha (id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    var start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    var delta = time - start + (1000 / 60); // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  };\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  Tile.prototype.inTransition = function inTransition (id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  };\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  Tile.prototype.endTransition = function endTransition (id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  };\n\n  return Tile;\n}(EventTarget));\n\n\nexport default Tile;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\n\n\nvar ImageTile = /*@__PURE__*/(function (Tile) {\n  function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n    Tile.call(this, tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n  }\n\n  if ( Tile ) ImageTile.__proto__ = Tile;\n  ImageTile.prototype = Object.create( Tile && Tile.prototype );\n  ImageTile.prototype.constructor = ImageTile;\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenImage_();\n      this.image_ = getBlankImage();\n    }\n    if (this.interimTile) {\n      this.interimTile.dispose();\n    }\n    this.state = TileState.ABORT;\n    this.changed();\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  ImageTile.prototype.getImage = function getImage () {\n    return this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.getKey = function getKey () {\n    return this.src_;\n  };\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageError_ = function handleImageError_ () {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  };\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    var image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  ImageTile.prototype.load = function load () {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      this.tileLoadFunction_(this, this.src_);\n    }\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return ImageTile;\n}(Tile));\n\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  var ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/tilecoord\n */\n\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z`, `x`, and `y`. `z` is the zoom level.\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  var z = tileCoord[0];\n  var digits = new Array(z);\n  var mask = 1 << (z - 1);\n  var i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  var z = tileCoord[0];\n  var x = tileCoord[1];\n  var y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  var extent = tileGrid.getExtent();\n  var tileRange;\n  if (!extent) {\n    tileRange = tileGrid.getFullTileRange(z);\n  } else {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  }\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n\n//# sourceMappingURL=tilecoord.js.map","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nvar TileCache = /*@__PURE__*/(function (LRUCache) {\n  function TileCache(opt_highWaterMark) {\n\n    LRUCache.call(this, opt_highWaterMark);\n\n  }\n\n  if ( LRUCache ) TileCache.__proto__ = LRUCache;\n  TileCache.prototype = Object.create( LRUCache && LRUCache.prototype );\n  TileCache.prototype.constructor = TileCache;\n\n  /**\n   * @param {!Object<string, import(\"./TileRange.js\").default>} usedTiles Used tiles.\n   */\n  TileCache.prototype.expireCache = function expireCache (usedTiles) {\n    while (this.canExpireCache()) {\n      var tile = this.peekLast();\n      var zKey = tile.tileCoord[0].toString();\n      if (zKey in usedTiles && usedTiles[zKey].contains(tile.tileCoord)) {\n        break;\n      } else {\n        this.pop().dispose();\n      }\n    }\n  };\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  TileCache.prototype.pruneExceptNewestZ = function pruneExceptNewestZ () {\n    if (this.getCount() === 0) {\n      return;\n    }\n    var key = this.peekFirstKey();\n    var tileCoord = fromKey(key);\n    var z = tileCoord[0];\n    this.forEach(function(tile) {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.dispose();\n      }\n    }, this);\n  };\n\n  return TileCache;\n}(LRUCache));\n\n\nexport default TileCache;\n\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj,\n  targetCenter, targetResolution) {\n\n  var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n\n  var targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  var sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n        sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {import(\"./coordinate.js\").Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n  var dX = x - centroidX;\n  var dY = y - centroidY;\n  var distance = Math.sqrt(dX * dX + dY * dY);\n  return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio,\n  sourceResolution, sourceExtent, targetResolution, targetExtent,\n  triangulation, sources, gutter, opt_renderEdges) {\n\n  var context = createCanvasContext2D(Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height));\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  var sourceDataExtent = createEmpty();\n  sources.forEach(function(src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  var canvasWidthInUnits = getWidth(sourceDataExtent);\n  var canvasHeightInUnits = getHeight(sourceDataExtent);\n  var stitchContext = createCanvasContext2D(\n    Math.round(pixelRatio * canvasWidthInUnits / sourceResolution),\n    Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n\n  var stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function(src, i, arr) {\n    var xPos = src.extent[0] - sourceDataExtent[0];\n    var yPos = -(src.extent[3] - sourceDataExtent[3]);\n    var srcWidth = getWidth(src.extent);\n    var srcHeight = getHeight(src.extent);\n\n    stitchContext.drawImage(\n      src.image,\n      gutter, gutter,\n      src.image.width - 2 * gutter, src.image.height - 2 * gutter,\n      xPos * stitchScale, yPos * stitchScale,\n      srcWidth * stitchScale, srcHeight * stitchScale);\n  });\n\n  var targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function(triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    var source = triangle.source;\n    var target = triangle.target;\n    var x0 = source[0][0], y0 = source[0][1];\n    var x1 = source[1][0], y1 = source[1][1];\n    var x2 = source[2][0], y2 = source[2][1];\n    var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n    var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n    var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n    var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n    var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n    var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    var sourceNumericalShiftX = x0;\n    var sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    var augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0]\n    ];\n    var affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n    var centroidX = (u0 + u1 + u2) / 3;\n    var centroidY = (v0 + v1 + v2) / 3;\n    var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n    var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n    var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n\n    context.moveTo(p1[0], p1[1]);\n    context.lineTo(p0[0], p0[1]);\n    context.lineTo(p2[0], p2[1]);\n    context.clip();\n\n    context.transform(\n      affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n\n    context.translate(sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY);\n\n    context.scale(sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio);\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function(triangle, i, arr) {\n      var target = triangle.target;\n      var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport {boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight,\n  getTopLeft, getTopRight, getWidth, intersects} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {getTransform} from '../proj.js';\n\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\n\n  /**\n   * @type {import(\"../proj/Projection.js\").default}\n   * @private\n   */\n  this.sourceProj_ = sourceProj;\n\n  /**\n   * @type {import(\"../proj/Projection.js\").default}\n   * @private\n   */\n  this.targetProj_ = targetProj;\n\n  /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n  var transformInvCache = {};\n  var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n   * @private\n   */\n  this.transformInv_ = function(c) {\n    var key = c[0] + '/' + c[1];\n    if (!transformInvCache[key]) {\n      transformInvCache[key] = transformInv(c);\n    }\n    return transformInvCache[key];\n  };\n\n  /**\n   * @type {import(\"../extent.js\").Extent}\n   * @private\n   */\n  this.maxSourceExtent_ = maxSourceExtent;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n  /**\n   * @type {Array<Triangle>}\n   * @private\n   */\n  this.triangles_ = [];\n\n  /**\n   * Indicates that the triangulation crosses edge of the source projection.\n   * @type {boolean}\n   * @private\n   */\n  this.wrapsXInSource_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n    getWidth(this.sourceProj_.getExtent()) : null;\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n    getWidth(this.targetProj_.getExtent()) : null;\n\n  var destinationTopLeft = getTopLeft(targetExtent);\n  var destinationTopRight = getTopRight(targetExtent);\n  var destinationBottomRight = getBottomRight(targetExtent);\n  var destinationBottomLeft = getBottomLeft(targetExtent);\n  var sourceTopLeft = this.transformInv_(destinationTopLeft);\n  var sourceTopRight = this.transformInv_(destinationTopRight);\n  var sourceBottomRight = this.transformInv_(destinationBottomRight);\n  var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n  this.addQuad_(\n    destinationTopLeft, destinationTopRight,\n    destinationBottomRight, destinationBottomLeft,\n    sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft,\n    MAX_SUBDIVISION);\n\n  if (this.wrapsXInSource_) {\n    var leftBound = Infinity;\n    this.triangles_.forEach(function(triangle, i, arr) {\n      leftBound = Math.min(leftBound,\n        triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n    });\n\n    // Shift triangles to be as close to `leftBound` as possible\n    // (if the distance is more than `worldWidth / 2` it can be closer.\n    this.triangles_.forEach(function(triangle) {\n      if (Math.max(triangle.source[0][0], triangle.source[1][0],\n        triangle.source[2][0]) - leftBound > this.sourceWorldWidth_ / 2) {\n        var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n          [triangle.source[1][0], triangle.source[1][1]],\n          [triangle.source[2][0], triangle.source[2][1]]];\n        if ((newTriangle[0][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[0][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[1][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[1][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[2][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[2][0] -= this.sourceWorldWidth_;\n        }\n\n        // Rarely (if the extent contains both the dateline and prime meridian)\n        // the shift can in turn break some triangles.\n        // Detect this here and don't shift in such cases.\n        var minX = Math.min(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        var maxX = Math.max(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n          triangle.source = newTriangle;\n        }\n      }\n    }.bind(this));\n  }\n\n  transformInvCache = {};\n};\n\n/**\n * Adds triangle to the triangulation.\n * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n * @private\n */\nTriangulation.prototype.addTriangle_ = function addTriangle_ (a, b, c, aSrc, bSrc, cSrc) {\n  this.triangles_.push({\n    source: [aSrc, bSrc, cSrc],\n    target: [a, b, c]\n  });\n};\n\n/**\n * Adds quad (points in clock-wise order) to the triangulation\n * (and reprojects the vertices) if valid.\n * Performs quad subdivision if needed to increase precision.\n *\n * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n * @private\n */\nTriangulation.prototype.addQuad_ = function addQuad_ (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n\n  var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n  var sourceCoverageX = this.sourceWorldWidth_ ?\n    getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n  var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n  // when the quad is wrapped in the source projection\n  // it covers most of the projection extent, but not fully\n  var wrapsX = this.sourceProj_.canWrapX() &&\n               sourceCoverageX > 0.5 && sourceCoverageX < 1;\n\n  var needsSubdivision = false;\n\n  if (maxSubdivision > 0) {\n    if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n      var targetQuadExtent = boundingExtent([a, b, c, d]);\n      var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n      needsSubdivision = targetCoverageX > MAX_TRIANGLE_WIDTH ||\n        needsSubdivision;\n    }\n    if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n      needsSubdivision = sourceCoverageX > MAX_TRIANGLE_WIDTH ||\n          needsSubdivision;\n    }\n  }\n\n  if (!needsSubdivision && this.maxSourceExtent_) {\n    if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n      // whole quad outside source projection extent -> ignore\n      return;\n    }\n  }\n\n  if (!needsSubdivision) {\n    if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n      if (maxSubdivision > 0) {\n        needsSubdivision = true;\n      } else {\n        return;\n      }\n    }\n  }\n\n  if (maxSubdivision > 0) {\n    if (!needsSubdivision) {\n      var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n      var centerSrc = this.transformInv_(center);\n\n      var dx;\n      if (wrapsX) {\n        var centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n             modulo(cSrc[0], sourceWorldWidth)) / 2;\n        dx = centerSrcEstimX -\n            modulo(centerSrc[0], sourceWorldWidth);\n      } else {\n        dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n      }\n      var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n      var centerSrcErrorSquared = dx * dx + dy * dy;\n      needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n    }\n    if (needsSubdivision) {\n      if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n        // split horizontally (top & bottom)\n        var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n        var bcSrc = this.transformInv_(bc);\n        var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n        var daSrc = this.transformInv_(da);\n\n        this.addQuad_(\n          a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n        this.addQuad_(\n          da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n      } else {\n        // split vertically (left & right)\n        var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n        var abSrc = this.transformInv_(ab);\n        var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n        var cdSrc = this.transformInv_(cd);\n\n        this.addQuad_(\n          a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n        this.addQuad_(\n          ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n      }\n      return;\n    }\n  }\n\n  if (wrapsX) {\n    if (!this.canWrapXInSource_) {\n      return;\n    }\n    this.wrapsXInSource_ = true;\n  }\n\n  this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n  this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n};\n\n/**\n * Calculates extent of the 'source' coordinates from all the triangles.\n *\n * @return {import(\"../extent.js\").Extent} Calculated extent.\n */\nTriangulation.prototype.calculateSourceExtent = function calculateSourceExtent () {\n  var extent = createEmpty();\n\n  this.triangles_.forEach(function(triangle, i, arr) {\n    var src = triangle.source;\n    extendCoordinate(extent, src[0]);\n    extendCoordinate(extent, src[1]);\n    extendCoordinate(extent, src[2]);\n  });\n\n  return extent;\n};\n\n/**\n * @return {Array<Triangle>} Array of the calculated triangles.\n */\nTriangulation.prototype.getTriangles = function getTriangles () {\n  return this.triangles_;\n};\n\nexport default Triangulation;\n\n//# sourceMappingURL=Triangulation.js.map","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getArea, getCenter, getIntersection} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /*@__PURE__*/(function (Tile) {\n  function ReprojTile(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges\n  ) {\n    Tile.call(this, tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    var targetExtent = targetTileGrid.getTileCoordExtent(this.wrappedTileCoord_);\n    var maxTargetExtent = this.targetTileGrid_.getExtent();\n    var maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    var limitedTargetExtent = maxTargetExtent ?\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    var targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]);\n\n    var targetCenter = getCenter(limitedTargetExtent);\n    var sourceResolution = calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var errorThresholdInPixels = opt_errorThreshold !== undefined ?\n      opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n      sourceResolution * errorThresholdInPixels);\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    var sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n        sourceExtent[3] = clamp(\n          sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent, this.sourceZ_);\n\n      for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          var tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  if ( Tile ) ReprojTile.__proto__ = Tile;\n  ReprojTile.prototype = Object.create( Tile && Tile.prototype );\n  ReprojTile.prototype.constructor = ReprojTile;\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenSources_();\n    }\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  ReprojTile.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.reproject_ = function reproject_ () {\n    var sources = [];\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage()\n        });\n      }\n    }.bind(this));\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      var z = this.wrappedTileCoord_[0];\n      var size = this.targetTileGrid_.getTileSize(z);\n      var width = typeof size === 'number' ? size : size[0];\n      var height = typeof size === 'number' ? size : size[1];\n      var targetResolution = this.targetTileGrid_.getResolution(z);\n      var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n      var targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_);\n      this.canvas_ = renderReprojected(width, height, this.pixelRatio_,\n        sourceResolution, this.sourceTileGrid_.getExtent(),\n        targetResolution, targetExtent, this.triangulation_, sources,\n        this.gutter_, this.renderEdges_);\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.load = function load () {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      var leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          var sourceListenKey = listen(tile, EventType.CHANGE,\n            function(e) {\n              var state = tile.getState();\n              if (state == TileState.LOADED ||\n                    state == TileState.ERROR ||\n                    state == TileState.EMPTY) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            }, this);\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      }.bind(this));\n\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.unlistenSources_ = function unlistenSources_ () {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  };\n\n  return ReprojTile;\n}(Tile));\n\n\nexport default ReprojTile;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  var zRegEx = /\\{z\\}/g;\n  var xRegEx = /\\{x\\}/g;\n  var yRegEx = /\\{y\\}/g;\n  var dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, function() {\n            var y = -tileCoord[2] - 1;\n            return y.toString();\n          })\n          .replace(dashYRegEx, function() {\n            var z = tileCoord[0];\n            var range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            var y = range.getHeight() + tileCoord[2];\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  var len = templates.length;\n  var tileUrlFunctions = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        var h = tileCoordHash(tileCoord);\n        var index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  var urls = [];\n  var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    var startCharCode = match[1].charCodeAt(0);\n    var stopCharCode = match[2].charCodeAt(0);\n    var charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    var stop = parseInt(match[2], 10);\n    for (var i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n\n//# sourceMappingURL=tileurlfunction.js.map","/**\n * @module ol/source/Source\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\nimport SourceState from './State.js';\n\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings (`{@link module:ol/source/Source~Attribution}`)\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} projection\n * @property {SourceState} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /*@__PURE__*/(function (BaseObject) {\n  function Source(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\n      options.attributionsCollapsible : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {SourceState}\n     */\n    this.state_ = options.state !== undefined ?\n      options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n  }\n\n  if ( BaseObject ) Source.__proto__ = BaseObject;\n  Source.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Source.prototype.constructor = Source;\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  Source.prototype.getAttributions = function getAttributions () {\n    return this.attributions_;\n  };\n\n  /**\n   * @return {boolean} Aattributions are collapsible.\n   */\n  Source.prototype.getAttributionsCollapsible = function getAttributionsCollapsible () {\n    return this.attributionsCollapsible_;\n  };\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  Source.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  Source.prototype.getResolutions = function getResolutions () {\n    return abstract();\n  };\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {SourceState} State.\n   * @api\n   */\n  Source.prototype.getState = function getState () {\n    return this.state_;\n  };\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  Source.prototype.getWrapX = function getWrapX () {\n    return this.wrapX_;\n  };\n\n  /**\n   * Refreshes the source and finally dispatches a 'change' event.\n   * @api\n   */\n  Source.prototype.refresh = function refresh () {\n    this.changed();\n  };\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, `{@link module:ol/source/Source~Attribution}`,\n   *     or `undefined`.\n   * @api\n   */\n  Source.prototype.setAttributions = function setAttributions (attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  };\n\n  /**\n   * Set the state of the source.\n   * @param {SourceState} state State.\n   * @protected\n   */\n  Source.prototype.setState = function setState (state) {\n    this.state_ = state;\n    this.changed();\n  };\n\n  return Source;\n}(BaseObject));\n\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function(frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function(frameState) {\n    return [attributionLike];\n  };\n}\n\n\nexport default Source;\n\n//# sourceMappingURL=Source.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport TileRange, {createOrUpdate as createOrUpdateTileRange} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\n\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Sizes.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = function TileGrid(options) {\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n  /**\n   * @private\n   * @type {!Array<number>}\n   */\n  this.resolutions_ = options.resolutions;\n  assert(isSorted(this.resolutions_, function(a, b) {\n    return b - a;\n  }, true), 17); // `resolutions` must be sorted in descending order\n\n\n  // check if we've got a consistent zoom factor and origin\n  var zoomFactor;\n  if (!options.origins) {\n    for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n      if (!zoomFactor) {\n        zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n      } else {\n        if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n          zoomFactor = undefined;\n          break;\n        }\n      }\n    }\n  }\n\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zoomFactor_ = zoomFactor;\n\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.maxZoom = this.resolutions_.length - 1;\n\n  /**\n   * @private\n   * @type {import(\"../coordinate.js\").Coordinate}\n   */\n  this.origin_ = options.origin !== undefined ? options.origin : null;\n\n  /**\n   * @private\n   * @type {Array<import(\"../coordinate.js\").Coordinate>}\n   */\n  this.origins_ = null;\n  if (options.origins !== undefined) {\n    this.origins_ = options.origins;\n    assert(this.origins_.length == this.resolutions_.length,\n      20); // Number of `origins` and `resolutions` must be equal\n  }\n\n  var extent = options.extent;\n\n  if (extent !== undefined &&\n      !this.origin_ && !this.origins_) {\n    this.origin_ = getTopLeft(extent);\n  }\n\n  assert(\n    (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n    18); // Either `origin` or `origins` must be configured, never both\n\n  /**\n   * @private\n   * @type {Array<number|import(\"../size.js\").Size>}\n   */\n  this.tileSizes_ = null;\n  if (options.tileSizes !== undefined) {\n    this.tileSizes_ = options.tileSizes;\n    assert(this.tileSizes_.length == this.resolutions_.length,\n      19); // Number of `tileSizes` and `resolutions` must be equal\n  }\n\n  /**\n   * @private\n   * @type {number|import(\"../size.js\").Size}\n   */\n  this.tileSize_ = options.tileSize !== undefined ?\n    options.tileSize :\n    !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n  assert(\n    (!this.tileSize_ && this.tileSizes_) ||\n      (this.tileSize_ && !this.tileSizes_),\n    22); // Either `tileSize` or `tileSizes` must be configured, never both\n\n  /**\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.extent_ = extent !== undefined ? extent : null;\n\n\n  /**\n   * @private\n   * @type {Array<import(\"../TileRange.js\").default>}\n   */\n  this.fullTileRanges_ = null;\n\n  /**\n   * @private\n   * @type {import(\"../size.js\").Size}\n   */\n  this.tmpSize_ = [0, 0];\n\n  if (options.sizes !== undefined) {\n    this.fullTileRanges_ = options.sizes.map(function(size, z) {\n      var tileRange = new TileRange(\n        Math.min(0, size[0]), Math.max(size[0] - 1, -1),\n        Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n      return tileRange;\n    }, this);\n  } else if (extent) {\n    this.calculateTileRanges_(extent);\n  }\n\n};\n\n/**\n * Call a function with each tile coordinate for a given extent and zoom level.\n *\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} zoom Integer zoom level.\n * @param {function(import(\"../tilecoord.js\").TileCoord)} callback Function called with each tile coordinate.\n * @api\n */\nTileGrid.prototype.forEachTileCoord = function forEachTileCoord (extent, zoom, callback) {\n  var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n  for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n    for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n      callback([zoom, i, j]);\n    }\n  }\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {function(this: T, number, import(\"../TileRange.js\").default): boolean} callback Callback.\n * @param {T=} opt_this The object to use as `this` in `callback`.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {boolean} Callback succeeded.\n * @template T\n */\nTileGrid.prototype.forEachTileCoordParentTileRange = function forEachTileCoordParentTileRange (tileCoord, callback, opt_this, opt_tileRange, opt_extent) {\n  var tileRange, x, y;\n  var tileCoordExtent = null;\n  var z = tileCoord[0] - 1;\n  if (this.zoomFactor_ === 2) {\n    x = tileCoord[1];\n    y = tileCoord[2];\n  } else {\n    tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n  }\n  while (z >= this.minZoom) {\n    if (this.zoomFactor_ === 2) {\n      x = Math.floor(x / 2);\n      y = Math.floor(y / 2);\n      tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n    } else {\n      tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n    }\n    if (callback.call(opt_this, z, tileRange)) {\n      return true;\n    }\n    --z;\n  }\n  return false;\n};\n\n/**\n * Get the extent for this tile grid, if it was configured.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nTileGrid.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the maximum zoom level for the grid.\n * @return {number} Max zoom.\n * @api\n */\nTileGrid.prototype.getMaxZoom = function getMaxZoom () {\n  return this.maxZoom;\n};\n\n/**\n * Get the minimum zoom level for the grid.\n * @return {number} Min zoom.\n * @api\n */\nTileGrid.prototype.getMinZoom = function getMinZoom () {\n  return this.minZoom;\n};\n\n/**\n * Get the origin for the grid at the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {import(\"../coordinate.js\").Coordinate} Origin.\n * @api\n */\nTileGrid.prototype.getOrigin = function getOrigin (z) {\n  if (this.origin_) {\n    return this.origin_;\n  } else {\n    return this.origins_[z];\n  }\n};\n\n/**\n * Get the resolution for the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {number} Resolution.\n * @api\n */\nTileGrid.prototype.getResolution = function getResolution (z) {\n  return this.resolutions_[z];\n};\n\n/**\n * Get the list of resolutions for the tile grid.\n * @return {Array<number>} Resolutions.\n * @api\n */\nTileGrid.prototype.getResolutions = function getResolutions () {\n  return this.resolutions_;\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {import(\"../TileRange.js\").default} Tile range.\n */\nTileGrid.prototype.getTileCoordChildTileRange = function getTileCoordChildTileRange (tileCoord, opt_tileRange, opt_extent) {\n  if (tileCoord[0] < this.maxZoom) {\n    if (this.zoomFactor_ === 2) {\n      var minX = tileCoord[1] * 2;\n      var minY = tileCoord[2] * 2;\n      return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n    }\n    var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    return this.getTileRangeForExtentAndZ(\n      tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n  }\n  return null;\n};\n\n/**\n * Get the extent for a tile range.\n * @param {number} z Integer zoom level.\n * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nTileGrid.prototype.getTileRangeExtent = function getTileRangeExtent (z, tileRange, opt_extent) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n  var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n  var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n  var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n  var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get a tile range for the given extent and integer zoom level.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} z Integer zoom level.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n * @return {import(\"../TileRange.js\").default} Tile range.\n */\nTileGrid.prototype.getTileRangeForExtentAndZ = function getTileRangeForExtentAndZ (extent, z, opt_tileRange) {\n  var tileCoord = tmpTileCoord;\n  this.getTileCoordForXYAndZ_(extent[0], extent[1], z, false, tileCoord);\n  var minX = tileCoord[1];\n  var minY = tileCoord[2];\n  this.getTileCoordForXYAndZ_(extent[2], extent[3], z, true, tileCoord);\n  return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n */\nTileGrid.prototype.getTileCoordCenter = function getTileCoordCenter (tileCoord) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  return [\n    origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n    origin[1] + (tileCoord[2] + 0.5) * tileSize[1] * resolution\n  ];\n};\n\n/**\n * Get the extent of a tile coordinate.\n *\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nTileGrid.prototype.getTileCoordExtent = function getTileCoordExtent (tileCoord, opt_extent) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n  var minY = origin[1] + tileCoord[2] * tileSize[1] * resolution;\n  var maxX = minX + tileSize[0] * resolution;\n  var maxY = minY + tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get the tile coordinate for the given map coordinate and resolution.This\n * method considers that coordinates that intersect tile boundaries should be\n * assigned the higher tile coordinate.\n *\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndResolution = function getTileCoordForCoordAndResolution (coordinate, resolution, opt_tileCoord) {\n  return this.getTileCoordForXYAndResolution_(\n    coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n};\n\n/**\n * Note that this method should not be called for resolutions that correspond\n * to an integer zoom level.Instead call the `getTileCoordForXYAndZ_` method.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} resolution Resolution (for a non-integer zoom level).\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndResolution_ = function getTileCoordForXYAndResolution_ (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n  var z = this.getZForResolution(resolution);\n  var scale = resolution / this.getResolution(z);\n  var origin = this.getOrigin(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = scale * xFromOrigin / tileSize[0];\n  var tileCoordY = scale * yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n * they should have separate implementations.This method is for integer zoom\n * levels.The other method should only be called for resolutions corresponding\n * to non-integer zoom levels.\n * @param {number} x Map x coordinate.\n * @param {number} y Map y coordinate.\n * @param {number} z Integer zoom level.\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndZ_ = function getTileCoordForXYAndZ_ (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = xFromOrigin / tileSize[0];\n  var tileCoordY = yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Get a tile coordinate given a map coordinate and zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} z Zoom level.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndZ = function getTileCoordForCoordAndZ (coordinate, z, opt_tileCoord) {\n  return this.getTileCoordForXYAndZ_(\n    coordinate[0], coordinate[1], z, false, opt_tileCoord);\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {number} Tile resolution.\n */\nTileGrid.prototype.getTileCoordResolution = function getTileCoordResolution (tileCoord) {\n  return this.resolutions_[tileCoord[0]];\n};\n\n/**\n * Get the tile size for a zoom level. The type of the return value matches the\n * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n * @param {number} z Z.\n * @return {number|import(\"../size.js\").Size} Tile size.\n * @api\n */\nTileGrid.prototype.getTileSize = function getTileSize (z) {\n  if (this.tileSize_) {\n    return this.tileSize_;\n  } else {\n    return this.tileSizes_[z];\n  }\n};\n\n/**\n * @param {number} z Zoom level.\n * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n */\nTileGrid.prototype.getFullTileRange = function getFullTileRange (z) {\n  if (!this.fullTileRanges_) {\n    return null;\n  } else {\n    return this.fullTileRanges_[z];\n  }\n};\n\n/**\n * @param {number} resolution Resolution.\n * @param {number=} opt_direction If 0, the nearest resolution will be used.\n *   If 1, the nearest lower resolution will be used. If -1, the nearest\n *   higher resolution will be used. Default is 0.\n * @return {number} Z.\n * @api\n */\nTileGrid.prototype.getZForResolution = function getZForResolution (resolution, opt_direction) {\n  var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n  return clamp(z, this.minZoom, this.maxZoom);\n};\n\n/**\n * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n * @private\n */\nTileGrid.prototype.calculateTileRanges_ = function calculateTileRanges_ (extent) {\n  var length = this.resolutions_.length;\n  var fullTileRanges = new Array(length);\n  for (var z = this.minZoom; z < length; ++z) {\n    fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n  }\n  this.fullTileRanges_ = fullTileRanges;\n};\n\n\nexport default TileGrid;\n\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {toSize} from './size.js';\nimport {containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth} from './extent.js';\nimport Corner from './extent/Corner.js';\nimport {get as getProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  var tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  var z = tileCoord[0];\n  var center = tileGrid.getTileCoordCenter(tileCoord);\n  var projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    var worldWidth = getWidth(projectionExtent);\n    var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize\n  });\n}\n\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  /** @type {XYZOptions} */\n  var xyzOptions = opt_options || {};\n\n  var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  /** @type {import(\"./tilegrid/TileGrid.js\").Options} */\n  var gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize\n    )\n  };\n  return new TileGrid(gridOptions);\n}\n\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n  var maxZoom = opt_maxZoom !== undefined ?\n    opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  var height = getHeight(extent);\n  var width = getWidth(extent);\n\n  var tileSize = toSize(opt_tileSize !== undefined ?\n    opt_tileSize : DEFAULT_TILE_SIZE);\n  var maxResolution = Math.max(\n    width / tileSize[0], height / tileSize[1]);\n\n  var length = maxZoom + 1;\n  var resolutions = new Array(length);\n  for (var z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n  var extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  var extent = projection.getExtent();\n  if (!extent) {\n    var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n\n//# sourceMappingURL=tilegrid.js.map","/**\n * @module ol/source/Tile\n */\nimport {abstract} from '../util.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport {equivalent} from '../proj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport Source from './Source.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {wrapX, getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /*@__PURE__*/(function (Source) {\n  function TileSource(options) {\n\n    Source.call(this, {\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n      options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n  }\n\n  if ( Source ) TileSource.__proto__ = Source;\n  TileSource.prototype = Object.create( Source && Source.prototype );\n  TileSource.prototype.constructor = TileSource;\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  TileSource.prototype.canExpireCache = function canExpireCache () {\n    return this.tileCache.canExpireCache();\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, import(\"../TileRange.js\").default>} usedTiles Used tiles.\n   */\n  TileSource.prototype.expireCache = function expireCache (projection, usedTiles) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  TileSource.prototype.forEachLoadedTile = function forEachLoadedTile (projection, z, tileRange, callback) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    var covered = true;\n    var tile, tileCoordKey, loaded;\n    for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = (callback(tile) !== false);\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  TileSource.prototype.getGutterForProjection = function getGutterForProjection (projection) {\n    return 0;\n  };\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  TileSource.prototype.getKey = function getKey () {\n    return this.key_;\n  };\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  TileSource.prototype.setKey = function setKey (key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  TileSource.prototype.getOpaque = function getOpaque (projection) {\n    return this.opaque_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.getResolutions = function getResolutions () {\n    return this.tileGrid.getResolutions();\n  };\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  TileSource.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    return abstract();\n  };\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  TileSource.prototype.getTileGrid = function getTileGrid () {\n    return this.tileGrid;\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  TileSource.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  TileSource.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    var thisProj = this.getProjection();\n    if (thisProj && !equivalent(thisProj, projection)) {\n      return null;\n    } else {\n      return this.tileCache;\n    }\n  };\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  TileSource.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return this.tilePixelRatio_;\n  };\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  TileSource.prototype.getTilePixelSize = function getTilePixelSize (z, pixelRatio, projection) {\n    var tileGrid = this.getTileGridForProjection(projection);\n    var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  };\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  TileSource.prototype.getTileCoordForTileUrlFunction = function getTileCoordForTileUrlFunction (tileCoord, opt_projection) {\n    var projection = opt_projection !== undefined ?\n      opt_projection : this.getProjection();\n    var tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.refresh = function refresh () {\n    this.tileCache.clear();\n    this.changed();\n  };\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  TileSource.prototype.useTile = function useTile (z, x, y, projection) {};\n\n  return TileSource;\n}(Source));\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport var TileSourceEvent = /*@__PURE__*/(function (Event) {\n  function TileSourceEvent(type, tile) {\n\n    Event.call(this, type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n\n  }\n\n  if ( Event ) TileSourceEvent.__proto__ = Event;\n  TileSourceEvent.prototype = Object.create( Event && Event.prototype );\n  TileSourceEvent.prototype.constructor = TileSourceEvent;\n\n  return TileSourceEvent;\n}(Event));\n\nexport default TileSource;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror'\n\n};\n\n//# sourceMappingURL=TileEventType.js.map","/**\n * @module ol/source/TileImage\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {getUid} from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from './UrlTile.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /*@__PURE__*/(function (UrlTile) {\n  function TileImage(options) {\n\n    UrlTile.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction ?\n        options.tileLoadFunction : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass = options.tileClass !== undefined ?\n      options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  if ( UrlTile ) TileImage.__proto__ = UrlTile;\n  TileImage.prototype = Object.create( UrlTile && UrlTile.prototype );\n  TileImage.prototype.constructor = TileImage;\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.canExpireCache = function canExpireCache () {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.canExpireCache.call(this);\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (var key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.expireCache = function expireCache (projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      UrlTile.prototype.expireCache.call(this, projection, usedTiles);\n      return;\n    }\n    var usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n    for (var id in this.tileCacheForProjection) {\n      var tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getGutterForProjection = function getGutterForProjection (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  };\n\n  /**\n   * @return {number} Gutter.\n   */\n  TileImage.prototype.getGutter = function getGutter () {\n    return 0;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getOpaque = function getOpaque (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return false;\n    } else {\n      return UrlTile.prototype.getOpaque.call(this, projection);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileGridForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      var projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n      }\n      return (\n        /** @type {!import(\"../tilegrid/TileGrid.js\").default} */ (this.tileGridForProjection[projKey])\n      );\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileCacheForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection(); if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      var projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  TileImage.prototype.createTile_ = function createTile_ (z, x, y, pixelRatio, projection, key) {\n    var tileCoord = [z, x, y];\n    var urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord, projection);\n    var tileUrl = urlTileCoord ?\n      this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n    var tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions);\n    tile.key = key;\n    listen(tile, EventType.CHANGE,\n      this.handleTileChange, this);\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var sourceProjection = /** @type {!import(\"../proj/Projection.js\").default} */ (this.getProjection());\n    if (!ENABLE_RASTER_REPROJECTION ||\n        !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n      return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n    } else {\n      var cache = this.getTileCacheForProjection(projection);\n      var tileCoord = [z, x, y];\n      var tile;\n      var tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = /** @type {!import(\"../Tile.js\").default} */ (cache.get(tileCoordKey));\n      }\n      var key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        var targetTileGrid = this.getTileGridForProjection(projection);\n        var wrappedTileCoord =\n            this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var newTile = new ReprojTile(\n          sourceProjection, sourceTileGrid,\n          projection, targetTileGrid,\n          tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function(z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this), this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_);\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  TileImage.prototype.getTileInternal = function getTileInternal (z, x, y, pixelRatio, projection) {\n    var tile = null;\n    var tileCoordKey = getKeyZXY(z, x, y);\n    var key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        var interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  TileImage.prototype.setRenderReprojectionEdges = function setRenderReprojectionEdges (render) {\n    if (!ENABLE_RASTER_REPROJECTION ||\n        this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (var id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  TileImage.prototype.setTileGridForProjection = function setTileGridForProjection (projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      var proj = getProjection(projection);\n      if (proj) {\n        var projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  };\n\n  return TileImage;\n}(UrlTile));\n\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\n\nexport default TileImage;\n\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nvar XYZ = /*@__PURE__*/(function (TileImage) {\n  function XYZ(opt_options) {\n    var options = opt_options || {};\n    var projection = options.projection !== undefined ?\n      options.projection : 'EPSG:3857';\n\n    var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n      createXYZ({\n        extent: extentFromProjection(projection),\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize\n      });\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n  }\n\n  if ( TileImage ) XYZ.__proto__ = TileImage;\n  XYZ.prototype = Object.create( TileImage && TileImage.prototype );\n  XYZ.prototype.constructor = XYZ;\n\n  return XYZ;\n}(TileImage));\n\nexport default XYZ;\n\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/source/UrlTile\n */\nimport {getUid} from '../util.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileEventType from './TileEventType.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /*@__PURE__*/(function (TileSource) {\n  function UrlTile(options) {\n\n    TileSource.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ = !options.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").UrlFunction}\n     */\n    this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(this) : nullTileUrlFunction;\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    if (options.tileUrlFunction) {\n      this.setTileUrlFunction(options.tileUrlFunction, this.key_);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n  }\n\n  if ( TileSource ) UrlTile.__proto__ = TileSource;\n  UrlTile.prototype = Object.create( TileSource && TileSource.prototype );\n  UrlTile.prototype.constructor = UrlTile;\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  UrlTile.prototype.getTileLoadFunction = function getTileLoadFunction () {\n    return this.tileLoadFunction;\n  };\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  UrlTile.prototype.getTileUrlFunction = function getTileUrlFunction () {\n    return this.tileUrlFunction;\n  };\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  UrlTile.prototype.getUrls = function getUrls () {\n    return this.urls;\n  };\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  UrlTile.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    var uid = getUid(tile);\n    var tileState = tile.getState();\n    var type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n        (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n          TileEventType.TILELOADEND : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  };\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  UrlTile.prototype.setTileLoadFunction = function setTileLoadFunction (tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  };\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string=} key Optional new tile key for the source.\n   * @api\n   */\n  UrlTile.prototype.setTileUrlFunction = function setTileUrlFunction (tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  UrlTile.prototype.setUrl = function setUrl (url) {\n    var urls = this.urls = expandUrl(url);\n    this.setUrls(urls);\n  };\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  UrlTile.prototype.setUrls = function setUrls (urls) {\n    this.urls = urls;\n    var key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  UrlTile.prototype.useTile = function useTile (z, x, y) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  };\n\n  return UrlTile;\n}(TileSource));\n\n\nexport default UrlTile;\n\n//# sourceMappingURL=UrlTile.js.map","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&#169; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = /*@__PURE__*/(function (XYZ) {\n  function OSM(opt_options) {\n\n    var options = opt_options || {};\n\n    var attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    var crossOrigin = options.crossOrigin !== undefined ?\n      options.crossOrigin : 'anonymous';\n\n    var url = options.url !== undefined ?\n      options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    XYZ.call(this, {\n      attributions: attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      url: url,\n      wrapX: options.wrapX,\n      attributionsCollapsible: false\n    });\n\n  }\n\n  if ( XYZ ) OSM.__proto__ = XYZ;\n  OSM.prototype = Object.create( XYZ && XYZ.prototype );\n  OSM.prototype.constructor = OSM;\n\n  return OSM;\n}(XYZ));\n\nexport default OSM;\n\n//# sourceMappingURL=OSM.js.map","/**\n * @module ol/source/Stamen\n */\n\nimport {ATTRIBUTION as OSM_ATTRIBUTION} from './OSM.js';\nimport XYZ from './XYZ.js';\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar ATTRIBUTIONS = [\n  'Map tiles by <a href=\"https://stamen.com/\">Stamen Design</a>, ' +\n        'under <a href=\"https://creativecommons.org/licenses/by/3.0/\">CC BY' +\n        ' 3.0</a>.',\n  OSM_ATTRIBUTION\n];\n\n\n/**\n * @type {Object<string, {extension: string, opaque: boolean}>}\n */\nvar LayerConfig = {\n  'terrain': {\n    extension: 'jpg',\n    opaque: true\n  },\n  'terrain-background': {\n    extension: 'jpg',\n    opaque: true\n  },\n  'terrain-labels': {\n    extension: 'png',\n    opaque: false\n  },\n  'terrain-lines': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-background': {\n    extension: 'png',\n    opaque: true\n  },\n  'toner': {\n    extension: 'png',\n    opaque: true\n  },\n  'toner-hybrid': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-labels': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-lines': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-lite': {\n    extension: 'png',\n    opaque: true\n  },\n  'watercolor': {\n    extension: 'jpg',\n    opaque: true\n  }\n};\n\n\n/**\n * @type {Object<string, {minZoom: number, maxZoom: number}>}\n */\nvar ProviderConfig = {\n  'terrain': {\n    minZoom: 4,\n    maxZoom: 18\n  },\n  'toner': {\n    minZoom: 0,\n    maxZoom: 20\n  },\n  'watercolor': {\n    minZoom: 1,\n    maxZoom: 16\n  }\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=2048] Cache size.\n * @property {string} layer Layer name.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the Stamen tile server.\n * @api\n */\nvar Stamen = /*@__PURE__*/(function (XYZ) {\n  function Stamen(options) {\n    var i = options.layer.indexOf('-');\n    var provider = i == -1 ? options.layer : options.layer.slice(0, i);\n    var providerConfig = ProviderConfig[provider];\n\n    var layerConfig = LayerConfig[options.layer];\n\n    var url = options.url !== undefined ? options.url :\n      'https://stamen-tiles-{a-d}.a.ssl.fastly.net/' + options.layer +\n        '/{z}/{x}/{y}.' + layerConfig.extension;\n\n    XYZ.call(this, {\n      attributions: ATTRIBUTIONS,\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      maxZoom: options.maxZoom != undefined ? options.maxZoom : providerConfig.maxZoom,\n      minZoom: options.minZoom != undefined ? options.minZoom : providerConfig.minZoom,\n      opaque: layerConfig.opaque,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      url: url,\n      wrapX: options.wrapX\n    });\n\n  }\n\n  if ( XYZ ) Stamen.__proto__ = XYZ;\n  Stamen.prototype = Object.create( XYZ && XYZ.prototype );\n  Stamen.prototype.constructor = Stamen;\n\n  return Stamen;\n}(XYZ));\n\nexport default Stamen;\n\n//# sourceMappingURL=Stamen.js.map","import {Map, View} from 'ol';\nimport TileLayer from 'ol/layer/Tile';\nimport XYZ from 'ol/source/XYZ';\nimport { fromLonLat } from 'ol/proj';\nimport Stamen from 'ol/source/Stamen';\n\nnew Map({\n  target: 'map',\n  view: new View({\n    center: fromLonLat([71.0690, 42.3690]),\n    zoom: 4 \n  }),\n  layers: [\n    new TileLayer({\n      source: Stamen(\"watercolor\")\n    })\n  ]\n});\n\n\n\n    \n\n/*\nmap.addLayer(layer);\n\n    new TileLayer({\n      source: new XYZ({\n        url: 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n      })\n    })\n  ],\n  view: new View({\n    center: [0, 0],\n    zoom: 2\n  })\n});\n\nnew Map({\n  target: 'map',\n  layers: [\n\n    var basemap = new ol.Map({\n      target: 'map'\n      layers: [],\n      view: new ol.View({\n        \n      })\n    })\n\n    */"],"sourceRoot":""}